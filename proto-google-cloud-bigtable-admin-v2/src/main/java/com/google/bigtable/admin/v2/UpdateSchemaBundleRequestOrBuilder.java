/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/bigtable/admin/v2/bigtable_table_admin.proto

// Protobuf Java Version: 3.25.8
package com.google.bigtable.admin.v2;

public interface UpdateSchemaBundleRequestOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.bigtable.admin.v2.UpdateSchemaBundleRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * Required. The schema bundle to update.
   *
   * The schema bundle's `name` field is used to identify the schema bundle to
   * update. Values are of the form
   * `projects/{project}/instances/{instance}/tables/{table}/schemaBundles/{schema_bundle}`
   * </pre>
   *
   * <code>
   * .google.bigtable.admin.v2.SchemaBundle schema_bundle = 1 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   *
   * @return Whether the schemaBundle field is set.
   */
  boolean hasSchemaBundle();

  /**
   *
   *
   * <pre>
   * Required. The schema bundle to update.
   *
   * The schema bundle's `name` field is used to identify the schema bundle to
   * update. Values are of the form
   * `projects/{project}/instances/{instance}/tables/{table}/schemaBundles/{schema_bundle}`
   * </pre>
   *
   * <code>
   * .google.bigtable.admin.v2.SchemaBundle schema_bundle = 1 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   *
   * @return The schemaBundle.
   */
  com.google.bigtable.admin.v2.SchemaBundle getSchemaBundle();

  /**
   *
   *
   * <pre>
   * Required. The schema bundle to update.
   *
   * The schema bundle's `name` field is used to identify the schema bundle to
   * update. Values are of the form
   * `projects/{project}/instances/{instance}/tables/{table}/schemaBundles/{schema_bundle}`
   * </pre>
   *
   * <code>
   * .google.bigtable.admin.v2.SchemaBundle schema_bundle = 1 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   */
  com.google.bigtable.admin.v2.SchemaBundleOrBuilder getSchemaBundleOrBuilder();

  /**
   *
   *
   * <pre>
   * Optional. The list of fields to update.
   * </pre>
   *
   * <code>.google.protobuf.FieldMask update_mask = 2 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return Whether the updateMask field is set.
   */
  boolean hasUpdateMask();

  /**
   *
   *
   * <pre>
   * Optional. The list of fields to update.
   * </pre>
   *
   * <code>.google.protobuf.FieldMask update_mask = 2 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return The updateMask.
   */
  com.google.protobuf.FieldMask getUpdateMask();

  /**
   *
   *
   * <pre>
   * Optional. The list of fields to update.
   * </pre>
   *
   * <code>.google.protobuf.FieldMask update_mask = 2 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  com.google.protobuf.FieldMaskOrBuilder getUpdateMaskOrBuilder();

  /**
   *
   *
   * <pre>
   * Optional. If set, ignore the safety checks when updating the Schema Bundle.
   * The safety checks are:
   * - The new Schema Bundle is backwards compatible with the existing Schema
   * Bundle.
   * </pre>
   *
   * <code>bool ignore_warnings = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The ignoreWarnings.
   */
  boolean getIgnoreWarnings();
}
