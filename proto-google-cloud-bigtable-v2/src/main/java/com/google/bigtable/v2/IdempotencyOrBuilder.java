/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/bigtable/v2/data.proto

// Protobuf Java Version: 3.25.8
package com.google.bigtable.v2;

public interface IdempotencyOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.bigtable.v2.Idempotency)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * Unique token used to identify replays of this mutation.
   * Must be at least 8 bytes long.
   * </pre>
   *
   * <code>bytes token = 1;</code>
   *
   * @return The token.
   */
  com.google.protobuf.ByteString getToken();

  /**
   *
   *
   * <pre>
   * Client-assigned timestamp when the mutation's first attempt was sent.
   * Used to reject mutations that arrive after idempotency protection may
   * have expired. May cause spurious rejections if clock skew is too high.
   *
   * Leave unset or zero to always accept the mutation, at the risk of
   * double counting if the protection for previous attempts has expired.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp start_time = 2;</code>
   *
   * @return Whether the startTime field is set.
   */
  boolean hasStartTime();

  /**
   *
   *
   * <pre>
   * Client-assigned timestamp when the mutation's first attempt was sent.
   * Used to reject mutations that arrive after idempotency protection may
   * have expired. May cause spurious rejections if clock skew is too high.
   *
   * Leave unset or zero to always accept the mutation, at the risk of
   * double counting if the protection for previous attempts has expired.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp start_time = 2;</code>
   *
   * @return The startTime.
   */
  com.google.protobuf.Timestamp getStartTime();

  /**
   *
   *
   * <pre>
   * Client-assigned timestamp when the mutation's first attempt was sent.
   * Used to reject mutations that arrive after idempotency protection may
   * have expired. May cause spurious rejections if clock skew is too high.
   *
   * Leave unset or zero to always accept the mutation, at the risk of
   * double counting if the protection for previous attempts has expired.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp start_time = 2;</code>
   */
  com.google.protobuf.TimestampOrBuilder getStartTimeOrBuilder();
}
