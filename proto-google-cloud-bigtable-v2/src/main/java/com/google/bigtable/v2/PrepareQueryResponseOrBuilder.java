/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/bigtable/v2/bigtable.proto

// Protobuf Java Version: 3.25.5
package com.google.bigtable.v2;

public interface PrepareQueryResponseOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.bigtable.v2.PrepareQueryResponse)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * Structure of rows in the response stream of `ExecuteQueryResponse` for the
   * returned `prepared_query`.
   * </pre>
   *
   * <code>.google.bigtable.v2.ResultSetMetadata metadata = 1;</code>
   *
   * @return Whether the metadata field is set.
   */
  boolean hasMetadata();

  /**
   *
   *
   * <pre>
   * Structure of rows in the response stream of `ExecuteQueryResponse` for the
   * returned `prepared_query`.
   * </pre>
   *
   * <code>.google.bigtable.v2.ResultSetMetadata metadata = 1;</code>
   *
   * @return The metadata.
   */
  com.google.bigtable.v2.ResultSetMetadata getMetadata();

  /**
   *
   *
   * <pre>
   * Structure of rows in the response stream of `ExecuteQueryResponse` for the
   * returned `prepared_query`.
   * </pre>
   *
   * <code>.google.bigtable.v2.ResultSetMetadata metadata = 1;</code>
   */
  com.google.bigtable.v2.ResultSetMetadataOrBuilder getMetadataOrBuilder();

  /**
   *
   *
   * <pre>
   * A serialized prepared query. Clients should treat this as an opaque
   * blob of bytes to send in `ExecuteQueryRequest`.
   * </pre>
   *
   * <code>bytes prepared_query = 2;</code>
   *
   * @return The preparedQuery.
   */
  com.google.protobuf.ByteString getPreparedQuery();

  /**
   *
   *
   * <pre>
   * The time at which the prepared query token becomes invalid.
   * A token may become invalid early due to changes in the data being read, but
   * it provides a guideline to refresh query plans asynchronously.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp valid_until = 3;</code>
   *
   * @return Whether the validUntil field is set.
   */
  boolean hasValidUntil();

  /**
   *
   *
   * <pre>
   * The time at which the prepared query token becomes invalid.
   * A token may become invalid early due to changes in the data being read, but
   * it provides a guideline to refresh query plans asynchronously.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp valid_until = 3;</code>
   *
   * @return The validUntil.
   */
  com.google.protobuf.Timestamp getValidUntil();

  /**
   *
   *
   * <pre>
   * The time at which the prepared query token becomes invalid.
   * A token may become invalid early due to changes in the data being read, but
   * it provides a guideline to refresh query plans asynchronously.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp valid_until = 3;</code>
   */
  com.google.protobuf.TimestampOrBuilder getValidUntilOrBuilder();
}
