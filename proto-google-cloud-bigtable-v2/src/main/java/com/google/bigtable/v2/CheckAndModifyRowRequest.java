/*
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/bigtable/v2/bigtable.proto

package com.google.bigtable.v2;

/**
 *
 *
 * <pre>
 * Request message for Bigtable.CheckAndMutateRow.
 * </pre>
 *
 * Protobuf type {@code google.bigtable.v2.CheckAndMutateRowRequest}
 */
public final class CheckAndModifyRowRequest extends com.google.protobuf.GeneratedMessageV3
    implements
    // @@protoc_insertion_point(message_implements:google.bigtable.v2.CheckAndMutateRowRequest)
    CheckAndModifyRowRequestOrBuilder {
  private static final long serialVersionUID = 0L;
  // Use CheckAndMutateRowRequest.newBuilder() to construct.
  private CheckAndModifyRowRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }

  private CheckAndModifyRowRequest() {
    tableName_ = "";
    appProfileId_ = "";
    rowKey_ = com.google.protobuf.ByteString.EMPTY;
    rules_ = java.util.Collections.emptyList();
  }

  @Override
  @SuppressWarnings({"unused"})
  protected Object newInstance(UnusedPrivateParameter unused) {
    return new CheckAndModifyRowRequest();
  }

  @Override
  public final com.google.protobuf.UnknownFieldSet getUnknownFields() {
    return this.unknownFields;
  }

  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return BigtableProto
        .internal_static_google_bigtable_v2_CheckAndMutateRowRequest_descriptor;
  }

  @Override
  protected FieldAccessorTable
      internalGetFieldAccessorTable() {
    return BigtableProto
        .internal_static_google_bigtable_v2_CheckAndMutateRowRequest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            CheckAndModifyRowRequest.class,
            Builder.class);
  }

  public static final int TABLE_NAME_FIELD_NUMBER = 1;

  @SuppressWarnings("serial")
  private volatile Object tableName_ = "";
  /**
   *
   *
   * <pre>
   * Required. The unique name of the table to which the conditional mutation
   * should be applied. Values are of the form
   * `projects/&lt;project&gt;/instances/&lt;instance&gt;/tables/&lt;table&gt;`.
   * </pre>
   *
   * <code>
   * string table_name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = { ... }
   * </code>
   *
   * @return The tableName.
   */
  @Override
  public String getTableName() {
    Object ref = tableName_;
    if (ref instanceof String) {
      return (String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      String s = bs.toStringUtf8();
      tableName_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * Required. The unique name of the table to which the conditional mutation
   * should be applied. Values are of the form
   * `projects/&lt;project&gt;/instances/&lt;instance&gt;/tables/&lt;table&gt;`.
   * </pre>
   *
   * <code>
   * string table_name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = { ... }
   * </code>
   *
   * @return The bytes for tableName.
   */
  @Override
  public com.google.protobuf.ByteString getTableNameBytes() {
    Object ref = tableName_;
    if (ref instanceof String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((String) ref);
      tableName_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int APP_PROFILE_ID_FIELD_NUMBER = 7;

  @SuppressWarnings("serial")
  private volatile Object appProfileId_ = "";
  /**
   *
   *
   * <pre>
   * This value specifies routing for replication. If not specified, the
   * "default" application profile will be used.
   * </pre>
   *
   * <code>string app_profile_id = 7;</code>
   *
   * @return The appProfileId.
   */
  @Override
  public String getAppProfileId() {
    Object ref = appProfileId_;
    if (ref instanceof String) {
      return (String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      String s = bs.toStringUtf8();
      appProfileId_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * This value specifies routing for replication. If not specified, the
   * "default" application profile will be used.
   * </pre>
   *
   * <code>string app_profile_id = 7;</code>
   *
   * @return The bytes for appProfileId.
   */
  @Override
  public com.google.protobuf.ByteString getAppProfileIdBytes() {
    Object ref = appProfileId_;
    if (ref instanceof String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((String) ref);
      appProfileId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int ROW_KEY_FIELD_NUMBER = 2;
  private com.google.protobuf.ByteString rowKey_ = com.google.protobuf.ByteString.EMPTY;
  /**
   *
   *
   * <pre>
   * Required. The key of the row to which the conditional mutation should be
   * applied.
   * </pre>
   *
   * <code>bytes row_key = 2 [(.google.api.field_behavior) = REQUIRED];</code>
   *
   * @return The rowKey.
   */
  @Override
  public com.google.protobuf.ByteString getRowKey() {
    return rowKey_;
  }

  public static final int PREDICATE_FILTER_FIELD_NUMBER = 6;
  private RowFilter predicateFilter_;
  /**
   *
   *
   * <pre>
   * The filter to be applied to the contents of the specified row. Depending
   * on whether or not any results are yielded, either `true_mutations` or
   * `false_mutations` will be executed. If unset, checks that the row contains
   * any values at all.
   * </pre>
   *
   * <code>.google.bigtable.v2.RowFilter predicate_filter = 6;</code>
   *
   * @return Whether the predicateFilter field is set.
   */
  @Override
  public boolean hasPredicateFilter() {
    return predicateFilter_ != null;
  }
  /**
   *
   *
   * <pre>
   * The filter to be applied to the contents of the specified row. Depending
   * on whether or not any results are yielded, either `true_mutations` or
   * `false_mutations` will be executed. If unset, checks that the row contains
   * any values at all.
   * </pre>
   *
   * <code>.google.bigtable.v2.RowFilter predicate_filter = 6;</code>
   *
   * @return The predicateFilter.
   */
  @Override
  public RowFilter getPredicateFilter() {
    return predicateFilter_ == null
        ? RowFilter.getDefaultInstance()
        : predicateFilter_;
  }
  /**
   *
   *
   * <pre>
   * The filter to be applied to the contents of the specified row. Depending
   * on whether or not any results are yielded, either `true_mutations` or
   * `false_mutations` will be executed. If unset, checks that the row contains
   * any values at all.
   * </pre>
   *
   * <code>.google.bigtable.v2.RowFilter predicate_filter = 6;</code>
   */
  @Override
  public RowFilterOrBuilder getPredicateFilterOrBuilder() {
    return predicateFilter_ == null
        ? RowFilter.getDefaultInstance()
        : predicateFilter_;
  }

  public static final int RULES_FIELD_NUMBER = 3;

  @SuppressWarnings("serial")
  private java.util.List<ReadModifyWriteRule> rules_;

  private com.google.protobuf.RepeatedFieldBuilderV3<
          ReadModifyWriteRule,
          ReadModifyWriteRule.Builder,
          ReadModifyWriteRuleOrBuilder>
          rulesBuilder_;

  /**
   *
   *
   * <pre>
   * Required. Rules specifying how the specified row's contents are to be
   * transformed into writes. Entries are applied in order, meaning that earlier
   * rules will affect the results of later ones.
   * </pre>
   *
   * <code>
   * repeated .google.bigtable.v2.ReadModifyWriteRule rules = 3 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   */
  @Override
  public java.util.List<ReadModifyWriteRule> getRulesList() {
    return rules_;
  }
  /**
   *
   *
   * <pre>
   * Required. Rules specifying how the specified row's contents are to be
   * transformed into writes. Entries are applied in order, meaning that earlier
   * rules will affect the results of later ones.
   * </pre>
   *
   * <code>
   * repeated .google.bigtable.v2.ReadModifyWriteRule rules = 3 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   */
  @Override
  public java.util.List<? extends ReadModifyWriteRuleOrBuilder>
  getRulesOrBuilderList() {
    return rules_;
  }
  /**
   *
   *
   * <pre>
   * Required. Rules specifying how the specified row's contents are to be
   * transformed into writes. Entries are applied in order, meaning that earlier
   * rules will affect the results of later ones.
   * </pre>
   *
   * <code>
   * repeated .google.bigtable.v2.ReadModifyWriteRule rules = 3 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   */
  @Override
  public int getRulesCount() {
    return rules_.size();
  }
  /**
   *
   *
   * <pre>
   * Required. Rules specifying how the specified row's contents are to be
   * transformed into writes. Entries are applied in order, meaning that earlier
   * rules will affect the results of later ones.
   * </pre>
   *
   * <code>
   * repeated .google.bigtable.v2.ReadModifyWriteRule rules = 3 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   */
  @Override
  public ReadModifyWriteRule getRules(int index) {
    return rules_.get(index);
  }
  /**
   *
   *
   * <pre>
   * Required. Rules specifying how the specified row's contents are to be
   * transformed into writes. Entries are applied in order, meaning that earlier
   * rules will affect the results of later ones.
   * </pre>
   *
   * <code>
   * repeated .google.bigtable.v2.ReadModifyWriteRule rules = 3 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   */
  @Override
  public ReadModifyWriteRuleOrBuilder getRulesOrBuilder(int index) {
    return rules_.get(index);
  }

  private byte memoizedIsInitialized = -1;

  @Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(tableName_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, tableName_);
    }
    if (!rowKey_.isEmpty()) {
      output.writeBytes(2, rowKey_);
    }
    for (int i = 0; i < rules_.size(); i++) {
      output.writeMessage(3, rules_.get(i));
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(appProfileId_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 4, appProfileId_);
    }
    if (predicateFilter_ != null) {
      output.writeMessage(6, getPredicateFilter());
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(appProfileId_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 7, appProfileId_);
    }
    getUnknownFields().writeTo(output);
  }

  @Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(tableName_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, tableName_);
    }
    if (!rowKey_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream.computeBytesSize(2, rowKey_);
    }
    for (int i = 0; i < rules_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(3, rules_.get(i));
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(appProfileId_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, appProfileId_);
    }
    if (predicateFilter_ != null) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(6, getPredicateFilter());
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(appProfileId_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, appProfileId_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @Override
  public boolean equals(final Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof CheckAndModifyRowRequest)) {
      return super.equals(obj);
    }
    CheckAndModifyRowRequest other =
        (CheckAndModifyRowRequest) obj;

    if (!getTableName().equals(other.getTableName())) return false;
    if (!getAppProfileId().equals(other.getAppProfileId())) return false;
    if (!getRowKey().equals(other.getRowKey())) return false;
    if (hasPredicateFilter() != other.hasPredicateFilter()) return false;
    if (hasPredicateFilter()) {
      if (!getPredicateFilter().equals(other.getPredicateFilter())) return false;
    }
    if (!getRulesList().equals(other.getRulesList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + TABLE_NAME_FIELD_NUMBER;
    hash = (53 * hash) + getTableName().hashCode();
    hash = (37 * hash) + APP_PROFILE_ID_FIELD_NUMBER;
    hash = (53 * hash) + getAppProfileId().hashCode();
    hash = (37 * hash) + ROW_KEY_FIELD_NUMBER;
    hash = (53 * hash) + getRowKey().hashCode();
    if (hasPredicateFilter()) {
      hash = (37 * hash) + PREDICATE_FILTER_FIELD_NUMBER;
      hash = (53 * hash) + getPredicateFilter().hashCode();
    }
    if (getRulesCount() > 0) {
      hash = (37 * hash) + RULES_FIELD_NUMBER;
      hash = (53 * hash) + getRulesList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static CheckAndModifyRowRequest parseFrom(java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static CheckAndModifyRowRequest parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static CheckAndModifyRowRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static CheckAndModifyRowRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static CheckAndModifyRowRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static CheckAndModifyRowRequest parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static CheckAndModifyRowRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static CheckAndModifyRowRequest parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static CheckAndModifyRowRequest parseDelimitedFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }

  public static CheckAndModifyRowRequest parseDelimitedFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static CheckAndModifyRowRequest parseFrom(
      com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static CheckAndModifyRowRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  @Override
  public Builder newBuilderForType() {
    return newBuilder();
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }

  public static Builder newBuilder(CheckAndModifyRowRequest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  @Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @Override
  protected Builder newBuilderForType(BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   *
   *
   * <pre>
   * Request message for Bigtable.CheckAndMutateRow.
   * </pre>
   *
   * Protobuf type {@code google.bigtable.v2.CheckAndMutateRowRequest}
   */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
      implements
      // @@protoc_insertion_point(builder_implements:google.bigtable.v2.CheckAndMutateRowRequest)
      CheckAndModifyRowRequestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return BigtableProto
          .internal_static_google_bigtable_v2_CheckAndMutateRowRequest_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return BigtableProto
          .internal_static_google_bigtable_v2_CheckAndMutateRowRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              CheckAndModifyRowRequest.class,
              Builder.class);
    }

    // Construct using com.google.bigtable.v2.CheckAndMutateRowRequest.newBuilder()
    private Builder() {}

    private Builder(BuilderParent parent) {
      super(parent);
    }

    @Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      tableName_ = "";
      appProfileId_ = "";
      rowKey_ = com.google.protobuf.ByteString.EMPTY;
      predicateFilter_ = null;
      if (predicateFilterBuilder_ != null) {
        predicateFilterBuilder_.dispose();
        predicateFilterBuilder_ = null;
      }
      if (rulesBuilder_ == null) {
        rules_ = java.util.Collections.emptyList();
      } else {
        rules_ = null;
        rulesBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000008);
      return this;
    }

    @Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return BigtableProto
          .internal_static_google_bigtable_v2_CheckAndMutateRowRequest_descriptor;
    }

    @Override
    public CheckAndModifyRowRequest getDefaultInstanceForType() {
      return CheckAndModifyRowRequest.getDefaultInstance();
    }

    @Override
    public CheckAndModifyRowRequest build() {
      CheckAndModifyRowRequest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @Override
    public CheckAndModifyRowRequest buildPartial() {
      CheckAndModifyRowRequest result =
          new CheckAndModifyRowRequest(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) {
        buildPartial0(result);
      }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(
        CheckAndModifyRowRequest result) {
      if (rulesBuilder_ == null) {
        if (((bitField0_ & 0x00000008) != 0)) {
          rules_ = java.util.Collections.unmodifiableList(rules_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.rules_ = rules_;
      } else {
        result.rules_ = rulesBuilder_.build();
      }
    }

    private void buildPartial0(CheckAndModifyRowRequest result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.tableName_ = tableName_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.appProfileId_ = appProfileId_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.rowKey_ = rowKey_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.predicateFilter_ =
            predicateFilterBuilder_ == null ? predicateFilter_ : predicateFilterBuilder_.build();
      }
    }

    @Override
    public Builder clone() {
      return super.clone();
    }

    @Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field, Object value) {
      return super.setField(field, value);
    }

    @Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }

    @Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }

    @Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, Object value) {
      return super.setRepeatedField(field, index, value);
    }

    @Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, Object value) {
      return super.addRepeatedField(field, value);
    }

    @Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof CheckAndModifyRowRequest) {
        return mergeFrom((CheckAndModifyRowRequest) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(CheckAndModifyRowRequest other) {
      if (other == CheckAndModifyRowRequest.getDefaultInstance())
        return this;
      if (!other.getTableName().isEmpty()) {
        tableName_ = other.tableName_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (!other.getAppProfileId().isEmpty()) {
        appProfileId_ = other.appProfileId_;
        bitField0_ |= 0x00000002;
        onChanged();
      }
      if (other.getRowKey() != com.google.protobuf.ByteString.EMPTY) {
        setRowKey(other.getRowKey());
      }
      if (other.hasPredicateFilter()) {
        mergePredicateFilter(other.getPredicateFilter());
      }
      if (rulesBuilder_ == null) {
        if (!other.rules_.isEmpty()) {
          if (rules_.isEmpty()) {
            rules_ = other.rules_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureRulesIsMutable();
            rules_.addAll(other.rules_);
          }
          onChanged();
        }
      } else {
        if (!other.rules_.isEmpty()) {
          if (rulesBuilder_.isEmpty()) {
            rulesBuilder_.dispose();
            rulesBuilder_ = null;
            rules_ = other.rules_;
            bitField0_ = (bitField0_ & ~0x00000008);
            rulesBuilder_ =
                    com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders
                            ? getRulesFieldBuilder()
                            : null;
          } else {
            rulesBuilder_.addAllMessages(other.rules_);
          }
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @Override
    public final boolean isInitialized() {
      return true;
    }

    private void ensureRulesIsMutable() {
      if (!((bitField0_ & 0x00000008) != 0)) {
        rules_ = new java.util.ArrayList<ReadModifyWriteRule>(rules_);
        bitField0_ |= 0x00000008;
      }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            ReadModifyWriteRule,
            ReadModifyWriteRule.Builder,
            ReadModifyWriteRuleOrBuilder>
    getRulesFieldBuilder() {
      if (rulesBuilder_ == null) {
        rulesBuilder_ =
                new com.google.protobuf.RepeatedFieldBuilderV3<
                        ReadModifyWriteRule,
                        ReadModifyWriteRule.Builder,
                        ReadModifyWriteRuleOrBuilder>(
                        rules_, ((bitField0_ & 0x00000008) != 0), getParentForChildren(), isClean());
        rules_ = null;
      }
      return rulesBuilder_;
    }

    @Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10:
              {
                tableName_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
            case 18:
              {
                rowKey_ = input.readBytes();
                bitField0_ |= 0x00000004;
                break;
              } // case 18
            case 26:
            {
              ReadModifyWriteRule m =
                      input.readMessage(
                              ReadModifyWriteRule.parser(), extensionRegistry);
              if (rulesBuilder_ == null) {
                ensureRulesIsMutable();
                rules_.add(m);
              } else {
                rulesBuilder_.addMessage(m);
              }
              break;
            } // case 26
            case 50:
              {
                input.readMessage(getPredicateFilterFieldBuilder().getBuilder(), extensionRegistry);
                bitField0_ |= 0x00000008;
                break;
              } // case 50
            case 58:
              {
                appProfileId_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000002;
                break;
              } // case 58
            default:
              {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }

    private int bitField0_;

    private Object tableName_ = "";
    /**
     *
     *
     * <pre>
     * Required. The unique name of the table to which the conditional mutation
     * should be applied. Values are of the form
     * `projects/&lt;project&gt;/instances/&lt;instance&gt;/tables/&lt;table&gt;`.
     * </pre>
     *
     * <code>
     * string table_name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = { ... }
     * </code>
     *
     * @return The tableName.
     */
    public String getTableName() {
      Object ref = tableName_;
      if (!(ref instanceof String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        tableName_ = s;
        return s;
      } else {
        return (String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Required. The unique name of the table to which the conditional mutation
     * should be applied. Values are of the form
     * `projects/&lt;project&gt;/instances/&lt;instance&gt;/tables/&lt;table&gt;`.
     * </pre>
     *
     * <code>
     * string table_name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = { ... }
     * </code>
     *
     * @return The bytes for tableName.
     */
    public com.google.protobuf.ByteString getTableNameBytes() {
      Object ref = tableName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        tableName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Required. The unique name of the table to which the conditional mutation
     * should be applied. Values are of the form
     * `projects/&lt;project&gt;/instances/&lt;instance&gt;/tables/&lt;table&gt;`.
     * </pre>
     *
     * <code>
     * string table_name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = { ... }
     * </code>
     *
     * @param value The tableName to set.
     * @return This builder for chaining.
     */
    public Builder setTableName(String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      tableName_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. The unique name of the table to which the conditional mutation
     * should be applied. Values are of the form
     * `projects/&lt;project&gt;/instances/&lt;instance&gt;/tables/&lt;table&gt;`.
     * </pre>
     *
     * <code>
     * string table_name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = { ... }
     * </code>
     *
     * @return This builder for chaining.
     */
    public Builder clearTableName() {
      tableName_ = getDefaultInstance().getTableName();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. The unique name of the table to which the conditional mutation
     * should be applied. Values are of the form
     * `projects/&lt;project&gt;/instances/&lt;instance&gt;/tables/&lt;table&gt;`.
     * </pre>
     *
     * <code>
     * string table_name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = { ... }
     * </code>
     *
     * @param value The bytes for tableName to set.
     * @return This builder for chaining.
     */
    public Builder setTableNameBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      tableName_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private Object appProfileId_ = "";
    /**
     *
     *
     * <pre>
     * This value specifies routing for replication. If not specified, the
     * "default" application profile will be used.
     * </pre>
     *
     * <code>string app_profile_id = 7;</code>
     *
     * @return The appProfileId.
     */
    public String getAppProfileId() {
      Object ref = appProfileId_;
      if (!(ref instanceof String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        appProfileId_ = s;
        return s;
      } else {
        return (String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * This value specifies routing for replication. If not specified, the
     * "default" application profile will be used.
     * </pre>
     *
     * <code>string app_profile_id = 7;</code>
     *
     * @return The bytes for appProfileId.
     */
    public com.google.protobuf.ByteString getAppProfileIdBytes() {
      Object ref = appProfileId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        appProfileId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * This value specifies routing for replication. If not specified, the
     * "default" application profile will be used.
     * </pre>
     *
     * <code>string app_profile_id = 7;</code>
     *
     * @param value The appProfileId to set.
     * @return This builder for chaining.
     */
    public Builder setAppProfileId(String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      appProfileId_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * This value specifies routing for replication. If not specified, the
     * "default" application profile will be used.
     * </pre>
     *
     * <code>string app_profile_id = 7;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearAppProfileId() {
      appProfileId_ = getDefaultInstance().getAppProfileId();
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * This value specifies routing for replication. If not specified, the
     * "default" application profile will be used.
     * </pre>
     *
     * <code>string app_profile_id = 7;</code>
     *
     * @param value The bytes for appProfileId to set.
     * @return This builder for chaining.
     */
    public Builder setAppProfileIdBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      appProfileId_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }

    private com.google.protobuf.ByteString rowKey_ = com.google.protobuf.ByteString.EMPTY;
    /**
     *
     *
     * <pre>
     * Required. The key of the row to which the conditional mutation should be
     * applied.
     * </pre>
     *
     * <code>bytes row_key = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     *
     * @return The rowKey.
     */
    @Override
    public com.google.protobuf.ByteString getRowKey() {
      return rowKey_;
    }
    /**
     *
     *
     * <pre>
     * Required. The key of the row to which the conditional mutation should be
     * applied.
     * </pre>
     *
     * <code>bytes row_key = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     *
     * @param value The rowKey to set.
     * @return This builder for chaining.
     */
    public Builder setRowKey(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      rowKey_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. The key of the row to which the conditional mutation should be
     * applied.
     * </pre>
     *
     * <code>bytes row_key = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearRowKey() {
      bitField0_ = (bitField0_ & ~0x00000004);
      rowKey_ = getDefaultInstance().getRowKey();
      onChanged();
      return this;
    }

    private RowFilter predicateFilter_;
    private com.google.protobuf.SingleFieldBuilderV3<
            RowFilter,
            RowFilter.Builder,
            RowFilterOrBuilder>
        predicateFilterBuilder_;
    /**
     *
     *
     * <pre>
     * The filter to be applied to the contents of the specified row. Depending
     * on whether or not any results are yielded, either `true_mutations` or
     * `false_mutations` will be executed. If unset, checks that the row contains
     * any values at all.
     * </pre>
     *
     * <code>.google.bigtable.v2.RowFilter predicate_filter = 6;</code>
     *
     * @return Whether the predicateFilter field is set.
     */
    public boolean hasPredicateFilter() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     *
     *
     * <pre>
     * The filter to be applied to the contents of the specified row. Depending
     * on whether or not any results are yielded, either `true_mutations` or
     * `false_mutations` will be executed. If unset, checks that the row contains
     * any values at all.
     * </pre>
     *
     * <code>.google.bigtable.v2.RowFilter predicate_filter = 6;</code>
     *
     * @return The predicateFilter.
     */
    public RowFilter getPredicateFilter() {
      if (predicateFilterBuilder_ == null) {
        return predicateFilter_ == null
            ? RowFilter.getDefaultInstance()
            : predicateFilter_;
      } else {
        return predicateFilterBuilder_.getMessage();
      }
    }
    /**
     *
     *
     * <pre>
     * The filter to be applied to the contents of the specified row. Depending
     * on whether or not any results are yielded, either `true_mutations` or
     * `false_mutations` will be executed. If unset, checks that the row contains
     * any values at all.
     * </pre>
     *
     * <code>.google.bigtable.v2.RowFilter predicate_filter = 6;</code>
     */
    public Builder setPredicateFilter(RowFilter value) {
      if (predicateFilterBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        predicateFilter_ = value;
      } else {
        predicateFilterBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The filter to be applied to the contents of the specified row. Depending
     * on whether or not any results are yielded, either `true_mutations` or
     * `false_mutations` will be executed. If unset, checks that the row contains
     * any values at all.
     * </pre>
     *
     * <code>.google.bigtable.v2.RowFilter predicate_filter = 6;</code>
     */
    public Builder setPredicateFilter(RowFilter.Builder builderForValue) {
      if (predicateFilterBuilder_ == null) {
        predicateFilter_ = builderForValue.build();
      } else {
        predicateFilterBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The filter to be applied to the contents of the specified row. Depending
     * on whether or not any results are yielded, either `true_mutations` or
     * `false_mutations` will be executed. If unset, checks that the row contains
     * any values at all.
     * </pre>
     *
     * <code>.google.bigtable.v2.RowFilter predicate_filter = 6;</code>
     */
    public Builder mergePredicateFilter(RowFilter value) {
      if (predicateFilterBuilder_ == null) {
        if (((bitField0_ & 0x00000008) != 0)
            && predicateFilter_ != null
            && predicateFilter_ != RowFilter.getDefaultInstance()) {
          getPredicateFilterBuilder().mergeFrom(value);
        } else {
          predicateFilter_ = value;
        }
      } else {
        predicateFilterBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The filter to be applied to the contents of the specified row. Depending
     * on whether or not any results are yielded, either `true_mutations` or
     * `false_mutations` will be executed. If unset, checks that the row contains
     * any values at all.
     * </pre>
     *
     * <code>.google.bigtable.v2.RowFilter predicate_filter = 6;</code>
     */
    public Builder clearPredicateFilter() {
      bitField0_ = (bitField0_ & ~0x00000008);
      predicateFilter_ = null;
      if (predicateFilterBuilder_ != null) {
        predicateFilterBuilder_.dispose();
        predicateFilterBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The filter to be applied to the contents of the specified row. Depending
     * on whether or not any results are yielded, either `true_mutations` or
     * `false_mutations` will be executed. If unset, checks that the row contains
     * any values at all.
     * </pre>
     *
     * <code>.google.bigtable.v2.RowFilter predicate_filter = 6;</code>
     */
    public RowFilter.Builder getPredicateFilterBuilder() {
      bitField0_ |= 0x00000008;
      onChanged();
      return getPredicateFilterFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * The filter to be applied to the contents of the specified row. Depending
     * on whether or not any results are yielded, either `true_mutations` or
     * `false_mutations` will be executed. If unset, checks that the row contains
     * any values at all.
     * </pre>
     *
     * <code>.google.bigtable.v2.RowFilter predicate_filter = 6;</code>
     */
    public RowFilterOrBuilder getPredicateFilterOrBuilder() {
      if (predicateFilterBuilder_ != null) {
        return predicateFilterBuilder_.getMessageOrBuilder();
      } else {
        return predicateFilter_ == null
            ? RowFilter.getDefaultInstance()
            : predicateFilter_;
      }
    }
    /**
     *
     *
     * <pre>
     * The filter to be applied to the contents of the specified row. Depending
     * on whether or not any results are yielded, either `true_mutations` or
     * `false_mutations` will be executed. If unset, checks that the row contains
     * any values at all.
     * </pre>
     *
     * <code>.google.bigtable.v2.RowFilter predicate_filter = 6;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            RowFilter,
            RowFilter.Builder,
            RowFilterOrBuilder>
        getPredicateFilterFieldBuilder() {
      if (predicateFilterBuilder_ == null) {
        predicateFilterBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                RowFilter,
                RowFilter.Builder,
                RowFilterOrBuilder>(
                getPredicateFilter(), getParentForChildren(), isClean());
        predicateFilter_ = null;
      }
      return predicateFilterBuilder_;
    }

    private java.util.List<ReadModifyWriteRule> rules_ =
            java.util.Collections.emptyList();

    private com.google.protobuf.RepeatedFieldBuilderV3<
            ReadModifyWriteRule,
            ReadModifyWriteRule.Builder,
            ReadModifyWriteRuleOrBuilder>
            rulesBuilder_;

    @Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:google.bigtable.v2.CheckAndMutateRowRequest)
  }

  // @@protoc_insertion_point(class_scope:google.bigtable.v2.CheckAndMutateRowRequest)
  private static final CheckAndModifyRowRequest DEFAULT_INSTANCE;

  static {
    DEFAULT_INSTANCE = new CheckAndModifyRowRequest();
  }

  public static CheckAndModifyRowRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<CheckAndModifyRowRequest> PARSER =
      new com.google.protobuf.AbstractParser<CheckAndModifyRowRequest>() {
        @Override
        public CheckAndModifyRowRequest parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

  public static com.google.protobuf.Parser<CheckAndModifyRowRequest> parser() {
    return PARSER;
  }

  @Override
  public com.google.protobuf.Parser<CheckAndModifyRowRequest> getParserForType() {
    return PARSER;
  }

  @Override
  public CheckAndModifyRowRequest getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}
