// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/bigtable/admin/v2/bigtable_table_admin.proto

// Protobuf Java Version: 3.25.3
package com.google.bigtable.admin.v2;

public interface CheckConsistencyRequestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:google.bigtable.admin.v2.CheckConsistencyRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Required. The unique name of the Table for which to check replication
   * consistency. Values are of the form
   * `projects/{project}/instances/{instance}/tables/{table}`.
   * </pre>
   *
   * <code>string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = { ... }</code>
   * @return The name.
   */
  java.lang.String getName();
  /**
   * <pre>
   * Required. The unique name of the Table for which to check replication
   * consistency. Values are of the form
   * `projects/{project}/instances/{instance}/tables/{table}`.
   * </pre>
   *
   * <code>string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = { ... }</code>
   * @return The bytes for name.
   */
  com.google.protobuf.ByteString
      getNameBytes();

  /**
   * <pre>
   * Required. The token created using GenerateConsistencyToken for the Table.
   * </pre>
   *
   * <code>string consistency_token = 2 [(.google.api.field_behavior) = REQUIRED];</code>
   * @return The consistencyToken.
   */
  java.lang.String getConsistencyToken();
  /**
   * <pre>
   * Required. The token created using GenerateConsistencyToken for the Table.
   * </pre>
   *
   * <code>string consistency_token = 2 [(.google.api.field_behavior) = REQUIRED];</code>
   * @return The bytes for consistencyToken.
   */
  com.google.protobuf.ByteString
      getConsistencyTokenBytes();

  /**
   * <pre>
   * Checks that reads using an app profile with `StandardIsolation` can
   * see all writes committed before the token was created, even if the
   * read and write target different clusters.
   * </pre>
   *
   * <code>.google.bigtable.admin.v2.StandardReadRemoteWrites standard_read_remote_writes = 3;</code>
   * @return Whether the standardReadRemoteWrites field is set.
   */
  boolean hasStandardReadRemoteWrites();
  /**
   * <pre>
   * Checks that reads using an app profile with `StandardIsolation` can
   * see all writes committed before the token was created, even if the
   * read and write target different clusters.
   * </pre>
   *
   * <code>.google.bigtable.admin.v2.StandardReadRemoteWrites standard_read_remote_writes = 3;</code>
   * @return The standardReadRemoteWrites.
   */
  com.google.bigtable.admin.v2.StandardReadRemoteWrites getStandardReadRemoteWrites();
  /**
   * <pre>
   * Checks that reads using an app profile with `StandardIsolation` can
   * see all writes committed before the token was created, even if the
   * read and write target different clusters.
   * </pre>
   *
   * <code>.google.bigtable.admin.v2.StandardReadRemoteWrites standard_read_remote_writes = 3;</code>
   */
  com.google.bigtable.admin.v2.StandardReadRemoteWritesOrBuilder getStandardReadRemoteWritesOrBuilder();

  /**
   * <pre>
   * Checks that reads using an app profile with `DataBoostIsolationReadOnly`
   * can see all writes committed before the token was created, but only if
   * the read and write target the same cluster.
   * </pre>
   *
   * <code>.google.bigtable.admin.v2.DataBoostReadLocalWrites data_boost_read_local_writes = 4;</code>
   * @return Whether the dataBoostReadLocalWrites field is set.
   */
  boolean hasDataBoostReadLocalWrites();
  /**
   * <pre>
   * Checks that reads using an app profile with `DataBoostIsolationReadOnly`
   * can see all writes committed before the token was created, but only if
   * the read and write target the same cluster.
   * </pre>
   *
   * <code>.google.bigtable.admin.v2.DataBoostReadLocalWrites data_boost_read_local_writes = 4;</code>
   * @return The dataBoostReadLocalWrites.
   */
  com.google.bigtable.admin.v2.DataBoostReadLocalWrites getDataBoostReadLocalWrites();
  /**
   * <pre>
   * Checks that reads using an app profile with `DataBoostIsolationReadOnly`
   * can see all writes committed before the token was created, but only if
   * the read and write target the same cluster.
   * </pre>
   *
   * <code>.google.bigtable.admin.v2.DataBoostReadLocalWrites data_boost_read_local_writes = 4;</code>
   */
  com.google.bigtable.admin.v2.DataBoostReadLocalWritesOrBuilder getDataBoostReadLocalWritesOrBuilder();

  com.google.bigtable.admin.v2.CheckConsistencyRequest.ModeCase getModeCase();
}
