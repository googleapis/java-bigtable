// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/bigtable/admin/v2/table.proto

// Protobuf Java Version: 3.25.3
package com.google.bigtable.admin.v2;

public interface AuthorizedViewOrBuilder extends
    // @@protoc_insertion_point(interface_extends:google.bigtable.admin.v2.AuthorizedView)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Identifier. The name of this AuthorizedView.
   * Values are of the form
   * `projects/{project}/instances/{instance}/tables/{table}/authorizedViews/{authorized_view}`
   * </pre>
   *
   * <code>string name = 1 [(.google.api.field_behavior) = IDENTIFIER];</code>
   * @return The name.
   */
  java.lang.String getName();
  /**
   * <pre>
   * Identifier. The name of this AuthorizedView.
   * Values are of the form
   * `projects/{project}/instances/{instance}/tables/{table}/authorizedViews/{authorized_view}`
   * </pre>
   *
   * <code>string name = 1 [(.google.api.field_behavior) = IDENTIFIER];</code>
   * @return The bytes for name.
   */
  com.google.protobuf.ByteString
      getNameBytes();

  /**
   * <pre>
   * An AuthorizedView permitting access to an explicit subset of a Table.
   * </pre>
   *
   * <code>.google.bigtable.admin.v2.AuthorizedView.SubsetView subset_view = 2;</code>
   * @return Whether the subsetView field is set.
   */
  boolean hasSubsetView();
  /**
   * <pre>
   * An AuthorizedView permitting access to an explicit subset of a Table.
   * </pre>
   *
   * <code>.google.bigtable.admin.v2.AuthorizedView.SubsetView subset_view = 2;</code>
   * @return The subsetView.
   */
  com.google.bigtable.admin.v2.AuthorizedView.SubsetView getSubsetView();
  /**
   * <pre>
   * An AuthorizedView permitting access to an explicit subset of a Table.
   * </pre>
   *
   * <code>.google.bigtable.admin.v2.AuthorizedView.SubsetView subset_view = 2;</code>
   */
  com.google.bigtable.admin.v2.AuthorizedView.SubsetViewOrBuilder getSubsetViewOrBuilder();

  /**
   * <pre>
   * The etag for this AuthorizedView.
   * If this is provided on update, it must match the server's etag. The server
   * returns ABORTED error on a mismatched etag.
   * </pre>
   *
   * <code>string etag = 3;</code>
   * @return The etag.
   */
  java.lang.String getEtag();
  /**
   * <pre>
   * The etag for this AuthorizedView.
   * If this is provided on update, it must match the server's etag. The server
   * returns ABORTED error on a mismatched etag.
   * </pre>
   *
   * <code>string etag = 3;</code>
   * @return The bytes for etag.
   */
  com.google.protobuf.ByteString
      getEtagBytes();

  /**
   * <pre>
   * Set to true to make the AuthorizedView protected against deletion.
   * The parent Table and containing Instance cannot be deleted if an
   * AuthorizedView has this bit set.
   * </pre>
   *
   * <code>bool deletion_protection = 4;</code>
   * @return The deletionProtection.
   */
  boolean getDeletionProtection();

  com.google.bigtable.admin.v2.AuthorizedView.AuthorizedViewCase getAuthorizedViewCase();
}
