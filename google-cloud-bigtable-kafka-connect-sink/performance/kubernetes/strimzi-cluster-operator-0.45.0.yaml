
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    app: strimzi
    strimzi.io/crd-install: "true"
  name: kafkamirrormaker2s.kafka.strimzi.io
spec:
  conversion:
    strategy: None
  group: kafka.strimzi.io
  names:
    categories:
      - strimzi
    kind: KafkaMirrorMaker2
    listKind: KafkaMirrorMaker2List
    plural: kafkamirrormaker2s
    shortNames:
      - kmm2
    singular: kafkamirrormaker2
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - description: The desired number of Kafka MirrorMaker 2 replicas
          jsonPath: .spec.replicas
          name: Desired replicas
          type: integer
        - description: The state of the custom resource
          jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
      name: v1beta2
      schema:
        openAPIV3Schema:
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: The specification of the Kafka MirrorMaker 2 cluster.
              properties:
                clientRackInitImage:
                  description: The image of the init container used for initializing the `client.rack`.
                  type: string
                clusters:
                  description: Kafka clusters for mirroring.
                  items:
                    properties:
                      alias:
                        description: Alias used to reference the Kafka cluster.
                        pattern: ^[a-zA-Z0-9\._\-]{1,100}$
                        type: string
                      authentication:
                        description: Authentication configuration for connecting to the cluster.
                        properties:
                          accessToken:
                            description: Link to Kubernetes Secret containing the access token which was obtained from the authorization server.
                            properties:
                              key:
                                description: The key under which the secret value is stored in the Kubernetes Secret.
                                type: string
                              secretName:
                                description: The name of the Kubernetes Secret containing the secret value.
                                type: string
                            required:
                              - key
                              - secretName
                            type: object
                          accessTokenIsJwt:
                            description: Configure whether access token should be treated as JWT. This should be set to `false` if the authorization server returns opaque tokens. Defaults to `true`.
                            type: boolean
                          accessTokenLocation:
                            description: Path to the token file containing an access token to be used for authentication.
                            type: string
                          audience:
                            description: OAuth audience to use when authenticating against the authorization server. Some authorization servers require the audience to be explicitly set. The possible values depend on how the authorization server is configured. By default, `audience` is not specified when performing the token endpoint request.
                            type: string
                          certificateAndKey:
                            description: Reference to the `Secret` which holds the certificate and private key pair.
                            properties:
                              certificate:
                                description: The name of the file certificate in the Secret.
                                type: string
                              key:
                                description: The name of the private key in the Secret.
                                type: string
                              secretName:
                                description: The name of the Secret containing the certificate.
                                type: string
                            required:
                              - secretName
                              - certificate
                              - key
                            type: object
                          clientAssertion:
                            description: Link to Kubernetes secret containing the client assertion which was manually configured for the client.
                            properties:
                              key:
                                description: The key under which the secret value is stored in the Kubernetes Secret.
                                type: string
                              secretName:
                                description: The name of the Kubernetes Secret containing the secret value.
                                type: string
                            required:
                              - key
                              - secretName
                            type: object
                          clientAssertionLocation:
                            description: Path to the file containing the client assertion to be used for authentication.
                            type: string
                          clientAssertionType:
                            description: The client assertion type. If not set, and either `clientAssertion` or `clientAssertionLocation` is configured, this value defaults to `urn:ietf:params:oauth:client-assertion-type:jwt-bearer`.
                            type: string
                          clientId:
                            description: OAuth Client ID which the Kafka client can use to authenticate against the OAuth server and use the token endpoint URI.
                            type: string
                          clientSecret:
                            description: Link to Kubernetes Secret containing the OAuth client secret which the Kafka client can use to authenticate against the OAuth server and use the token endpoint URI.
                            properties:
                              key:
                                description: The key under which the secret value is stored in the Kubernetes Secret.
                                type: string
                              secretName:
                                description: The name of the Kubernetes Secret containing the secret value.
                                type: string
                            required:
                              - key
                              - secretName
                            type: object
                          connectTimeoutSeconds:
                            description: The connect timeout in seconds when connecting to authorization server. If not set, the effective connect timeout is 60 seconds.
                            type: integer
                          disableTlsHostnameVerification:
                            description: Enable or disable TLS hostname verification. Default value is `false`.
                            type: boolean
                          enableMetrics:
                            description: Enable or disable OAuth metrics. Default value is `false`.
                            type: boolean
                          httpRetries:
                            description: The maximum number of retries to attempt if an initial HTTP request fails. If not set, the default is to not attempt any retries.
                            type: integer
                          httpRetryPauseMs:
                            description: The pause to take before retrying a failed HTTP request. If not set, the default is to not pause at all but to immediately repeat a request.
                            type: integer
                          includeAcceptHeader:
                            description: Whether the Accept header should be set in requests to the authorization servers. The default value is `true`.
                            type: boolean
                          maxTokenExpirySeconds:
                            description: Set or limit time-to-live of the access tokens to the specified number of seconds. This should be set if the authorization server returns opaque tokens.
                            type: integer
                          passwordSecret:
                            description: Reference to the `Secret` which holds the password.
                            properties:
                              password:
                                description: The name of the key in the Secret under which the password is stored.
                                type: string
                              secretName:
                                description: The name of the Secret containing the password.
                                type: string
                            required:
                              - secretName
                              - password
                            type: object
                          readTimeoutSeconds:
                            description: The read timeout in seconds when connecting to authorization server. If not set, the effective read timeout is 60 seconds.
                            type: integer
                          refreshToken:
                            description: Link to Kubernetes Secret containing the refresh token which can be used to obtain access token from the authorization server.
                            properties:
                              key:
                                description: The key under which the secret value is stored in the Kubernetes Secret.
                                type: string
                              secretName:
                                description: The name of the Kubernetes Secret containing the secret value.
                                type: string
                            required:
                              - key
                              - secretName
                            type: object
                          saslExtensions:
                            additionalProperties:
                              type: string
                            description: SASL extensions parameters.
                            type: object
                          scope:
                            description: OAuth scope to use when authenticating against the authorization server. Some authorization servers require this to be set. The possible values depend on how authorization server is configured. By default `scope` is not specified when doing the token endpoint request.
                            type: string
                          tlsTrustedCertificates:
                            description: Trusted certificates for TLS connection to the OAuth server.
                            items:
                              oneOf:
                                - properties:
                                    certificate: {}
                                  required:
                                    - certificate
                                - properties:
                                    pattern: {}
                                  required:
                                    - pattern
                              properties:
                                certificate:
                                  description: The name of the file certificate in the secret.
                                  type: string
                                pattern:
                                  description: Pattern for the certificate files in the secret. Use the link:https://en.wikipedia.org/wiki/Glob_(programming)[_glob syntax_] for the pattern. All files in the secret that match the pattern are used.
                                  type: string
                                secretName:
                                  description: The name of the Secret containing the certificate.
                                  type: string
                              required:
                                - secretName
                              type: object
                            type: array
                          tokenEndpointUri:
                            description: Authorization server token endpoint URI.
                            type: string
                          type:
                            description: Authentication type. Currently the supported types are `tls`, `scram-sha-256`, `scram-sha-512`, `plain`, and 'oauth'. `scram-sha-256` and `scram-sha-512` types use SASL SCRAM-SHA-256 and SASL SCRAM-SHA-512 Authentication, respectively. `plain` type uses SASL PLAIN Authentication. `oauth` type uses SASL OAUTHBEARER Authentication. The `tls` type uses TLS Client Authentication. The `tls` type is supported only over TLS connections.
                            enum:
                              - tls
                              - scram-sha-256
                              - scram-sha-512
                              - plain
                              - oauth
                            type: string
                          username:
                            description: Username used for the authentication.
                            type: string
                        required:
                          - type
                        type: object
                      bootstrapServers:
                        description: A comma-separated list of `host:port` pairs for establishing the connection to the Kafka cluster.
                        type: string
                      config:
                        description: 'The MirrorMaker 2 cluster config. Properties with the following prefixes cannot be set: ssl., sasl., security., listeners, plugin.path, rest., bootstrap.servers, consumer.interceptor.classes, producer.interceptor.classes (with the exception of: ssl.endpoint.identification.algorithm, ssl.cipher.suites, ssl.protocol, ssl.enabled.protocols).'
                        type: object
                        x-kubernetes-preserve-unknown-fields: true
                      tls:
                        description: TLS configuration for connecting MirrorMaker 2 connectors to a cluster.
                        properties:
                          trustedCertificates:
                            description: Trusted certificates for TLS connection.
                            items:
                              oneOf:
                                - properties:
                                    certificate: {}
                                  required:
                                    - certificate
                                - properties:
                                    pattern: {}
                                  required:
                                    - pattern
                              properties:
                                certificate:
                                  description: The name of the file certificate in the secret.
                                  type: string
                                pattern:
                                  description: Pattern for the certificate files in the secret. Use the link:https://en.wikipedia.org/wiki/Glob_(programming)[_glob syntax_] for the pattern. All files in the secret that match the pattern are used.
                                  type: string
                                secretName:
                                  description: The name of the Secret containing the certificate.
                                  type: string
                              required:
                                - secretName
                              type: object
                            type: array
                        type: object
                    required:
                      - alias
                      - bootstrapServers
                    type: object
                  type: array
                connectCluster:
                  description: The cluster alias used for Kafka Connect. The value must match the alias of the *target* Kafka cluster as specified in the `spec.clusters` configuration. The target Kafka cluster is used by the underlying Kafka Connect framework for its internal topics.
                  type: string
                externalConfiguration:
                  description: Pass data from Secrets or ConfigMaps to the Kafka Connect pods and use them to configure connectors.
                  properties:
                    env:
                      description: Makes data from a Secret or ConfigMap available in the Kafka Connect pods as environment variables.
                      items:
                        properties:
                          name:
                            description: Name of the environment variable which will be passed to the Kafka Connect pods. The name of the environment variable cannot start with `KAFKA_` or `STRIMZI_`.
                            type: string
                          valueFrom:
                            description: Value of the environment variable which will be passed to the Kafka Connect pods. It can be passed either as a reference to Secret or ConfigMap field. The field has to specify exactly one Secret or ConfigMap.
                            oneOf:
                              - properties:
                                  secretKeyRef: {}
                                required:
                                  - secretKeyRef
                              - properties:
                                  configMapKeyRef: {}
                                required:
                                  - configMapKeyRef
                            properties:
                              configMapKeyRef:
                                description: Reference to a key in a ConfigMap.
                                properties:
                                  key:
                                    type: string
                                  name:
                                    type: string
                                  optional:
                                    type: boolean
                                type: object
                              secretKeyRef:
                                description: Reference to a key in a Secret.
                                properties:
                                  key:
                                    type: string
                                  name:
                                    type: string
                                  optional:
                                    type: boolean
                                type: object
                            type: object
                        required:
                          - name
                          - valueFrom
                        type: object
                      type: array
                    volumes:
                      description: Makes data from a Secret or ConfigMap available in the Kafka Connect pods as volumes.
                      items:
                        oneOf:
                          - properties:
                              secret: {}
                            required:
                              - secret
                          - properties:
                              configMap: {}
                            required:
                              - configMap
                        properties:
                          configMap:
                            description: Reference to a key in a ConfigMap. Exactly one Secret or ConfigMap has to be specified.
                            properties:
                              defaultMode:
                                type: integer
                              items:
                                items:
                                  properties:
                                    key:
                                      type: string
                                    mode:
                                      type: integer
                                    path:
                                      type: string
                                  type: object
                                type: array
                              name:
                                type: string
                              optional:
                                type: boolean
                            type: object
                          name:
                            description: Name of the volume which will be added to the Kafka Connect pods.
                            type: string
                          secret:
                            description: Reference to a key in a Secret. Exactly one Secret or ConfigMap has to be specified.
                            properties:
                              defaultMode:
                                type: integer
                              items:
                                items:
                                  properties:
                                    key:
                                      type: string
                                    mode:
                                      type: integer
                                    path:
                                      type: string
                                  type: object
                                type: array
                              optional:
                                type: boolean
                              secretName:
                                type: string
                            type: object
                        required:
                          - name
                        type: object
                      type: array
                  type: object
                image:
                  description: The container image used for Kafka Connect pods. If no image name is explicitly specified, it is determined based on the `spec.version` configuration. The image names are specifically mapped to corresponding versions in the Cluster Operator configuration.
                  type: string
                jmxOptions:
                  description: JMX Options.
                  properties:
                    authentication:
                      description: Authentication configuration for connecting to the JMX port.
                      properties:
                        type:
                          description: Authentication type. Currently the only supported types are `password`.`password` type creates a username and protected port with no TLS.
                          enum:
                            - password
                          type: string
                      required:
                        - type
                      type: object
                  type: object
                jvmOptions:
                  description: JVM Options for pods.
                  properties:
                    -XX:
                      additionalProperties:
                        type: string
                      description: A map of -XX options to the JVM.
                      type: object
                    -Xms:
                      description: -Xms option to to the JVM.
                      pattern: ^[0-9]+[mMgG]?$
                      type: string
                    -Xmx:
                      description: -Xmx option to to the JVM.
                      pattern: ^[0-9]+[mMgG]?$
                      type: string
                    gcLoggingEnabled:
                      description: Specifies whether the Garbage Collection logging is enabled. The default is false.
                      type: boolean
                    javaSystemProperties:
                      description: A map of additional system properties which will be passed using the `-D` option to the JVM.
                      items:
                        properties:
                          name:
                            description: The system property name.
                            type: string
                          value:
                            description: The system property value.
                            type: string
                        type: object
                      type: array
                  type: object
                livenessProbe:
                  description: Pod liveness checking.
                  properties:
                    failureThreshold:
                      description: Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
                      minimum: 1
                      type: integer
                    initialDelaySeconds:
                      description: The initial delay before first the health is first checked. Default to 15 seconds. Minimum value is 0.
                      minimum: 0
                      type: integer
                    periodSeconds:
                      description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
                      minimum: 1
                      type: integer
                    successThreshold:
                      description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
                      minimum: 1
                      type: integer
                    timeoutSeconds:
                      description: The timeout for each attempted health check. Default to 5 seconds. Minimum value is 1.
                      minimum: 1
                      type: integer
                  type: object
                logging:
                  description: Logging configuration for Kafka Connect.
                  properties:
                    loggers:
                      additionalProperties:
                        type: string
                      description: A Map from logger name to logger level.
                      type: object
                    type:
                      description: Logging type, must be either 'inline' or 'external'.
                      enum:
                        - inline
                        - external
                      type: string
                    valueFrom:
                      description: '`ConfigMap` entry where the logging configuration is stored. '
                      properties:
                        configMapKeyRef:
                          description: Reference to the key in the ConfigMap containing the configuration.
                          properties:
                            key:
                              type: string
                            name:
                              type: string
                            optional:
                              type: boolean
                          type: object
                      type: object
                  required:
                    - type
                  type: object
                metricsConfig:
                  description: Metrics configuration.
                  properties:
                    type:
                      description: Metrics type. Only 'jmxPrometheusExporter' supported currently.
                      enum:
                        - jmxPrometheusExporter
                      type: string
                    valueFrom:
                      description: 'ConfigMap entry where the Prometheus JMX Exporter configuration is stored. '
                      properties:
                        configMapKeyRef:
                          description: Reference to the key in the ConfigMap containing the configuration.
                          properties:
                            key:
                              type: string
                            name:
                              type: string
                            optional:
                              type: boolean
                          type: object
                      type: object
                  required:
                    - type
                    - valueFrom
                  type: object
                mirrors:
                  description: Configuration of the MirrorMaker 2 connectors.
                  items:
                    properties:
                      checkpointConnector:
                        description: The specification of the Kafka MirrorMaker 2 checkpoint connector.
                        properties:
                          alterOffsets:
                            description: Configuration for altering offsets.
                            properties:
                              fromConfigMap:
                                description: Reference to the ConfigMap where the new offsets are stored.
                                properties:
                                  name:
                                    type: string
                                type: object
                            required:
                              - fromConfigMap
                            type: object
                          autoRestart:
                            description: Automatic restart of connector and tasks configuration.
                            properties:
                              enabled:
                                description: Whether automatic restart for failed connectors and tasks should be enabled or disabled.
                                type: boolean
                              maxRestarts:
                                description: The maximum number of connector restarts that the operator will try. If the connector remains in a failed state after reaching this limit, it must be restarted manually by the user. Defaults to an unlimited number of restarts.
                                type: integer
                            type: object
                          config:
                            description: 'The Kafka Connector configuration. The following properties cannot be set: name, connector.class, tasks.max.'
                            type: object
                            x-kubernetes-preserve-unknown-fields: true
                          listOffsets:
                            description: Configuration for listing offsets.
                            properties:
                              toConfigMap:
                                description: Reference to the ConfigMap where the list of offsets will be written to.
                                properties:
                                  name:
                                    type: string
                                type: object
                            required:
                              - toConfigMap
                            type: object
                          pause:
                            description: Whether the connector should be paused. Defaults to false.
                            type: boolean
                          state:
                            description: The state the connector should be in. Defaults to running.
                            enum:
                              - paused
                              - stopped
                              - running
                            type: string
                          tasksMax:
                            description: The maximum number of tasks for the Kafka Connector.
                            minimum: 1
                            type: integer
                        type: object
                      groupsBlacklistPattern:
                        description: A regular expression matching the consumer groups to exclude from mirroring. Comma-separated lists are also supported.
                        type: string
                      groupsExcludePattern:
                        description: A regular expression matching the consumer groups to exclude from mirroring. Comma-separated lists are also supported.
                        type: string
                      groupsPattern:
                        description: A regular expression matching the consumer groups to be mirrored. Comma-separated lists are also supported.
                        type: string
                      heartbeatConnector:
                        description: The specification of the Kafka MirrorMaker 2 heartbeat connector.
                        properties:
                          alterOffsets:
                            description: Configuration for altering offsets.
                            properties:
                              fromConfigMap:
                                description: Reference to the ConfigMap where the new offsets are stored.
                                properties:
                                  name:
                                    type: string
                                type: object
                            required:
                              - fromConfigMap
                            type: object
                          autoRestart:
                            description: Automatic restart of connector and tasks configuration.
                            properties:
                              enabled:
                                description: Whether automatic restart for failed connectors and tasks should be enabled or disabled.
                                type: boolean
                              maxRestarts:
                                description: The maximum number of connector restarts that the operator will try. If the connector remains in a failed state after reaching this limit, it must be restarted manually by the user. Defaults to an unlimited number of restarts.
                                type: integer
                            type: object
                          config:
                            description: 'The Kafka Connector configuration. The following properties cannot be set: name, connector.class, tasks.max.'
                            type: object
                            x-kubernetes-preserve-unknown-fields: true
                          listOffsets:
                            description: Configuration for listing offsets.
                            properties:
                              toConfigMap:
                                description: Reference to the ConfigMap where the list of offsets will be written to.
                                properties:
                                  name:
                                    type: string
                                type: object
                            required:
                              - toConfigMap
                            type: object
                          pause:
                            description: Whether the connector should be paused. Defaults to false.
                            type: boolean
                          state:
                            description: The state the connector should be in. Defaults to running.
                            enum:
                              - paused
                              - stopped
                              - running
                            type: string
                          tasksMax:
                            description: The maximum number of tasks for the Kafka Connector.
                            minimum: 1
                            type: integer
                        type: object
                      sourceCluster:
                        description: The alias of the source cluster used by the Kafka MirrorMaker 2 connectors. The alias must match a cluster in the list at `spec.clusters`.
                        type: string
                      sourceConnector:
                        description: The specification of the Kafka MirrorMaker 2 source connector.
                        properties:
                          alterOffsets:
                            description: Configuration for altering offsets.
                            properties:
                              fromConfigMap:
                                description: Reference to the ConfigMap where the new offsets are stored.
                                properties:
                                  name:
                                    type: string
                                type: object
                            required:
                              - fromConfigMap
                            type: object
                          autoRestart:
                            description: Automatic restart of connector and tasks configuration.
                            properties:
                              enabled:
                                description: Whether automatic restart for failed connectors and tasks should be enabled or disabled.
                                type: boolean
                              maxRestarts:
                                description: The maximum number of connector restarts that the operator will try. If the connector remains in a failed state after reaching this limit, it must be restarted manually by the user. Defaults to an unlimited number of restarts.
                                type: integer
                            type: object
                          config:
                            description: 'The Kafka Connector configuration. The following properties cannot be set: name, connector.class, tasks.max.'
                            type: object
                            x-kubernetes-preserve-unknown-fields: true
                          listOffsets:
                            description: Configuration for listing offsets.
                            properties:
                              toConfigMap:
                                description: Reference to the ConfigMap where the list of offsets will be written to.
                                properties:
                                  name:
                                    type: string
                                type: object
                            required:
                              - toConfigMap
                            type: object
                          pause:
                            description: Whether the connector should be paused. Defaults to false.
                            type: boolean
                          state:
                            description: The state the connector should be in. Defaults to running.
                            enum:
                              - paused
                              - stopped
                              - running
                            type: string
                          tasksMax:
                            description: The maximum number of tasks for the Kafka Connector.
                            minimum: 1
                            type: integer
                        type: object
                      targetCluster:
                        description: The alias of the target cluster used by the Kafka MirrorMaker 2 connectors. The alias must match a cluster in the list at `spec.clusters`.
                        type: string
                      topicsBlacklistPattern:
                        description: A regular expression matching the topics to exclude from mirroring. Comma-separated lists are also supported.
                        type: string
                      topicsExcludePattern:
                        description: A regular expression matching the topics to exclude from mirroring. Comma-separated lists are also supported.
                        type: string
                      topicsPattern:
                        description: A regular expression matching the topics to be mirrored, for example, "topic1\|topic2\|topic3". Comma-separated lists are also supported.
                        type: string
                    required:
                      - sourceCluster
                      - targetCluster
                    type: object
                  type: array
                rack:
                  description: Configuration of the node label which will be used as the `client.rack` consumer configuration.
                  properties:
                    topologyKey:
                      description: A key that matches labels assigned to the Kubernetes cluster nodes. The value of the label is used to set a broker's `broker.rack` config, and the `client.rack` config for Kafka Connect or MirrorMaker 2.
                      example: topology.kubernetes.io/zone
                      type: string
                  required:
                    - topologyKey
                  type: object
                readinessProbe:
                  description: Pod readiness checking.
                  properties:
                    failureThreshold:
                      description: Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
                      minimum: 1
                      type: integer
                    initialDelaySeconds:
                      description: The initial delay before first the health is first checked. Default to 15 seconds. Minimum value is 0.
                      minimum: 0
                      type: integer
                    periodSeconds:
                      description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
                      minimum: 1
                      type: integer
                    successThreshold:
                      description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
                      minimum: 1
                      type: integer
                    timeoutSeconds:
                      description: The timeout for each attempted health check. Default to 5 seconds. Minimum value is 1.
                      minimum: 1
                      type: integer
                  type: object
                replicas:
                  description: The number of pods in the Kafka Connect group. Defaults to `3`.
                  type: integer
                resources:
                  description: The maximum limits for CPU and memory resources and the requested initial resources.
                  properties:
                    claims:
                      items:
                        properties:
                          name:
                            type: string
                        type: object
                      type: array
                    limits:
                      additionalProperties:
                        anyOf:
                          - type: integer
                          - type: string
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                      type: object
                    requests:
                      additionalProperties:
                        anyOf:
                          - type: integer
                          - type: string
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                      type: object
                  type: object
                template:
                  description: Template for Kafka Connect and Kafka MirrorMaker 2 resources. The template allows users to specify how the `Pods`, `Service`, and other services are generated.
                  properties:
                    apiService:
                      description: Template for Kafka Connect API `Service`.
                      properties:
                        ipFamilies:
                          description: Specifies the IP Families used by the service. Available options are `IPv4` and `IPv6`. If unspecified, Kubernetes will choose the default value based on the `ipFamilyPolicy` setting.
                          items:
                            enum:
                              - IPv4
                              - IPv6
                            type: string
                          type: array
                        ipFamilyPolicy:
                          description: Specifies the IP Family Policy used by the service. Available options are `SingleStack`, `PreferDualStack` and `RequireDualStack`. `SingleStack` is for a single IP family. `PreferDualStack` is for two IP families on dual-stack configured clusters or a single IP family on single-stack clusters. `RequireDualStack` fails unless there are two IP families on dual-stack configured clusters. If unspecified, Kubernetes will choose the default value based on the service type.
                          enum:
                            - SingleStack
                            - PreferDualStack
                            - RequireDualStack
                          type: string
                        metadata:
                          description: Metadata applied to the resource.
                          properties:
                            annotations:
                              additionalProperties:
                                type: string
                              description: Annotations added to the Kubernetes resource.
                              type: object
                            labels:
                              additionalProperties:
                                type: string
                              description: Labels added to the Kubernetes resource.
                              type: object
                          type: object
                      type: object
                    buildConfig:
                      description: Template for the Kafka Connect BuildConfig used to build new container images. The BuildConfig is used only on OpenShift.
                      properties:
                        metadata:
                          description: Metadata to apply to the `PodDisruptionBudgetTemplate` resource.
                          properties:
                            annotations:
                              additionalProperties:
                                type: string
                              description: Annotations added to the Kubernetes resource.
                              type: object
                            labels:
                              additionalProperties:
                                type: string
                              description: Labels added to the Kubernetes resource.
                              type: object
                          type: object
                        pullSecret:
                          description: Container Registry Secret with the credentials for pulling the base image.
                          type: string
                      type: object
                    buildContainer:
                      description: Template for the Kafka Connect Build container. The build container is used only on Kubernetes.
                      properties:
                        env:
                          description: Environment variables which should be applied to the container.
                          items:
                            oneOf:
                              - properties:
                                  value: {}
                                required:
                                  - value
                              - properties:
                                  valueFrom: {}
                                required:
                                  - valueFrom
                            properties:
                              name:
                                description: The environment variable key.
                                type: string
                              value:
                                description: The environment variable value.
                                type: string
                              valueFrom:
                                description: Reference to the secret or config map property to which the environment variable is set.
                                oneOf:
                                  - properties:
                                      secretKeyRef: {}
                                    required:
                                      - secretKeyRef
                                  - properties:
                                      configMapKeyRef: {}
                                    required:
                                      - configMapKeyRef
                                properties:
                                  configMapKeyRef:
                                    description: Reference to a key in a config map.
                                    properties:
                                      key:
                                        type: string
                                      name:
                                        type: string
                                      optional:
                                        type: boolean
                                    type: object
                                  secretKeyRef:
                                    description: Reference to a key in a secret.
                                    properties:
                                      key:
                                        type: string
                                      name:
                                        type: string
                                      optional:
                                        type: boolean
                                    type: object
                                type: object
                            type: object
                          type: array
                        securityContext:
                          description: Security context for the container.
                          properties:
                            allowPrivilegeEscalation:
                              type: boolean
                            appArmorProfile:
                              properties:
                                localhostProfile:
                                  type: string
                                type:
                                  type: string
                              type: object
                            capabilities:
                              properties:
                                add:
                                  items:
                                    type: string
                                  type: array
                                drop:
                                  items:
                                    type: string
                                  type: array
                              type: object
                            privileged:
                              type: boolean
                            procMount:
                              type: string
                            readOnlyRootFilesystem:
                              type: boolean
                            runAsGroup:
                              type: integer
                            runAsNonRoot:
                              type: boolean
                            runAsUser:
                              type: integer
                            seLinuxOptions:
                              properties:
                                level:
                                  type: string
                                role:
                                  type: string
                                type:
                                  type: string
                                user:
                                  type: string
                              type: object
                            seccompProfile:
                              properties:
                                localhostProfile:
                                  type: string
                                type:
                                  type: string
                              type: object
                            windowsOptions:
                              properties:
                                gmsaCredentialSpec:
                                  type: string
                                gmsaCredentialSpecName:
                                  type: string
                                hostProcess:
                                  type: boolean
                                runAsUserName:
                                  type: string
                              type: object
                          type: object
                        volumeMounts:
                          description: Additional volume mounts which should be applied to the container.
                          items:
                            properties:
                              mountPath:
                                type: string
                              mountPropagation:
                                type: string
                              name:
                                type: string
                              readOnly:
                                type: boolean
                              recursiveReadOnly:
                                type: string
                              subPath:
                                type: string
                              subPathExpr:
                                type: string
                            type: object
                          type: array
                      type: object
                    buildPod:
                      description: Template for Kafka Connect Build `Pods`. The build pod is used only on Kubernetes.
                      properties:
                        affinity:
                          description: The pod's affinity rules.
                          properties:
                            nodeAffinity:
                              properties:
                                preferredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      preference:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchFields:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                        type: object
                                      weight:
                                        type: integer
                                    type: object
                                  type: array
                                requiredDuringSchedulingIgnoredDuringExecution:
                                  properties:
                                    nodeSelectorTerms:
                                      items:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchFields:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                        type: object
                                      type: array
                                  type: object
                              type: object
                            podAffinity:
                              properties:
                                preferredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      podAffinityTerm:
                                        properties:
                                          labelSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels:
                                                additionalProperties:
                                                  type: string
                                                type: object
                                            type: object
                                          matchLabelKeys:
                                            items:
                                              type: string
                                            type: array
                                          mismatchLabelKeys:
                                            items:
                                              type: string
                                            type: array
                                          namespaceSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels:
                                                additionalProperties:
                                                  type: string
                                                type: object
                                            type: object
                                          namespaces:
                                            items:
                                              type: string
                                            type: array
                                          topologyKey:
                                            type: string
                                        type: object
                                      weight:
                                        type: integer
                                    type: object
                                  type: array
                                requiredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      labelSelector:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchLabels:
                                            additionalProperties:
                                              type: string
                                            type: object
                                        type: object
                                      matchLabelKeys:
                                        items:
                                          type: string
                                        type: array
                                      mismatchLabelKeys:
                                        items:
                                          type: string
                                        type: array
                                      namespaceSelector:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchLabels:
                                            additionalProperties:
                                              type: string
                                            type: object
                                        type: object
                                      namespaces:
                                        items:
                                          type: string
                                        type: array
                                      topologyKey:
                                        type: string
                                    type: object
                                  type: array
                              type: object
                            podAntiAffinity:
                              properties:
                                preferredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      podAffinityTerm:
                                        properties:
                                          labelSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels:
                                                additionalProperties:
                                                  type: string
                                                type: object
                                            type: object
                                          matchLabelKeys:
                                            items:
                                              type: string
                                            type: array
                                          mismatchLabelKeys:
                                            items:
                                              type: string
                                            type: array
                                          namespaceSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels:
                                                additionalProperties:
                                                  type: string
                                                type: object
                                            type: object
                                          namespaces:
                                            items:
                                              type: string
                                            type: array
                                          topologyKey:
                                            type: string
                                        type: object
                                      weight:
                                        type: integer
                                    type: object
                                  type: array
                                requiredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      labelSelector:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchLabels:
                                            additionalProperties:
                                              type: string
                                            type: object
                                        type: object
                                      matchLabelKeys:
                                        items:
                                          type: string
                                        type: array
                                      mismatchLabelKeys:
                                        items:
                                          type: string
                                        type: array
                                      namespaceSelector:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchLabels:
                                            additionalProperties:
                                              type: string
                                            type: object
                                        type: object
                                      namespaces:
                                        items:
                                          type: string
                                        type: array
                                      topologyKey:
                                        type: string
                                    type: object
                                  type: array
                              type: object
                          type: object
                        enableServiceLinks:
                          description: Indicates whether information about services should be injected into Pod's environment variables.
                          type: boolean
                        hostAliases:
                          description: The pod's HostAliases. HostAliases is an optional list of hosts and IPs that will be injected into the Pod's hosts file if specified.
                          items:
                            properties:
                              hostnames:
                                items:
                                  type: string
                                type: array
                              ip:
                                type: string
                            type: object
                          type: array
                        imagePullSecrets:
                          description: List of references to secrets in the same namespace to use for pulling any of the images used by this Pod. When the `STRIMZI_IMAGE_PULL_SECRETS` environment variable in Cluster Operator and the `imagePullSecrets` option are specified, only the `imagePullSecrets` variable is used and the `STRIMZI_IMAGE_PULL_SECRETS` variable is ignored.
                          items:
                            properties:
                              name:
                                type: string
                            type: object
                          type: array
                        metadata:
                          description: Metadata applied to the resource.
                          properties:
                            annotations:
                              additionalProperties:
                                type: string
                              description: Annotations added to the Kubernetes resource.
                              type: object
                            labels:
                              additionalProperties:
                                type: string
                              description: Labels added to the Kubernetes resource.
                              type: object
                          type: object
                        priorityClassName:
                          description: 'The name of the priority class used to assign priority to the pods. '
                          type: string
                        schedulerName:
                          description: The name of the scheduler used to dispatch this `Pod`. If not specified, the default scheduler will be used.
                          type: string
                        securityContext:
                          description: Configures pod-level security attributes and common container settings.
                          properties:
                            appArmorProfile:
                              properties:
                                localhostProfile:
                                  type: string
                                type:
                                  type: string
                              type: object
                            fsGroup:
                              type: integer
                            fsGroupChangePolicy:
                              type: string
                            runAsGroup:
                              type: integer
                            runAsNonRoot:
                              type: boolean
                            runAsUser:
                              type: integer
                            seLinuxOptions:
                              properties:
                                level:
                                  type: string
                                role:
                                  type: string
                                type:
                                  type: string
                                user:
                                  type: string
                              type: object
                            seccompProfile:
                              properties:
                                localhostProfile:
                                  type: string
                                type:
                                  type: string
                              type: object
                            supplementalGroups:
                              items:
                                type: integer
                              type: array
                            sysctls:
                              items:
                                properties:
                                  name:
                                    type: string
                                  value:
                                    type: string
                                type: object
                              type: array
                            windowsOptions:
                              properties:
                                gmsaCredentialSpec:
                                  type: string
                                gmsaCredentialSpecName:
                                  type: string
                                hostProcess:
                                  type: boolean
                                runAsUserName:
                                  type: string
                              type: object
                          type: object
                        terminationGracePeriodSeconds:
                          description: The grace period is the duration in seconds after the processes running in the pod are sent a termination signal, and the time when the processes are forcibly halted with a kill signal. Set this value to longer than the expected cleanup time for your process. Value must be a non-negative integer. A zero value indicates delete immediately. You might need to increase the grace period for very large Kafka clusters, so that the Kafka brokers have enough time to transfer their work to another broker before they are terminated. Defaults to 30 seconds.
                          minimum: 0
                          type: integer
                        tmpDirSizeLimit:
                          description: Defines the total amount of pod memory allocated for the temporary `EmptyDir` volume `/tmp`. Specify the allocation in memory units, for example, `100Mi` for 100 mebibytes. Default value is `5Mi`. The `/tmp` volume is backed by pod memory, not disk storage, so avoid setting a high value as it consumes pod memory resources.
                          pattern: ^([0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$
                          type: string
                        tolerations:
                          description: The pod's tolerations.
                          items:
                            properties:
                              effect:
                                type: string
                              key:
                                type: string
                              operator:
                                type: string
                              tolerationSeconds:
                                type: integer
                              value:
                                type: string
                            type: object
                          type: array
                        topologySpreadConstraints:
                          description: The pod's topology spread constraints.
                          items:
                            properties:
                              labelSelector:
                                properties:
                                  matchExpressions:
                                    items:
                                      properties:
                                        key:
                                          type: string
                                        operator:
                                          type: string
                                        values:
                                          items:
                                            type: string
                                          type: array
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    type: object
                                type: object
                              matchLabelKeys:
                                items:
                                  type: string
                                type: array
                              maxSkew:
                                type: integer
                              minDomains:
                                type: integer
                              nodeAffinityPolicy:
                                type: string
                              nodeTaintsPolicy:
                                type: string
                              topologyKey:
                                type: string
                              whenUnsatisfiable:
                                type: string
                            type: object
                          type: array
                        volumes:
                          description: Additional volumes that can be mounted to the pod.
                          items:
                            oneOf:
                              - properties:
                                  configMap: {}
                                  csi: {}
                                  emptyDir: {}
                                  persistentVolumeClaim: {}
                                  secret: {}
                            properties:
                              configMap:
                                description: ConfigMap to use to populate the volume.
                                properties:
                                  defaultMode:
                                    type: integer
                                  items:
                                    items:
                                      properties:
                                        key:
                                          type: string
                                        mode:
                                          type: integer
                                        path:
                                          type: string
                                      type: object
                                    type: array
                                  name:
                                    type: string
                                  optional:
                                    type: boolean
                                type: object
                              csi:
                                description: CSIVolumeSource object to use to populate the volume.
                                properties:
                                  driver:
                                    type: string
                                  fsType:
                                    type: string
                                  nodePublishSecretRef:
                                    properties:
                                      name:
                                        type: string
                                    type: object
                                  readOnly:
                                    type: boolean
                                  volumeAttributes:
                                    additionalProperties:
                                      type: string
                                    type: object
                                type: object
                              emptyDir:
                                description: EmptyDir to use to populate the volume.
                                properties:
                                  medium:
                                    type: string
                                  sizeLimit:
                                    properties:
                                      amount:
                                        type: string
                                      format:
                                        type: string
                                    type: object
                                type: object
                              name:
                                description: Name to use for the volume. Required.
                                type: string
                              persistentVolumeClaim:
                                description: PersistentVolumeClaim object to use to populate the volume.
                                properties:
                                  claimName:
                                    type: string
                                  readOnly:
                                    type: boolean
                                type: object
                              secret:
                                description: Secret to use populate the volume.
                                properties:
                                  defaultMode:
                                    type: integer
                                  items:
                                    items:
                                      properties:
                                        key:
                                          type: string
                                        mode:
                                          type: integer
                                        path:
                                          type: string
                                      type: object
                                    type: array
                                  optional:
                                    type: boolean
                                  secretName:
                                    type: string
                                type: object
                            type: object
                          type: array
                      type: object
                    buildServiceAccount:
                      description: Template for the Kafka Connect Build service account.
                      properties:
                        metadata:
                          description: Metadata applied to the resource.
                          properties:
                            annotations:
                              additionalProperties:
                                type: string
                              description: Annotations added to the Kubernetes resource.
                              type: object
                            labels:
                              additionalProperties:
                                type: string
                              description: Labels added to the Kubernetes resource.
                              type: object
                          type: object
                      type: object
                    clusterRoleBinding:
                      description: Template for the Kafka Connect ClusterRoleBinding.
                      properties:
                        metadata:
                          description: Metadata applied to the resource.
                          properties:
                            annotations:
                              additionalProperties:
                                type: string
                              description: Annotations added to the Kubernetes resource.
                              type: object
                            labels:
                              additionalProperties:
                                type: string
                              description: Labels added to the Kubernetes resource.
                              type: object
                          type: object
                      type: object
                    connectContainer:
                      description: Template for the Kafka Connect container.
                      properties:
                        env:
                          description: Environment variables which should be applied to the container.
                          items:
                            oneOf:
                              - properties:
                                  value: {}
                                required:
                                  - value
                              - properties:
                                  valueFrom: {}
                                required:
                                  - valueFrom
                            properties:
                              name:
                                description: The environment variable key.
                                type: string
                              value:
                                description: The environment variable value.
                                type: string
                              valueFrom:
                                description: Reference to the secret or config map property to which the environment variable is set.
                                oneOf:
                                  - properties:
                                      secretKeyRef: {}
                                    required:
                                      - secretKeyRef
                                  - properties:
                                      configMapKeyRef: {}
                                    required:
                                      - configMapKeyRef
                                properties:
                                  configMapKeyRef:
                                    description: Reference to a key in a config map.
                                    properties:
                                      key:
                                        type: string
                                      name:
                                        type: string
                                      optional:
                                        type: boolean
                                    type: object
                                  secretKeyRef:
                                    description: Reference to a key in a secret.
                                    properties:
                                      key:
                                        type: string
                                      name:
                                        type: string
                                      optional:
                                        type: boolean
                                    type: object
                                type: object
                            type: object
                          type: array
                        securityContext:
                          description: Security context for the container.
                          properties:
                            allowPrivilegeEscalation:
                              type: boolean
                            appArmorProfile:
                              properties:
                                localhostProfile:
                                  type: string
                                type:
                                  type: string
                              type: object
                            capabilities:
                              properties:
                                add:
                                  items:
                                    type: string
                                  type: array
                                drop:
                                  items:
                                    type: string
                                  type: array
                              type: object
                            privileged:
                              type: boolean
                            procMount:
                              type: string
                            readOnlyRootFilesystem:
                              type: boolean
                            runAsGroup:
                              type: integer
                            runAsNonRoot:
                              type: boolean
                            runAsUser:
                              type: integer
                            seLinuxOptions:
                              properties:
                                level:
                                  type: string
                                role:
                                  type: string
                                type:
                                  type: string
                                user:
                                  type: string
                              type: object
                            seccompProfile:
                              properties:
                                localhostProfile:
                                  type: string
                                type:
                                  type: string
                              type: object
                            windowsOptions:
                              properties:
                                gmsaCredentialSpec:
                                  type: string
                                gmsaCredentialSpecName:
                                  type: string
                                hostProcess:
                                  type: boolean
                                runAsUserName:
                                  type: string
                              type: object
                          type: object
                        volumeMounts:
                          description: Additional volume mounts which should be applied to the container.
                          items:
                            properties:
                              mountPath:
                                type: string
                              mountPropagation:
                                type: string
                              name:
                                type: string
                              readOnly:
                                type: boolean
                              recursiveReadOnly:
                                type: string
                              subPath:
                                type: string
                              subPathExpr:
                                type: string
                            type: object
                          type: array
                      type: object
                    deployment:
                      description: Template for Kafka Connect `Deployment`.
                      properties:
                        deploymentStrategy:
                          description: Pod replacement strategy for deployment configuration changes. Valid values are `RollingUpdate` and `Recreate`. Defaults to `RollingUpdate`.
                          enum:
                            - RollingUpdate
                            - Recreate
                          type: string
                        metadata:
                          description: Metadata applied to the resource.
                          properties:
                            annotations:
                              additionalProperties:
                                type: string
                              description: Annotations added to the Kubernetes resource.
                              type: object
                            labels:
                              additionalProperties:
                                type: string
                              description: Labels added to the Kubernetes resource.
                              type: object
                          type: object
                      type: object
                    headlessService:
                      description: Template for Kafka Connect headless `Service`.
                      properties:
                        ipFamilies:
                          description: Specifies the IP Families used by the service. Available options are `IPv4` and `IPv6`. If unspecified, Kubernetes will choose the default value based on the `ipFamilyPolicy` setting.
                          items:
                            enum:
                              - IPv4
                              - IPv6
                            type: string
                          type: array
                        ipFamilyPolicy:
                          description: Specifies the IP Family Policy used by the service. Available options are `SingleStack`, `PreferDualStack` and `RequireDualStack`. `SingleStack` is for a single IP family. `PreferDualStack` is for two IP families on dual-stack configured clusters or a single IP family on single-stack clusters. `RequireDualStack` fails unless there are two IP families on dual-stack configured clusters. If unspecified, Kubernetes will choose the default value based on the service type.
                          enum:
                            - SingleStack
                            - PreferDualStack
                            - RequireDualStack
                          type: string
                        metadata:
                          description: Metadata applied to the resource.
                          properties:
                            annotations:
                              additionalProperties:
                                type: string
                              description: Annotations added to the Kubernetes resource.
                              type: object
                            labels:
                              additionalProperties:
                                type: string
                              description: Labels added to the Kubernetes resource.
                              type: object
                          type: object
                      type: object
                    initContainer:
                      description: Template for the Kafka init container.
                      properties:
                        env:
                          description: Environment variables which should be applied to the container.
                          items:
                            oneOf:
                              - properties:
                                  value: {}
                                required:
                                  - value
                              - properties:
                                  valueFrom: {}
                                required:
                                  - valueFrom
                            properties:
                              name:
                                description: The environment variable key.
                                type: string
                              value:
                                description: The environment variable value.
                                type: string
                              valueFrom:
                                description: Reference to the secret or config map property to which the environment variable is set.
                                oneOf:
                                  - properties:
                                      secretKeyRef: {}
                                    required:
                                      - secretKeyRef
                                  - properties:
                                      configMapKeyRef: {}
                                    required:
                                      - configMapKeyRef
                                properties:
                                  configMapKeyRef:
                                    description: Reference to a key in a config map.
                                    properties:
                                      key:
                                        type: string
                                      name:
                                        type: string
                                      optional:
                                        type: boolean
                                    type: object
                                  secretKeyRef:
                                    description: Reference to a key in a secret.
                                    properties:
                                      key:
                                        type: string
                                      name:
                                        type: string
                                      optional:
                                        type: boolean
                                    type: object
                                type: object
                            type: object
                          type: array
                        securityContext:
                          description: Security context for the container.
                          properties:
                            allowPrivilegeEscalation:
                              type: boolean
                            appArmorProfile:
                              properties:
                                localhostProfile:
                                  type: string
                                type:
                                  type: string
                              type: object
                            capabilities:
                              properties:
                                add:
                                  items:
                                    type: string
                                  type: array
                                drop:
                                  items:
                                    type: string
                                  type: array
                              type: object
                            privileged:
                              type: boolean
                            procMount:
                              type: string
                            readOnlyRootFilesystem:
                              type: boolean
                            runAsGroup:
                              type: integer
                            runAsNonRoot:
                              type: boolean
                            runAsUser:
                              type: integer
                            seLinuxOptions:
                              properties:
                                level:
                                  type: string
                                role:
                                  type: string
                                type:
                                  type: string
                                user:
                                  type: string
                              type: object
                            seccompProfile:
                              properties:
                                localhostProfile:
                                  type: string
                                type:
                                  type: string
                              type: object
                            windowsOptions:
                              properties:
                                gmsaCredentialSpec:
                                  type: string
                                gmsaCredentialSpecName:
                                  type: string
                                hostProcess:
                                  type: boolean
                                runAsUserName:
                                  type: string
                              type: object
                          type: object
                        volumeMounts:
                          description: Additional volume mounts which should be applied to the container.
                          items:
                            properties:
                              mountPath:
                                type: string
                              mountPropagation:
                                type: string
                              name:
                                type: string
                              readOnly:
                                type: boolean
                              recursiveReadOnly:
                                type: string
                              subPath:
                                type: string
                              subPathExpr:
                                type: string
                            type: object
                          type: array
                      type: object
                    jmxSecret:
                      description: Template for Secret of the Kafka Connect Cluster JMX authentication.
                      properties:
                        metadata:
                          description: Metadata applied to the resource.
                          properties:
                            annotations:
                              additionalProperties:
                                type: string
                              description: Annotations added to the Kubernetes resource.
                              type: object
                            labels:
                              additionalProperties:
                                type: string
                              description: Labels added to the Kubernetes resource.
                              type: object
                          type: object
                      type: object
                    pod:
                      description: Template for Kafka Connect `Pods`.
                      properties:
                        affinity:
                          description: The pod's affinity rules.
                          properties:
                            nodeAffinity:
                              properties:
                                preferredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      preference:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchFields:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                        type: object
                                      weight:
                                        type: integer
                                    type: object
                                  type: array
                                requiredDuringSchedulingIgnoredDuringExecution:
                                  properties:
                                    nodeSelectorTerms:
                                      items:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchFields:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                        type: object
                                      type: array
                                  type: object
                              type: object
                            podAffinity:
                              properties:
                                preferredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      podAffinityTerm:
                                        properties:
                                          labelSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels:
                                                additionalProperties:
                                                  type: string
                                                type: object
                                            type: object
                                          matchLabelKeys:
                                            items:
                                              type: string
                                            type: array
                                          mismatchLabelKeys:
                                            items:
                                              type: string
                                            type: array
                                          namespaceSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels:
                                                additionalProperties:
                                                  type: string
                                                type: object
                                            type: object
                                          namespaces:
                                            items:
                                              type: string
                                            type: array
                                          topologyKey:
                                            type: string
                                        type: object
                                      weight:
                                        type: integer
                                    type: object
                                  type: array
                                requiredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      labelSelector:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchLabels:
                                            additionalProperties:
                                              type: string
                                            type: object
                                        type: object
                                      matchLabelKeys:
                                        items:
                                          type: string
                                        type: array
                                      mismatchLabelKeys:
                                        items:
                                          type: string
                                        type: array
                                      namespaceSelector:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchLabels:
                                            additionalProperties:
                                              type: string
                                            type: object
                                        type: object
                                      namespaces:
                                        items:
                                          type: string
                                        type: array
                                      topologyKey:
                                        type: string
                                    type: object
                                  type: array
                              type: object
                            podAntiAffinity:
                              properties:
                                preferredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      podAffinityTerm:
                                        properties:
                                          labelSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels:
                                                additionalProperties:
                                                  type: string
                                                type: object
                                            type: object
                                          matchLabelKeys:
                                            items:
                                              type: string
                                            type: array
                                          mismatchLabelKeys:
                                            items:
                                              type: string
                                            type: array
                                          namespaceSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels:
                                                additionalProperties:
                                                  type: string
                                                type: object
                                            type: object
                                          namespaces:
                                            items:
                                              type: string
                                            type: array
                                          topologyKey:
                                            type: string
                                        type: object
                                      weight:
                                        type: integer
                                    type: object
                                  type: array
                                requiredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      labelSelector:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchLabels:
                                            additionalProperties:
                                              type: string
                                            type: object
                                        type: object
                                      matchLabelKeys:
                                        items:
                                          type: string
                                        type: array
                                      mismatchLabelKeys:
                                        items:
                                          type: string
                                        type: array
                                      namespaceSelector:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchLabels:
                                            additionalProperties:
                                              type: string
                                            type: object
                                        type: object
                                      namespaces:
                                        items:
                                          type: string
                                        type: array
                                      topologyKey:
                                        type: string
                                    type: object
                                  type: array
                              type: object
                          type: object
                        enableServiceLinks:
                          description: Indicates whether information about services should be injected into Pod's environment variables.
                          type: boolean
                        hostAliases:
                          description: The pod's HostAliases. HostAliases is an optional list of hosts and IPs that will be injected into the Pod's hosts file if specified.
                          items:
                            properties:
                              hostnames:
                                items:
                                  type: string
                                type: array
                              ip:
                                type: string
                            type: object
                          type: array
                        imagePullSecrets:
                          description: List of references to secrets in the same namespace to use for pulling any of the images used by this Pod. When the `STRIMZI_IMAGE_PULL_SECRETS` environment variable in Cluster Operator and the `imagePullSecrets` option are specified, only the `imagePullSecrets` variable is used and the `STRIMZI_IMAGE_PULL_SECRETS` variable is ignored.
                          items:
                            properties:
                              name:
                                type: string
                            type: object
                          type: array
                        metadata:
                          description: Metadata applied to the resource.
                          properties:
                            annotations:
                              additionalProperties:
                                type: string
                              description: Annotations added to the Kubernetes resource.
                              type: object
                            labels:
                              additionalProperties:
                                type: string
                              description: Labels added to the Kubernetes resource.
                              type: object
                          type: object
                        priorityClassName:
                          description: 'The name of the priority class used to assign priority to the pods. '
                          type: string
                        schedulerName:
                          description: The name of the scheduler used to dispatch this `Pod`. If not specified, the default scheduler will be used.
                          type: string
                        securityContext:
                          description: Configures pod-level security attributes and common container settings.
                          properties:
                            appArmorProfile:
                              properties:
                                localhostProfile:
                                  type: string
                                type:
                                  type: string
                              type: object
                            fsGroup:
                              type: integer
                            fsGroupChangePolicy:
                              type: string
                            runAsGroup:
                              type: integer
                            runAsNonRoot:
                              type: boolean
                            runAsUser:
                              type: integer
                            seLinuxOptions:
                              properties:
                                level:
                                  type: string
                                role:
                                  type: string
                                type:
                                  type: string
                                user:
                                  type: string
                              type: object
                            seccompProfile:
                              properties:
                                localhostProfile:
                                  type: string
                                type:
                                  type: string
                              type: object
                            supplementalGroups:
                              items:
                                type: integer
                              type: array
                            sysctls:
                              items:
                                properties:
                                  name:
                                    type: string
                                  value:
                                    type: string
                                type: object
                              type: array
                            windowsOptions:
                              properties:
                                gmsaCredentialSpec:
                                  type: string
                                gmsaCredentialSpecName:
                                  type: string
                                hostProcess:
                                  type: boolean
                                runAsUserName:
                                  type: string
                              type: object
                          type: object
                        terminationGracePeriodSeconds:
                          description: The grace period is the duration in seconds after the processes running in the pod are sent a termination signal, and the time when the processes are forcibly halted with a kill signal. Set this value to longer than the expected cleanup time for your process. Value must be a non-negative integer. A zero value indicates delete immediately. You might need to increase the grace period for very large Kafka clusters, so that the Kafka brokers have enough time to transfer their work to another broker before they are terminated. Defaults to 30 seconds.
                          minimum: 0
                          type: integer
                        tmpDirSizeLimit:
                          description: Defines the total amount of pod memory allocated for the temporary `EmptyDir` volume `/tmp`. Specify the allocation in memory units, for example, `100Mi` for 100 mebibytes. Default value is `5Mi`. The `/tmp` volume is backed by pod memory, not disk storage, so avoid setting a high value as it consumes pod memory resources.
                          pattern: ^([0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$
                          type: string
                        tolerations:
                          description: The pod's tolerations.
                          items:
                            properties:
                              effect:
                                type: string
                              key:
                                type: string
                              operator:
                                type: string
                              tolerationSeconds:
                                type: integer
                              value:
                                type: string
                            type: object
                          type: array
                        topologySpreadConstraints:
                          description: The pod's topology spread constraints.
                          items:
                            properties:
                              labelSelector:
                                properties:
                                  matchExpressions:
                                    items:
                                      properties:
                                        key:
                                          type: string
                                        operator:
                                          type: string
                                        values:
                                          items:
                                            type: string
                                          type: array
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    type: object
                                type: object
                              matchLabelKeys:
                                items:
                                  type: string
                                type: array
                              maxSkew:
                                type: integer
                              minDomains:
                                type: integer
                              nodeAffinityPolicy:
                                type: string
                              nodeTaintsPolicy:
                                type: string
                              topologyKey:
                                type: string
                              whenUnsatisfiable:
                                type: string
                            type: object
                          type: array
                        volumes:
                          description: Additional volumes that can be mounted to the pod.
                          items:
                            oneOf:
                              - properties:
                                  configMap: {}
                                  csi: {}
                                  emptyDir: {}
                                  persistentVolumeClaim: {}
                                  secret: {}
                            properties:
                              configMap:
                                description: ConfigMap to use to populate the volume.
                                properties:
                                  defaultMode:
                                    type: integer
                                  items:
                                    items:
                                      properties:
                                        key:
                                          type: string
                                        mode:
                                          type: integer
                                        path:
                                          type: string
                                      type: object
                                    type: array
                                  name:
                                    type: string
                                  optional:
                                    type: boolean
                                type: object
                              csi:
                                description: CSIVolumeSource object to use to populate the volume.
                                properties:
                                  driver:
                                    type: string
                                  fsType:
                                    type: string
                                  nodePublishSecretRef:
                                    properties:
                                      name:
                                        type: string
                                    type: object
                                  readOnly:
                                    type: boolean
                                  volumeAttributes:
                                    additionalProperties:
                                      type: string
                                    type: object
                                type: object
                              emptyDir:
                                description: EmptyDir to use to populate the volume.
                                properties:
                                  medium:
                                    type: string
                                  sizeLimit:
                                    properties:
                                      amount:
                                        type: string
                                      format:
                                        type: string
                                    type: object
                                type: object
                              name:
                                description: Name to use for the volume. Required.
                                type: string
                              persistentVolumeClaim:
                                description: PersistentVolumeClaim object to use to populate the volume.
                                properties:
                                  claimName:
                                    type: string
                                  readOnly:
                                    type: boolean
                                type: object
                              secret:
                                description: Secret to use populate the volume.
                                properties:
                                  defaultMode:
                                    type: integer
                                  items:
                                    items:
                                      properties:
                                        key:
                                          type: string
                                        mode:
                                          type: integer
                                        path:
                                          type: string
                                      type: object
                                    type: array
                                  optional:
                                    type: boolean
                                  secretName:
                                    type: string
                                type: object
                            type: object
                          type: array
                      type: object
                    podDisruptionBudget:
                      description: Template for Kafka Connect `PodDisruptionBudget`.
                      properties:
                        maxUnavailable:
                          description: Maximum number of unavailable pods to allow automatic Pod eviction. A Pod eviction is allowed when the `maxUnavailable` number of pods or fewer are unavailable after the eviction. Setting this value to 0 prevents all voluntary evictions, so the pods must be evicted manually. Defaults to 1.
                          minimum: 0
                          type: integer
                        metadata:
                          description: Metadata to apply to the `PodDisruptionBudgetTemplate` resource.
                          properties:
                            annotations:
                              additionalProperties:
                                type: string
                              description: Annotations added to the Kubernetes resource.
                              type: object
                            labels:
                              additionalProperties:
                                type: string
                              description: Labels added to the Kubernetes resource.
                              type: object
                          type: object
                      type: object
                    podSet:
                      description: Template for Kafka Connect `StrimziPodSet` resource.
                      properties:
                        metadata:
                          description: Metadata applied to the resource.
                          properties:
                            annotations:
                              additionalProperties:
                                type: string
                              description: Annotations added to the Kubernetes resource.
                              type: object
                            labels:
                              additionalProperties:
                                type: string
                              description: Labels added to the Kubernetes resource.
                              type: object
                          type: object
                      type: object
                    serviceAccount:
                      description: Template for the Kafka Connect service account.
                      properties:
                        metadata:
                          description: Metadata applied to the resource.
                          properties:
                            annotations:
                              additionalProperties:
                                type: string
                              description: Annotations added to the Kubernetes resource.
                              type: object
                            labels:
                              additionalProperties:
                                type: string
                              description: Labels added to the Kubernetes resource.
                              type: object
                          type: object
                      type: object
                  type: object
                tracing:
                  description: The configuration of tracing in Kafka Connect.
                  properties:
                    type:
                      description: Type of the tracing used. Currently the only supported type is `opentelemetry` for OpenTelemetry tracing. As of Strimzi 0.37.0, `jaeger` type is not supported anymore and this option is ignored.
                      enum:
                        - jaeger
                        - opentelemetry
                      type: string
                  required:
                    - type
                  type: object
                version:
                  description: The Kafka Connect version. Defaults to the latest version. Consult the user documentation to understand the process required to upgrade or downgrade the version.
                  type: string
              required:
                - connectCluster
              type: object
            status:
              description: The status of the Kafka MirrorMaker 2 cluster.
              properties:
                autoRestartStatuses:
                  description: List of MirrorMaker 2 connector auto restart statuses.
                  items:
                    properties:
                      connectorName:
                        description: The name of the connector being restarted.
                        type: string
                      count:
                        description: The number of times the connector or task is restarted.
                        type: integer
                      lastRestartTimestamp:
                        description: The last time the automatic restart was attempted. The required format is 'yyyy-MM-ddTHH:mm:ssZ' in the UTC time zone.
                        type: string
                    type: object
                  type: array
                conditions:
                  description: List of status conditions.
                  items:
                    properties:
                      lastTransitionTime:
                        description: Last time the condition of a type changed from one status to another. The required format is 'yyyy-MM-ddTHH:mm:ssZ', in the UTC time zone.
                        type: string
                      message:
                        description: Human-readable message indicating details about the condition's last transition.
                        type: string
                      reason:
                        description: The reason for the condition's last transition (a single word in CamelCase).
                        type: string
                      status:
                        description: The status of the condition, either True, False or Unknown.
                        type: string
                      type:
                        description: The unique identifier of a condition, used to distinguish between other conditions in the resource.
                        type: string
                    type: object
                  type: array
                connectorPlugins:
                  description: The list of connector plugins available in this Kafka Connect deployment.
                  items:
                    properties:
                      class:
                        description: The class of the connector plugin.
                        type: string
                      type:
                        description: The type of the connector plugin. The available types are `sink` and `source`.
                        type: string
                      version:
                        description: The version of the connector plugin.
                        type: string
                    type: object
                  type: array
                connectors:
                  description: List of MirrorMaker 2 connector statuses, as reported by the Kafka Connect REST API.
                  items:
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                  type: array
                labelSelector:
                  description: Label selector for pods providing this resource.
                  type: string
                observedGeneration:
                  description: The generation of the CRD that was last reconciled by the operator.
                  type: integer
                replicas:
                  description: The current number of pods being used to provide this resource.
                  type: integer
                url:
                  description: The URL of the REST API endpoint for managing and monitoring Kafka Connect connectors.
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        scale:
          labelSelectorPath: .status.labelSelector
          specReplicasPath: .spec.replicas
          statusReplicasPath: .status.replicas
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    app: strimzi
    strimzi.io/crd-install: "true"
  name: strimzipodsets.core.strimzi.io
spec:
  conversion:
    strategy: None
  group: core.strimzi.io
  names:
    categories:
      - strimzi
    kind: StrimziPodSet
    listKind: StrimziPodSetList
    plural: strimzipodsets
    shortNames:
      - sps
    singular: strimzipodset
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - description: Number of pods managed by the StrimziPodSet
          jsonPath: .status.pods
          name: Pods
          type: integer
        - description: Number of ready pods managed by the StrimziPodSet
          jsonPath: .status.readyPods
          name: Ready Pods
          type: integer
        - description: Number of up-to-date pods managed by the StrimziPodSet
          jsonPath: .status.currentPods
          name: Current Pods
          type: integer
        - description: Age of the StrimziPodSet
          jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1beta2
      schema:
        openAPIV3Schema:
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: The specification of the StrimziPodSet.
              properties:
                pods:
                  description: The Pods managed by this StrimziPodSet.
                  items:
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                  type: array
                selector:
                  description: Selector is a label query which matches all the pods managed by this `StrimziPodSet`. Only `matchLabels` is supported. If `matchExpressions` is set, it will be ignored.
                  properties:
                    matchExpressions:
                      items:
                        properties:
                          key:
                            type: string
                          operator:
                            type: string
                          values:
                            items:
                              type: string
                            type: array
                        type: object
                      type: array
                    matchLabels:
                      additionalProperties:
                        type: string
                      type: object
                  type: object
              required:
                - selector
                - pods
              type: object
            status:
              description: The status of the StrimziPodSet.
              properties:
                conditions:
                  description: List of status conditions.
                  items:
                    properties:
                      lastTransitionTime:
                        description: Last time the condition of a type changed from one status to another. The required format is 'yyyy-MM-ddTHH:mm:ssZ', in the UTC time zone.
                        type: string
                      message:
                        description: Human-readable message indicating details about the condition's last transition.
                        type: string
                      reason:
                        description: The reason for the condition's last transition (a single word in CamelCase).
                        type: string
                      status:
                        description: The status of the condition, either True, False or Unknown.
                        type: string
                      type:
                        description: The unique identifier of a condition, used to distinguish between other conditions in the resource.
                        type: string
                    type: object
                  type: array
                currentPods:
                  description: Number of pods managed by this `StrimziPodSet` resource that have the current revision.
                  type: integer
                observedGeneration:
                  description: The generation of the CRD that was last reconciled by the operator.
                  type: integer
                pods:
                  description: Number of pods managed by this `StrimziPodSet` resource.
                  type: integer
                readyPods:
                  description: Number of pods managed by this `StrimziPodSet` resource that are ready.
                  type: integer
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    app: strimzi
    strimzi.io/crd-install: "true"
  name: kafkanodepools.kafka.strimzi.io
spec:
  conversion:
    strategy: None
  group: kafka.strimzi.io
  names:
    categories:
      - strimzi
    kind: KafkaNodePool
    listKind: KafkaNodePoolList
    plural: kafkanodepools
    shortNames:
      - knp
    singular: kafkanodepool
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - description: The desired number of replicas
          jsonPath: .spec.replicas
          name: Desired replicas
          type: integer
        - description: Roles of the nodes in the pool
          jsonPath: .status.roles
          name: Roles
          type: string
        - description: Node IDs used by Kafka nodes in this pool
          jsonPath: .status.nodeIds
          name: NodeIds
          type: string
      name: v1beta2
      schema:
        openAPIV3Schema:
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: The specification of the KafkaNodePool.
              properties:
                jvmOptions:
                  description: JVM Options for pods.
                  properties:
                    -XX:
                      additionalProperties:
                        type: string
                      description: A map of -XX options to the JVM.
                      type: object
                    -Xms:
                      description: -Xms option to to the JVM.
                      pattern: ^[0-9]+[mMgG]?$
                      type: string
                    -Xmx:
                      description: -Xmx option to to the JVM.
                      pattern: ^[0-9]+[mMgG]?$
                      type: string
                    gcLoggingEnabled:
                      description: Specifies whether the Garbage Collection logging is enabled. The default is false.
                      type: boolean
                    javaSystemProperties:
                      description: A map of additional system properties which will be passed using the `-D` option to the JVM.
                      items:
                        properties:
                          name:
                            description: The system property name.
                            type: string
                          value:
                            description: The system property value.
                            type: string
                        type: object
                      type: array
                  type: object
                replicas:
                  description: The number of pods in the pool.
                  minimum: 0
                  type: integer
                resources:
                  description: CPU and memory resources to reserve.
                  properties:
                    claims:
                      items:
                        properties:
                          name:
                            type: string
                        type: object
                      type: array
                    limits:
                      additionalProperties:
                        anyOf:
                          - type: integer
                          - type: string
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                      type: object
                    requests:
                      additionalProperties:
                        anyOf:
                          - type: integer
                          - type: string
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                      type: object
                  type: object
                roles:
                  description: The roles that the nodes in this pool will have when KRaft mode is enabled. Supported values are 'broker' and 'controller'. This field is required. When KRaft mode is disabled, the only allowed value if `broker`.
                  items:
                    enum:
                      - controller
                      - broker
                    type: string
                  type: array
                storage:
                  description: Storage configuration (disk). Cannot be updated.
                  properties:
                    class:
                      description: The storage class to use for dynamic volume allocation.
                      type: string
                    deleteClaim:
                      description: Specifies if the persistent volume claim has to be deleted when the cluster is un-deployed.
                      type: boolean
                    id:
                      description: Storage identification number. It is mandatory only for storage volumes defined in a storage of type 'jbod'.
                      minimum: 0
                      type: integer
                    kraftMetadata:
                      description: Specifies whether this volume should be used for storing KRaft metadata. This property is optional. When set, the only currently supported value is `shared`. At most one volume can have this property set.
                      enum:
                        - shared
                      type: string
                    overrides:
                      description: Overrides for individual brokers. The `overrides` field allows you to specify a different configuration for different brokers.
                      items:
                        properties:
                          broker:
                            description: Id of the kafka broker (broker identifier).
                            type: integer
                          class:
                            description: The storage class to use for dynamic volume allocation for this broker.
                            type: string
                        type: object
                      type: array
                    selector:
                      additionalProperties:
                        type: string
                      description: Specifies a specific persistent volume to use. It contains key:value pairs representing labels for selecting such a volume.
                      type: object
                    size:
                      description: When `type=persistent-claim`, defines the size of the persistent volume claim, such as 100Gi. Mandatory when `type=persistent-claim`.
                      type: string
                    sizeLimit:
                      description: When type=ephemeral, defines the total amount of local storage required for this EmptyDir volume (for example 1Gi).
                      pattern: ^([0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$
                      type: string
                    type:
                      description: Storage type, must be either 'ephemeral', 'persistent-claim', or 'jbod'.
                      enum:
                        - ephemeral
                        - persistent-claim
                        - jbod
                      type: string
                    volumes:
                      description: List of volumes as Storage objects representing the JBOD disks array.
                      items:
                        properties:
                          class:
                            description: The storage class to use for dynamic volume allocation.
                            type: string
                          deleteClaim:
                            description: Specifies if the persistent volume claim has to be deleted when the cluster is un-deployed.
                            type: boolean
                          id:
                            description: Storage identification number. Mandatory for storage volumes defined with a `jbod` storage type configuration.
                            minimum: 0
                            type: integer
                          kraftMetadata:
                            description: Specifies whether this volume should be used for storing KRaft metadata. This property is optional. When set, the only currently supported value is `shared`. At most one volume can have this property set.
                            enum:
                              - shared
                            type: string
                          overrides:
                            description: Overrides for individual brokers. The `overrides` field allows you to specify a different configuration for different brokers.
                            items:
                              properties:
                                broker:
                                  description: Id of the kafka broker (broker identifier).
                                  type: integer
                                class:
                                  description: The storage class to use for dynamic volume allocation for this broker.
                                  type: string
                              type: object
                            type: array
                          selector:
                            additionalProperties:
                              type: string
                            description: Specifies a specific persistent volume to use. It contains key:value pairs representing labels for selecting such a volume.
                            type: object
                          size:
                            description: When `type=persistent-claim`, defines the size of the persistent volume claim, such as 100Gi. Mandatory when `type=persistent-claim`.
                            type: string
                          sizeLimit:
                            description: When type=ephemeral, defines the total amount of local storage required for this EmptyDir volume (for example 1Gi).
                            pattern: ^([0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$
                            type: string
                          type:
                            description: Storage type, must be either 'ephemeral' or 'persistent-claim'.
                            enum:
                              - ephemeral
                              - persistent-claim
                            type: string
                        required:
                          - type
                        type: object
                      type: array
                  required:
                    - type
                  type: object
                template:
                  description: Template for pool resources. The template allows users to specify how the resources belonging to this pool are generated.
                  properties:
                    initContainer:
                      description: Template for the Kafka init container.
                      properties:
                        env:
                          description: Environment variables which should be applied to the container.
                          items:
                            oneOf:
                              - properties:
                                  value: {}
                                required:
                                  - value
                              - properties:
                                  valueFrom: {}
                                required:
                                  - valueFrom
                            properties:
                              name:
                                description: The environment variable key.
                                type: string
                              value:
                                description: The environment variable value.
                                type: string
                              valueFrom:
                                description: Reference to the secret or config map property to which the environment variable is set.
                                oneOf:
                                  - properties:
                                      secretKeyRef: {}
                                    required:
                                      - secretKeyRef
                                  - properties:
                                      configMapKeyRef: {}
                                    required:
                                      - configMapKeyRef
                                properties:
                                  configMapKeyRef:
                                    description: Reference to a key in a config map.
                                    properties:
                                      key:
                                        type: string
                                      name:
                                        type: string
                                      optional:
                                        type: boolean
                                    type: object
                                  secretKeyRef:
                                    description: Reference to a key in a secret.
                                    properties:
                                      key:
                                        type: string
                                      name:
                                        type: string
                                      optional:
                                        type: boolean
                                    type: object
                                type: object
                            type: object
                          type: array
                        securityContext:
                          description: Security context for the container.
                          properties:
                            allowPrivilegeEscalation:
                              type: boolean
                            appArmorProfile:
                              properties:
                                localhostProfile:
                                  type: string
                                type:
                                  type: string
                              type: object
                            capabilities:
                              properties:
                                add:
                                  items:
                                    type: string
                                  type: array
                                drop:
                                  items:
                                    type: string
                                  type: array
                              type: object
                            privileged:
                              type: boolean
                            procMount:
                              type: string
                            readOnlyRootFilesystem:
                              type: boolean
                            runAsGroup:
                              type: integer
                            runAsNonRoot:
                              type: boolean
                            runAsUser:
                              type: integer
                            seLinuxOptions:
                              properties:
                                level:
                                  type: string
                                role:
                                  type: string
                                type:
                                  type: string
                                user:
                                  type: string
                              type: object
                            seccompProfile:
                              properties:
                                localhostProfile:
                                  type: string
                                type:
                                  type: string
                              type: object
                            windowsOptions:
                              properties:
                                gmsaCredentialSpec:
                                  type: string
                                gmsaCredentialSpecName:
                                  type: string
                                hostProcess:
                                  type: boolean
                                runAsUserName:
                                  type: string
                              type: object
                          type: object
                        volumeMounts:
                          description: Additional volume mounts which should be applied to the container.
                          items:
                            properties:
                              mountPath:
                                type: string
                              mountPropagation:
                                type: string
                              name:
                                type: string
                              readOnly:
                                type: boolean
                              recursiveReadOnly:
                                type: string
                              subPath:
                                type: string
                              subPathExpr:
                                type: string
                            type: object
                          type: array
                      type: object
                    kafkaContainer:
                      description: Template for the Kafka broker container.
                      properties:
                        env:
                          description: Environment variables which should be applied to the container.
                          items:
                            oneOf:
                              - properties:
                                  value: {}
                                required:
                                  - value
                              - properties:
                                  valueFrom: {}
                                required:
                                  - valueFrom
                            properties:
                              name:
                                description: The environment variable key.
                                type: string
                              value:
                                description: The environment variable value.
                                type: string
                              valueFrom:
                                description: Reference to the secret or config map property to which the environment variable is set.
                                oneOf:
                                  - properties:
                                      secretKeyRef: {}
                                    required:
                                      - secretKeyRef
                                  - properties:
                                      configMapKeyRef: {}
                                    required:
                                      - configMapKeyRef
                                properties:
                                  configMapKeyRef:
                                    description: Reference to a key in a config map.
                                    properties:
                                      key:
                                        type: string
                                      name:
                                        type: string
                                      optional:
                                        type: boolean
                                    type: object
                                  secretKeyRef:
                                    description: Reference to a key in a secret.
                                    properties:
                                      key:
                                        type: string
                                      name:
                                        type: string
                                      optional:
                                        type: boolean
                                    type: object
                                type: object
                            type: object
                          type: array
                        securityContext:
                          description: Security context for the container.
                          properties:
                            allowPrivilegeEscalation:
                              type: boolean
                            appArmorProfile:
                              properties:
                                localhostProfile:
                                  type: string
                                type:
                                  type: string
                              type: object
                            capabilities:
                              properties:
                                add:
                                  items:
                                    type: string
                                  type: array
                                drop:
                                  items:
                                    type: string
                                  type: array
                              type: object
                            privileged:
                              type: boolean
                            procMount:
                              type: string
                            readOnlyRootFilesystem:
                              type: boolean
                            runAsGroup:
                              type: integer
                            runAsNonRoot:
                              type: boolean
                            runAsUser:
                              type: integer
                            seLinuxOptions:
                              properties:
                                level:
                                  type: string
                                role:
                                  type: string
                                type:
                                  type: string
                                user:
                                  type: string
                              type: object
                            seccompProfile:
                              properties:
                                localhostProfile:
                                  type: string
                                type:
                                  type: string
                              type: object
                            windowsOptions:
                              properties:
                                gmsaCredentialSpec:
                                  type: string
                                gmsaCredentialSpecName:
                                  type: string
                                hostProcess:
                                  type: boolean
                                runAsUserName:
                                  type: string
                              type: object
                          type: object
                        volumeMounts:
                          description: Additional volume mounts which should be applied to the container.
                          items:
                            properties:
                              mountPath:
                                type: string
                              mountPropagation:
                                type: string
                              name:
                                type: string
                              readOnly:
                                type: boolean
                              recursiveReadOnly:
                                type: string
                              subPath:
                                type: string
                              subPathExpr:
                                type: string
                            type: object
                          type: array
                      type: object
                    perPodIngress:
                      description: Template for Kafka per-pod `Ingress` used for access from outside of Kubernetes.
                      properties:
                        metadata:
                          description: Metadata applied to the resource.
                          properties:
                            annotations:
                              additionalProperties:
                                type: string
                              description: Annotations added to the Kubernetes resource.
                              type: object
                            labels:
                              additionalProperties:
                                type: string
                              description: Labels added to the Kubernetes resource.
                              type: object
                          type: object
                      type: object
                    perPodRoute:
                      description: Template for Kafka per-pod `Routes` used for access from outside of OpenShift.
                      properties:
                        metadata:
                          description: Metadata applied to the resource.
                          properties:
                            annotations:
                              additionalProperties:
                                type: string
                              description: Annotations added to the Kubernetes resource.
                              type: object
                            labels:
                              additionalProperties:
                                type: string
                              description: Labels added to the Kubernetes resource.
                              type: object
                          type: object
                      type: object
                    perPodService:
                      description: Template for Kafka per-pod `Services` used for access from outside of Kubernetes.
                      properties:
                        metadata:
                          description: Metadata applied to the resource.
                          properties:
                            annotations:
                              additionalProperties:
                                type: string
                              description: Annotations added to the Kubernetes resource.
                              type: object
                            labels:
                              additionalProperties:
                                type: string
                              description: Labels added to the Kubernetes resource.
                              type: object
                          type: object
                      type: object
                    persistentVolumeClaim:
                      description: Template for all Kafka `PersistentVolumeClaims`.
                      properties:
                        metadata:
                          description: Metadata applied to the resource.
                          properties:
                            annotations:
                              additionalProperties:
                                type: string
                              description: Annotations added to the Kubernetes resource.
                              type: object
                            labels:
                              additionalProperties:
                                type: string
                              description: Labels added to the Kubernetes resource.
                              type: object
                          type: object
                      type: object
                    pod:
                      description: Template for Kafka `Pods`.
                      properties:
                        affinity:
                          description: The pod's affinity rules.
                          properties:
                            nodeAffinity:
                              properties:
                                preferredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      preference:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchFields:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                        type: object
                                      weight:
                                        type: integer
                                    type: object
                                  type: array
                                requiredDuringSchedulingIgnoredDuringExecution:
                                  properties:
                                    nodeSelectorTerms:
                                      items:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchFields:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                        type: object
                                      type: array
                                  type: object
                              type: object
                            podAffinity:
                              properties:
                                preferredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      podAffinityTerm:
                                        properties:
                                          labelSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels:
                                                additionalProperties:
                                                  type: string
                                                type: object
                                            type: object
                                          matchLabelKeys:
                                            items:
                                              type: string
                                            type: array
                                          mismatchLabelKeys:
                                            items:
                                              type: string
                                            type: array
                                          namespaceSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels:
                                                additionalProperties:
                                                  type: string
                                                type: object
                                            type: object
                                          namespaces:
                                            items:
                                              type: string
                                            type: array
                                          topologyKey:
                                            type: string
                                        type: object
                                      weight:
                                        type: integer
                                    type: object
                                  type: array
                                requiredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      labelSelector:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchLabels:
                                            additionalProperties:
                                              type: string
                                            type: object
                                        type: object
                                      matchLabelKeys:
                                        items:
                                          type: string
                                        type: array
                                      mismatchLabelKeys:
                                        items:
                                          type: string
                                        type: array
                                      namespaceSelector:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchLabels:
                                            additionalProperties:
                                              type: string
                                            type: object
                                        type: object
                                      namespaces:
                                        items:
                                          type: string
                                        type: array
                                      topologyKey:
                                        type: string
                                    type: object
                                  type: array
                              type: object
                            podAntiAffinity:
                              properties:
                                preferredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      podAffinityTerm:
                                        properties:
                                          labelSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels:
                                                additionalProperties:
                                                  type: string
                                                type: object
                                            type: object
                                          matchLabelKeys:
                                            items:
                                              type: string
                                            type: array
                                          mismatchLabelKeys:
                                            items:
                                              type: string
                                            type: array
                                          namespaceSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels:
                                                additionalProperties:
                                                  type: string
                                                type: object
                                            type: object
                                          namespaces:
                                            items:
                                              type: string
                                            type: array
                                          topologyKey:
                                            type: string
                                        type: object
                                      weight:
                                        type: integer
                                    type: object
                                  type: array
                                requiredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      labelSelector:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchLabels:
                                            additionalProperties:
                                              type: string
                                            type: object
                                        type: object
                                      matchLabelKeys:
                                        items:
                                          type: string
                                        type: array
                                      mismatchLabelKeys:
                                        items:
                                          type: string
                                        type: array
                                      namespaceSelector:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchLabels:
                                            additionalProperties:
                                              type: string
                                            type: object
                                        type: object
                                      namespaces:
                                        items:
                                          type: string
                                        type: array
                                      topologyKey:
                                        type: string
                                    type: object
                                  type: array
                              type: object
                          type: object
                        enableServiceLinks:
                          description: Indicates whether information about services should be injected into Pod's environment variables.
                          type: boolean
                        hostAliases:
                          description: The pod's HostAliases. HostAliases is an optional list of hosts and IPs that will be injected into the Pod's hosts file if specified.
                          items:
                            properties:
                              hostnames:
                                items:
                                  type: string
                                type: array
                              ip:
                                type: string
                            type: object
                          type: array
                        imagePullSecrets:
                          description: List of references to secrets in the same namespace to use for pulling any of the images used by this Pod. When the `STRIMZI_IMAGE_PULL_SECRETS` environment variable in Cluster Operator and the `imagePullSecrets` option are specified, only the `imagePullSecrets` variable is used and the `STRIMZI_IMAGE_PULL_SECRETS` variable is ignored.
                          items:
                            properties:
                              name:
                                type: string
                            type: object
                          type: array
                        metadata:
                          description: Metadata applied to the resource.
                          properties:
                            annotations:
                              additionalProperties:
                                type: string
                              description: Annotations added to the Kubernetes resource.
                              type: object
                            labels:
                              additionalProperties:
                                type: string
                              description: Labels added to the Kubernetes resource.
                              type: object
                          type: object
                        priorityClassName:
                          description: 'The name of the priority class used to assign priority to the pods. '
                          type: string
                        schedulerName:
                          description: The name of the scheduler used to dispatch this `Pod`. If not specified, the default scheduler will be used.
                          type: string
                        securityContext:
                          description: Configures pod-level security attributes and common container settings.
                          properties:
                            appArmorProfile:
                              properties:
                                localhostProfile:
                                  type: string
                                type:
                                  type: string
                              type: object
                            fsGroup:
                              type: integer
                            fsGroupChangePolicy:
                              type: string
                            runAsGroup:
                              type: integer
                            runAsNonRoot:
                              type: boolean
                            runAsUser:
                              type: integer
                            seLinuxOptions:
                              properties:
                                level:
                                  type: string
                                role:
                                  type: string
                                type:
                                  type: string
                                user:
                                  type: string
                              type: object
                            seccompProfile:
                              properties:
                                localhostProfile:
                                  type: string
                                type:
                                  type: string
                              type: object
                            supplementalGroups:
                              items:
                                type: integer
                              type: array
                            sysctls:
                              items:
                                properties:
                                  name:
                                    type: string
                                  value:
                                    type: string
                                type: object
                              type: array
                            windowsOptions:
                              properties:
                                gmsaCredentialSpec:
                                  type: string
                                gmsaCredentialSpecName:
                                  type: string
                                hostProcess:
                                  type: boolean
                                runAsUserName:
                                  type: string
                              type: object
                          type: object
                        terminationGracePeriodSeconds:
                          description: The grace period is the duration in seconds after the processes running in the pod are sent a termination signal, and the time when the processes are forcibly halted with a kill signal. Set this value to longer than the expected cleanup time for your process. Value must be a non-negative integer. A zero value indicates delete immediately. You might need to increase the grace period for very large Kafka clusters, so that the Kafka brokers have enough time to transfer their work to another broker before they are terminated. Defaults to 30 seconds.
                          minimum: 0
                          type: integer
                        tmpDirSizeLimit:
                          description: Defines the total amount of pod memory allocated for the temporary `EmptyDir` volume `/tmp`. Specify the allocation in memory units, for example, `100Mi` for 100 mebibytes. Default value is `5Mi`. The `/tmp` volume is backed by pod memory, not disk storage, so avoid setting a high value as it consumes pod memory resources.
                          pattern: ^([0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$
                          type: string
                        tolerations:
                          description: The pod's tolerations.
                          items:
                            properties:
                              effect:
                                type: string
                              key:
                                type: string
                              operator:
                                type: string
                              tolerationSeconds:
                                type: integer
                              value:
                                type: string
                            type: object
                          type: array
                        topologySpreadConstraints:
                          description: The pod's topology spread constraints.
                          items:
                            properties:
                              labelSelector:
                                properties:
                                  matchExpressions:
                                    items:
                                      properties:
                                        key:
                                          type: string
                                        operator:
                                          type: string
                                        values:
                                          items:
                                            type: string
                                          type: array
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    type: object
                                type: object
                              matchLabelKeys:
                                items:
                                  type: string
                                type: array
                              maxSkew:
                                type: integer
                              minDomains:
                                type: integer
                              nodeAffinityPolicy:
                                type: string
                              nodeTaintsPolicy:
                                type: string
                              topologyKey:
                                type: string
                              whenUnsatisfiable:
                                type: string
                            type: object
                          type: array
                        volumes:
                          description: Additional volumes that can be mounted to the pod.
                          items:
                            oneOf:
                              - properties:
                                  configMap: {}
                                  csi: {}
                                  emptyDir: {}
                                  persistentVolumeClaim: {}
                                  secret: {}
                            properties:
                              configMap:
                                description: ConfigMap to use to populate the volume.
                                properties:
                                  defaultMode:
                                    type: integer
                                  items:
                                    items:
                                      properties:
                                        key:
                                          type: string
                                        mode:
                                          type: integer
                                        path:
                                          type: string
                                      type: object
                                    type: array
                                  name:
                                    type: string
                                  optional:
                                    type: boolean
                                type: object
                              csi:
                                description: CSIVolumeSource object to use to populate the volume.
                                properties:
                                  driver:
                                    type: string
                                  fsType:
                                    type: string
                                  nodePublishSecretRef:
                                    properties:
                                      name:
                                        type: string
                                    type: object
                                  readOnly:
                                    type: boolean
                                  volumeAttributes:
                                    additionalProperties:
                                      type: string
                                    type: object
                                type: object
                              emptyDir:
                                description: EmptyDir to use to populate the volume.
                                properties:
                                  medium:
                                    type: string
                                  sizeLimit:
                                    properties:
                                      amount:
                                        type: string
                                      format:
                                        type: string
                                    type: object
                                type: object
                              name:
                                description: Name to use for the volume. Required.
                                type: string
                              persistentVolumeClaim:
                                description: PersistentVolumeClaim object to use to populate the volume.
                                properties:
                                  claimName:
                                    type: string
                                  readOnly:
                                    type: boolean
                                type: object
                              secret:
                                description: Secret to use populate the volume.
                                properties:
                                  defaultMode:
                                    type: integer
                                  items:
                                    items:
                                      properties:
                                        key:
                                          type: string
                                        mode:
                                          type: integer
                                        path:
                                          type: string
                                      type: object
                                    type: array
                                  optional:
                                    type: boolean
                                  secretName:
                                    type: string
                                type: object
                            type: object
                          type: array
                      type: object
                    podSet:
                      description: Template for Kafka `StrimziPodSet` resource.
                      properties:
                        metadata:
                          description: Metadata applied to the resource.
                          properties:
                            annotations:
                              additionalProperties:
                                type: string
                              description: Annotations added to the Kubernetes resource.
                              type: object
                            labels:
                              additionalProperties:
                                type: string
                              description: Labels added to the Kubernetes resource.
                              type: object
                          type: object
                      type: object
                  type: object
              required:
                - replicas
                - storage
                - roles
              type: object
            status:
              description: The status of the KafkaNodePool.
              properties:
                clusterId:
                  description: Kafka cluster ID.
                  type: string
                conditions:
                  description: List of status conditions.
                  items:
                    properties:
                      lastTransitionTime:
                        description: Last time the condition of a type changed from one status to another. The required format is 'yyyy-MM-ddTHH:mm:ssZ', in the UTC time zone.
                        type: string
                      message:
                        description: Human-readable message indicating details about the condition's last transition.
                        type: string
                      reason:
                        description: The reason for the condition's last transition (a single word in CamelCase).
                        type: string
                      status:
                        description: The status of the condition, either True, False or Unknown.
                        type: string
                      type:
                        description: The unique identifier of a condition, used to distinguish between other conditions in the resource.
                        type: string
                    type: object
                  type: array
                labelSelector:
                  description: Label selector for pods providing this resource.
                  type: string
                nodeIds:
                  description: Node IDs used by Kafka nodes in this pool.
                  items:
                    type: integer
                  type: array
                observedGeneration:
                  description: The generation of the CRD that was last reconciled by the operator.
                  type: integer
                replicas:
                  description: The current number of pods being used to provide this resource.
                  type: integer
                roles:
                  description: The roles currently assigned to this pool.
                  items:
                    enum:
                      - controller
                      - broker
                    type: string
                  type: array
              type: object
          type: object
      served: true
      storage: true
      subresources:
        scale:
          labelSelectorPath: .status.labelSelector
          specReplicasPath: .spec.replicas
          statusReplicasPath: .status.replicas
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    app: strimzi
    strimzi.io/crd-install: "true"
  name: kafkamirrormakers.kafka.strimzi.io
spec:
  conversion:
    strategy: None
  group: kafka.strimzi.io
  names:
    categories:
      - strimzi
    kind: KafkaMirrorMaker
    listKind: KafkaMirrorMakerList
    plural: kafkamirrormakers
    shortNames:
      - kmm
    singular: kafkamirrormaker
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - description: The desired number of Kafka MirrorMaker replicas
          jsonPath: .spec.replicas
          name: Desired replicas
          type: integer
        - description: The boostrap servers for the consumer
          jsonPath: .spec.consumer.bootstrapServers
          name: Consumer Bootstrap Servers
          priority: 1
          type: string
        - description: The boostrap servers for the producer
          jsonPath: .spec.producer.bootstrapServers
          name: Producer Bootstrap Servers
          priority: 1
          type: string
        - description: The state of the custom resource
          jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
      name: v1beta2
      schema:
        openAPIV3Schema:
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: The specification of Kafka MirrorMaker.
              oneOf:
                - properties:
                    include: {}
                  required:
                    - include
                - properties:
                    whitelist: {}
                  required:
                    - whitelist
              properties:
                consumer:
                  description: Configuration of source cluster.
                  properties:
                    authentication:
                      description: Authentication configuration for connecting to the cluster.
                      properties:
                        accessToken:
                          description: Link to Kubernetes Secret containing the access token which was obtained from the authorization server.
                          properties:
                            key:
                              description: The key under which the secret value is stored in the Kubernetes Secret.
                              type: string
                            secretName:
                              description: The name of the Kubernetes Secret containing the secret value.
                              type: string
                          required:
                            - key
                            - secretName
                          type: object
                        accessTokenIsJwt:
                          description: Configure whether access token should be treated as JWT. This should be set to `false` if the authorization server returns opaque tokens. Defaults to `true`.
                          type: boolean
                        accessTokenLocation:
                          description: Path to the token file containing an access token to be used for authentication.
                          type: string
                        audience:
                          description: OAuth audience to use when authenticating against the authorization server. Some authorization servers require the audience to be explicitly set. The possible values depend on how the authorization server is configured. By default, `audience` is not specified when performing the token endpoint request.
                          type: string
                        certificateAndKey:
                          description: Reference to the `Secret` which holds the certificate and private key pair.
                          properties:
                            certificate:
                              description: The name of the file certificate in the Secret.
                              type: string
                            key:
                              description: The name of the private key in the Secret.
                              type: string
                            secretName:
                              description: The name of the Secret containing the certificate.
                              type: string
                          required:
                            - secretName
                            - certificate
                            - key
                          type: object
                        clientAssertion:
                          description: Link to Kubernetes secret containing the client assertion which was manually configured for the client.
                          properties:
                            key:
                              description: The key under which the secret value is stored in the Kubernetes Secret.
                              type: string
                            secretName:
                              description: The name of the Kubernetes Secret containing the secret value.
                              type: string
                          required:
                            - key
                            - secretName
                          type: object
                        clientAssertionLocation:
                          description: Path to the file containing the client assertion to be used for authentication.
                          type: string
                        clientAssertionType:
                          description: The client assertion type. If not set, and either `clientAssertion` or `clientAssertionLocation` is configured, this value defaults to `urn:ietf:params:oauth:client-assertion-type:jwt-bearer`.
                          type: string
                        clientId:
                          description: OAuth Client ID which the Kafka client can use to authenticate against the OAuth server and use the token endpoint URI.
                          type: string
                        clientSecret:
                          description: Link to Kubernetes Secret containing the OAuth client secret which the Kafka client can use to authenticate against the OAuth server and use the token endpoint URI.
                          properties:
                            key:
                              description: The key under which the secret value is stored in the Kubernetes Secret.
                              type: string
                            secretName:
                              description: The name of the Kubernetes Secret containing the secret value.
                              type: string
                          required:
                            - key
                            - secretName
                          type: object
                        connectTimeoutSeconds:
                          description: The connect timeout in seconds when connecting to authorization server. If not set, the effective connect timeout is 60 seconds.
                          type: integer
                        disableTlsHostnameVerification:
                          description: Enable or disable TLS hostname verification. Default value is `false`.
                          type: boolean
                        enableMetrics:
                          description: Enable or disable OAuth metrics. Default value is `false`.
                          type: boolean
                        httpRetries:
                          description: The maximum number of retries to attempt if an initial HTTP request fails. If not set, the default is to not attempt any retries.
                          type: integer
                        httpRetryPauseMs:
                          description: The pause to take before retrying a failed HTTP request. If not set, the default is to not pause at all but to immediately repeat a request.
                          type: integer
                        includeAcceptHeader:
                          description: Whether the Accept header should be set in requests to the authorization servers. The default value is `true`.
                          type: boolean
                        maxTokenExpirySeconds:
                          description: Set or limit time-to-live of the access tokens to the specified number of seconds. This should be set if the authorization server returns opaque tokens.
                          type: integer
                        passwordSecret:
                          description: Reference to the `Secret` which holds the password.
                          properties:
                            password:
                              description: The name of the key in the Secret under which the password is stored.
                              type: string
                            secretName:
                              description: The name of the Secret containing the password.
                              type: string
                          required:
                            - secretName
                            - password
                          type: object
                        readTimeoutSeconds:
                          description: The read timeout in seconds when connecting to authorization server. If not set, the effective read timeout is 60 seconds.
                          type: integer
                        refreshToken:
                          description: Link to Kubernetes Secret containing the refresh token which can be used to obtain access token from the authorization server.
                          properties:
                            key:
                              description: The key under which the secret value is stored in the Kubernetes Secret.
                              type: string
                            secretName:
                              description: The name of the Kubernetes Secret containing the secret value.
                              type: string
                          required:
                            - key
                            - secretName
                          type: object
                        saslExtensions:
                          additionalProperties:
                            type: string
                          description: SASL extensions parameters.
                          type: object
                        scope:
                          description: OAuth scope to use when authenticating against the authorization server. Some authorization servers require this to be set. The possible values depend on how authorization server is configured. By default `scope` is not specified when doing the token endpoint request.
                          type: string
                        tlsTrustedCertificates:
                          description: Trusted certificates for TLS connection to the OAuth server.
                          items:
                            oneOf:
                              - properties:
                                  certificate: {}
                                required:
                                  - certificate
                              - properties:
                                  pattern: {}
                                required:
                                  - pattern
                            properties:
                              certificate:
                                description: The name of the file certificate in the secret.
                                type: string
                              pattern:
                                description: Pattern for the certificate files in the secret. Use the link:https://en.wikipedia.org/wiki/Glob_(programming)[_glob syntax_] for the pattern. All files in the secret that match the pattern are used.
                                type: string
                              secretName:
                                description: The name of the Secret containing the certificate.
                                type: string
                            required:
                              - secretName
                            type: object
                          type: array
                        tokenEndpointUri:
                          description: Authorization server token endpoint URI.
                          type: string
                        type:
                          description: Authentication type. Currently the supported types are `tls`, `scram-sha-256`, `scram-sha-512`, `plain`, and 'oauth'. `scram-sha-256` and `scram-sha-512` types use SASL SCRAM-SHA-256 and SASL SCRAM-SHA-512 Authentication, respectively. `plain` type uses SASL PLAIN Authentication. `oauth` type uses SASL OAUTHBEARER Authentication. The `tls` type uses TLS Client Authentication. The `tls` type is supported only over TLS connections.
                          enum:
                            - tls
                            - scram-sha-256
                            - scram-sha-512
                            - plain
                            - oauth
                          type: string
                        username:
                          description: Username used for the authentication.
                          type: string
                      required:
                        - type
                      type: object
                    bootstrapServers:
                      description: A list of host:port pairs for establishing the initial connection to the Kafka cluster.
                      type: string
                    config:
                      description: 'The MirrorMaker consumer config. Properties with the following prefixes cannot be set: ssl., bootstrap.servers, group.id, sasl., security., interceptor.classes (with the exception of: ssl.endpoint.identification.algorithm, ssl.cipher.suites, ssl.protocol, ssl.enabled.protocols).'
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    groupId:
                      description: A unique string that identifies the consumer group this consumer belongs to.
                      type: string
                    numStreams:
                      description: Specifies the number of consumer stream threads to create.
                      minimum: 1
                      type: integer
                    offsetCommitInterval:
                      description: Specifies the offset auto-commit interval in ms. Default value is 60000.
                      type: integer
                    tls:
                      description: TLS configuration for connecting MirrorMaker to the cluster.
                      properties:
                        trustedCertificates:
                          description: Trusted certificates for TLS connection.
                          items:
                            oneOf:
                              - properties:
                                  certificate: {}
                                required:
                                  - certificate
                              - properties:
                                  pattern: {}
                                required:
                                  - pattern
                            properties:
                              certificate:
                                description: The name of the file certificate in the secret.
                                type: string
                              pattern:
                                description: Pattern for the certificate files in the secret. Use the link:https://en.wikipedia.org/wiki/Glob_(programming)[_glob syntax_] for the pattern. All files in the secret that match the pattern are used.
                                type: string
                              secretName:
                                description: The name of the Secret containing the certificate.
                                type: string
                            required:
                              - secretName
                            type: object
                          type: array
                      type: object
                  required:
                    - bootstrapServers
                    - groupId
                  type: object
                image:
                  description: The container image used for Kafka MirrorMaker pods. If no image name is explicitly specified, it is determined based on the `spec.version` configuration. The image names are specifically mapped to corresponding versions in the Cluster Operator configuration.
                  type: string
                include:
                  description: List of topics which are included for mirroring. This option allows any regular expression using Java-style regular expressions. Mirroring two topics named A and B is achieved by using the expression `A\|B`. Or, as a special case, you can mirror all topics using the regular expression `*`. You can also specify multiple regular expressions separated by commas.
                  type: string
                jvmOptions:
                  description: JVM Options for pods.
                  properties:
                    -XX:
                      additionalProperties:
                        type: string
                      description: A map of -XX options to the JVM.
                      type: object
                    -Xms:
                      description: -Xms option to to the JVM.
                      pattern: ^[0-9]+[mMgG]?$
                      type: string
                    -Xmx:
                      description: -Xmx option to to the JVM.
                      pattern: ^[0-9]+[mMgG]?$
                      type: string
                    gcLoggingEnabled:
                      description: Specifies whether the Garbage Collection logging is enabled. The default is false.
                      type: boolean
                    javaSystemProperties:
                      description: A map of additional system properties which will be passed using the `-D` option to the JVM.
                      items:
                        properties:
                          name:
                            description: The system property name.
                            type: string
                          value:
                            description: The system property value.
                            type: string
                        type: object
                      type: array
                  type: object
                livenessProbe:
                  description: Pod liveness checking.
                  properties:
                    failureThreshold:
                      description: Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
                      minimum: 1
                      type: integer
                    initialDelaySeconds:
                      description: The initial delay before first the health is first checked. Default to 15 seconds. Minimum value is 0.
                      minimum: 0
                      type: integer
                    periodSeconds:
                      description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
                      minimum: 1
                      type: integer
                    successThreshold:
                      description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
                      minimum: 1
                      type: integer
                    timeoutSeconds:
                      description: The timeout for each attempted health check. Default to 5 seconds. Minimum value is 1.
                      minimum: 1
                      type: integer
                  type: object
                logging:
                  description: Logging configuration for MirrorMaker.
                  properties:
                    loggers:
                      additionalProperties:
                        type: string
                      description: A Map from logger name to logger level.
                      type: object
                    type:
                      description: Logging type, must be either 'inline' or 'external'.
                      enum:
                        - inline
                        - external
                      type: string
                    valueFrom:
                      description: '`ConfigMap` entry where the logging configuration is stored. '
                      properties:
                        configMapKeyRef:
                          description: Reference to the key in the ConfigMap containing the configuration.
                          properties:
                            key:
                              type: string
                            name:
                              type: string
                            optional:
                              type: boolean
                          type: object
                      type: object
                  required:
                    - type
                  type: object
                metricsConfig:
                  description: Metrics configuration.
                  properties:
                    type:
                      description: Metrics type. Only 'jmxPrometheusExporter' supported currently.
                      enum:
                        - jmxPrometheusExporter
                      type: string
                    valueFrom:
                      description: 'ConfigMap entry where the Prometheus JMX Exporter configuration is stored. '
                      properties:
                        configMapKeyRef:
                          description: Reference to the key in the ConfigMap containing the configuration.
                          properties:
                            key:
                              type: string
                            name:
                              type: string
                            optional:
                              type: boolean
                          type: object
                      type: object
                  required:
                    - type
                    - valueFrom
                  type: object
                producer:
                  description: Configuration of target cluster.
                  properties:
                    abortOnSendFailure:
                      description: Flag to set the MirrorMaker to exit on a failed send. Default value is `true`.
                      type: boolean
                    authentication:
                      description: Authentication configuration for connecting to the cluster.
                      properties:
                        accessToken:
                          description: Link to Kubernetes Secret containing the access token which was obtained from the authorization server.
                          properties:
                            key:
                              description: The key under which the secret value is stored in the Kubernetes Secret.
                              type: string
                            secretName:
                              description: The name of the Kubernetes Secret containing the secret value.
                              type: string
                          required:
                            - key
                            - secretName
                          type: object
                        accessTokenIsJwt:
                          description: Configure whether access token should be treated as JWT. This should be set to `false` if the authorization server returns opaque tokens. Defaults to `true`.
                          type: boolean
                        accessTokenLocation:
                          description: Path to the token file containing an access token to be used for authentication.
                          type: string
                        audience:
                          description: OAuth audience to use when authenticating against the authorization server. Some authorization servers require the audience to be explicitly set. The possible values depend on how the authorization server is configured. By default, `audience` is not specified when performing the token endpoint request.
                          type: string
                        certificateAndKey:
                          description: Reference to the `Secret` which holds the certificate and private key pair.
                          properties:
                            certificate:
                              description: The name of the file certificate in the Secret.
                              type: string
                            key:
                              description: The name of the private key in the Secret.
                              type: string
                            secretName:
                              description: The name of the Secret containing the certificate.
                              type: string
                          required:
                            - secretName
                            - certificate
                            - key
                          type: object
                        clientAssertion:
                          description: Link to Kubernetes secret containing the client assertion which was manually configured for the client.
                          properties:
                            key:
                              description: The key under which the secret value is stored in the Kubernetes Secret.
                              type: string
                            secretName:
                              description: The name of the Kubernetes Secret containing the secret value.
                              type: string
                          required:
                            - key
                            - secretName
                          type: object
                        clientAssertionLocation:
                          description: Path to the file containing the client assertion to be used for authentication.
                          type: string
                        clientAssertionType:
                          description: The client assertion type. If not set, and either `clientAssertion` or `clientAssertionLocation` is configured, this value defaults to `urn:ietf:params:oauth:client-assertion-type:jwt-bearer`.
                          type: string
                        clientId:
                          description: OAuth Client ID which the Kafka client can use to authenticate against the OAuth server and use the token endpoint URI.
                          type: string
                        clientSecret:
                          description: Link to Kubernetes Secret containing the OAuth client secret which the Kafka client can use to authenticate against the OAuth server and use the token endpoint URI.
                          properties:
                            key:
                              description: The key under which the secret value is stored in the Kubernetes Secret.
                              type: string
                            secretName:
                              description: The name of the Kubernetes Secret containing the secret value.
                              type: string
                          required:
                            - key
                            - secretName
                          type: object
                        connectTimeoutSeconds:
                          description: The connect timeout in seconds when connecting to authorization server. If not set, the effective connect timeout is 60 seconds.
                          type: integer
                        disableTlsHostnameVerification:
                          description: Enable or disable TLS hostname verification. Default value is `false`.
                          type: boolean
                        enableMetrics:
                          description: Enable or disable OAuth metrics. Default value is `false`.
                          type: boolean
                        httpRetries:
                          description: The maximum number of retries to attempt if an initial HTTP request fails. If not set, the default is to not attempt any retries.
                          type: integer
                        httpRetryPauseMs:
                          description: The pause to take before retrying a failed HTTP request. If not set, the default is to not pause at all but to immediately repeat a request.
                          type: integer
                        includeAcceptHeader:
                          description: Whether the Accept header should be set in requests to the authorization servers. The default value is `true`.
                          type: boolean
                        maxTokenExpirySeconds:
                          description: Set or limit time-to-live of the access tokens to the specified number of seconds. This should be set if the authorization server returns opaque tokens.
                          type: integer
                        passwordSecret:
                          description: Reference to the `Secret` which holds the password.
                          properties:
                            password:
                              description: The name of the key in the Secret under which the password is stored.
                              type: string
                            secretName:
                              description: The name of the Secret containing the password.
                              type: string
                          required:
                            - secretName
                            - password
                          type: object
                        readTimeoutSeconds:
                          description: The read timeout in seconds when connecting to authorization server. If not set, the effective read timeout is 60 seconds.
                          type: integer
                        refreshToken:
                          description: Link to Kubernetes Secret containing the refresh token which can be used to obtain access token from the authorization server.
                          properties:
                            key:
                              description: The key under which the secret value is stored in the Kubernetes Secret.
                              type: string
                            secretName:
                              description: The name of the Kubernetes Secret containing the secret value.
                              type: string
                          required:
                            - key
                            - secretName
                          type: object
                        saslExtensions:
                          additionalProperties:
                            type: string
                          description: SASL extensions parameters.
                          type: object
                        scope:
                          description: OAuth scope to use when authenticating against the authorization server. Some authorization servers require this to be set. The possible values depend on how authorization server is configured. By default `scope` is not specified when doing the token endpoint request.
                          type: string
                        tlsTrustedCertificates:
                          description: Trusted certificates for TLS connection to the OAuth server.
                          items:
                            oneOf:
                              - properties:
                                  certificate: {}
                                required:
                                  - certificate
                              - properties:
                                  pattern: {}
                                required:
                                  - pattern
                            properties:
                              certificate:
                                description: The name of the file certificate in the secret.
                                type: string
                              pattern:
                                description: Pattern for the certificate files in the secret. Use the link:https://en.wikipedia.org/wiki/Glob_(programming)[_glob syntax_] for the pattern. All files in the secret that match the pattern are used.
                                type: string
                              secretName:
                                description: The name of the Secret containing the certificate.
                                type: string
                            required:
                              - secretName
                            type: object
                          type: array
                        tokenEndpointUri:
                          description: Authorization server token endpoint URI.
                          type: string
                        type:
                          description: Authentication type. Currently the supported types are `tls`, `scram-sha-256`, `scram-sha-512`, `plain`, and 'oauth'. `scram-sha-256` and `scram-sha-512` types use SASL SCRAM-SHA-256 and SASL SCRAM-SHA-512 Authentication, respectively. `plain` type uses SASL PLAIN Authentication. `oauth` type uses SASL OAUTHBEARER Authentication. The `tls` type uses TLS Client Authentication. The `tls` type is supported only over TLS connections.
                          enum:
                            - tls
                            - scram-sha-256
                            - scram-sha-512
                            - plain
                            - oauth
                          type: string
                        username:
                          description: Username used for the authentication.
                          type: string
                      required:
                        - type
                      type: object
                    bootstrapServers:
                      description: A list of host:port pairs for establishing the initial connection to the Kafka cluster.
                      type: string
                    config:
                      description: 'The MirrorMaker producer config. Properties with the following prefixes cannot be set: ssl., bootstrap.servers, sasl., security., interceptor.classes (with the exception of: ssl.endpoint.identification.algorithm, ssl.cipher.suites, ssl.protocol, ssl.enabled.protocols).'
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    tls:
                      description: TLS configuration for connecting MirrorMaker to the cluster.
                      properties:
                        trustedCertificates:
                          description: Trusted certificates for TLS connection.
                          items:
                            oneOf:
                              - properties:
                                  certificate: {}
                                required:
                                  - certificate
                              - properties:
                                  pattern: {}
                                required:
                                  - pattern
                            properties:
                              certificate:
                                description: The name of the file certificate in the secret.
                                type: string
                              pattern:
                                description: Pattern for the certificate files in the secret. Use the link:https://en.wikipedia.org/wiki/Glob_(programming)[_glob syntax_] for the pattern. All files in the secret that match the pattern are used.
                                type: string
                              secretName:
                                description: The name of the Secret containing the certificate.
                                type: string
                            required:
                              - secretName
                            type: object
                          type: array
                      type: object
                  required:
                    - bootstrapServers
                  type: object
                readinessProbe:
                  description: Pod readiness checking.
                  properties:
                    failureThreshold:
                      description: Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
                      minimum: 1
                      type: integer
                    initialDelaySeconds:
                      description: The initial delay before first the health is first checked. Default to 15 seconds. Minimum value is 0.
                      minimum: 0
                      type: integer
                    periodSeconds:
                      description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
                      minimum: 1
                      type: integer
                    successThreshold:
                      description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
                      minimum: 1
                      type: integer
                    timeoutSeconds:
                      description: The timeout for each attempted health check. Default to 5 seconds. Minimum value is 1.
                      minimum: 1
                      type: integer
                  type: object
                replicas:
                  description: The number of pods in the `Deployment`.
                  minimum: 0
                  type: integer
                resources:
                  description: CPU and memory resources to reserve.
                  properties:
                    claims:
                      items:
                        properties:
                          name:
                            type: string
                        type: object
                      type: array
                    limits:
                      additionalProperties:
                        anyOf:
                          - type: integer
                          - type: string
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                      type: object
                    requests:
                      additionalProperties:
                        anyOf:
                          - type: integer
                          - type: string
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                      type: object
                  type: object
                template:
                  description: Template to specify how Kafka MirrorMaker resources, `Deployments` and `Pods`, are generated.
                  properties:
                    deployment:
                      description: Template for Kafka MirrorMaker `Deployment`.
                      properties:
                        deploymentStrategy:
                          description: Pod replacement strategy for deployment configuration changes. Valid values are `RollingUpdate` and `Recreate`. Defaults to `RollingUpdate`.
                          enum:
                            - RollingUpdate
                            - Recreate
                          type: string
                        metadata:
                          description: Metadata applied to the resource.
                          properties:
                            annotations:
                              additionalProperties:
                                type: string
                              description: Annotations added to the Kubernetes resource.
                              type: object
                            labels:
                              additionalProperties:
                                type: string
                              description: Labels added to the Kubernetes resource.
                              type: object
                          type: object
                      type: object
                    mirrorMakerContainer:
                      description: Template for Kafka MirrorMaker container.
                      properties:
                        env:
                          description: Environment variables which should be applied to the container.
                          items:
                            oneOf:
                              - properties:
                                  value: {}
                                required:
                                  - value
                              - properties:
                                  valueFrom: {}
                                required:
                                  - valueFrom
                            properties:
                              name:
                                description: The environment variable key.
                                type: string
                              value:
                                description: The environment variable value.
                                type: string
                              valueFrom:
                                description: Reference to the secret or config map property to which the environment variable is set.
                                oneOf:
                                  - properties:
                                      secretKeyRef: {}
                                    required:
                                      - secretKeyRef
                                  - properties:
                                      configMapKeyRef: {}
                                    required:
                                      - configMapKeyRef
                                properties:
                                  configMapKeyRef:
                                    description: Reference to a key in a config map.
                                    properties:
                                      key:
                                        type: string
                                      name:
                                        type: string
                                      optional:
                                        type: boolean
                                    type: object
                                  secretKeyRef:
                                    description: Reference to a key in a secret.
                                    properties:
                                      key:
                                        type: string
                                      name:
                                        type: string
                                      optional:
                                        type: boolean
                                    type: object
                                type: object
                            type: object
                          type: array
                        securityContext:
                          description: Security context for the container.
                          properties:
                            allowPrivilegeEscalation:
                              type: boolean
                            appArmorProfile:
                              properties:
                                localhostProfile:
                                  type: string
                                type:
                                  type: string
                              type: object
                            capabilities:
                              properties:
                                add:
                                  items:
                                    type: string
                                  type: array
                                drop:
                                  items:
                                    type: string
                                  type: array
                              type: object
                            privileged:
                              type: boolean
                            procMount:
                              type: string
                            readOnlyRootFilesystem:
                              type: boolean
                            runAsGroup:
                              type: integer
                            runAsNonRoot:
                              type: boolean
                            runAsUser:
                              type: integer
                            seLinuxOptions:
                              properties:
                                level:
                                  type: string
                                role:
                                  type: string
                                type:
                                  type: string
                                user:
                                  type: string
                              type: object
                            seccompProfile:
                              properties:
                                localhostProfile:
                                  type: string
                                type:
                                  type: string
                              type: object
                            windowsOptions:
                              properties:
                                gmsaCredentialSpec:
                                  type: string
                                gmsaCredentialSpecName:
                                  type: string
                                hostProcess:
                                  type: boolean
                                runAsUserName:
                                  type: string
                              type: object
                          type: object
                        volumeMounts:
                          description: Additional volume mounts which should be applied to the container.
                          items:
                            properties:
                              mountPath:
                                type: string
                              mountPropagation:
                                type: string
                              name:
                                type: string
                              readOnly:
                                type: boolean
                              recursiveReadOnly:
                                type: string
                              subPath:
                                type: string
                              subPathExpr:
                                type: string
                            type: object
                          type: array
                      type: object
                    pod:
                      description: Template for Kafka MirrorMaker `Pods`.
                      properties:
                        affinity:
                          description: The pod's affinity rules.
                          properties:
                            nodeAffinity:
                              properties:
                                preferredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      preference:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchFields:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                        type: object
                                      weight:
                                        type: integer
                                    type: object
                                  type: array
                                requiredDuringSchedulingIgnoredDuringExecution:
                                  properties:
                                    nodeSelectorTerms:
                                      items:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchFields:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                        type: object
                                      type: array
                                  type: object
                              type: object
                            podAffinity:
                              properties:
                                preferredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      podAffinityTerm:
                                        properties:
                                          labelSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels:
                                                additionalProperties:
                                                  type: string
                                                type: object
                                            type: object
                                          matchLabelKeys:
                                            items:
                                              type: string
                                            type: array
                                          mismatchLabelKeys:
                                            items:
                                              type: string
                                            type: array
                                          namespaceSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels:
                                                additionalProperties:
                                                  type: string
                                                type: object
                                            type: object
                                          namespaces:
                                            items:
                                              type: string
                                            type: array
                                          topologyKey:
                                            type: string
                                        type: object
                                      weight:
                                        type: integer
                                    type: object
                                  type: array
                                requiredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      labelSelector:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchLabels:
                                            additionalProperties:
                                              type: string
                                            type: object
                                        type: object
                                      matchLabelKeys:
                                        items:
                                          type: string
                                        type: array
                                      mismatchLabelKeys:
                                        items:
                                          type: string
                                        type: array
                                      namespaceSelector:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchLabels:
                                            additionalProperties:
                                              type: string
                                            type: object
                                        type: object
                                      namespaces:
                                        items:
                                          type: string
                                        type: array
                                      topologyKey:
                                        type: string
                                    type: object
                                  type: array
                              type: object
                            podAntiAffinity:
                              properties:
                                preferredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      podAffinityTerm:
                                        properties:
                                          labelSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels:
                                                additionalProperties:
                                                  type: string
                                                type: object
                                            type: object
                                          matchLabelKeys:
                                            items:
                                              type: string
                                            type: array
                                          mismatchLabelKeys:
                                            items:
                                              type: string
                                            type: array
                                          namespaceSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels:
                                                additionalProperties:
                                                  type: string
                                                type: object
                                            type: object
                                          namespaces:
                                            items:
                                              type: string
                                            type: array
                                          topologyKey:
                                            type: string
                                        type: object
                                      weight:
                                        type: integer
                                    type: object
                                  type: array
                                requiredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      labelSelector:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchLabels:
                                            additionalProperties:
                                              type: string
                                            type: object
                                        type: object
                                      matchLabelKeys:
                                        items:
                                          type: string
                                        type: array
                                      mismatchLabelKeys:
                                        items:
                                          type: string
                                        type: array
                                      namespaceSelector:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchLabels:
                                            additionalProperties:
                                              type: string
                                            type: object
                                        type: object
                                      namespaces:
                                        items:
                                          type: string
                                        type: array
                                      topologyKey:
                                        type: string
                                    type: object
                                  type: array
                              type: object
                          type: object
                        enableServiceLinks:
                          description: Indicates whether information about services should be injected into Pod's environment variables.
                          type: boolean
                        hostAliases:
                          description: The pod's HostAliases. HostAliases is an optional list of hosts and IPs that will be injected into the Pod's hosts file if specified.
                          items:
                            properties:
                              hostnames:
                                items:
                                  type: string
                                type: array
                              ip:
                                type: string
                            type: object
                          type: array
                        imagePullSecrets:
                          description: List of references to secrets in the same namespace to use for pulling any of the images used by this Pod. When the `STRIMZI_IMAGE_PULL_SECRETS` environment variable in Cluster Operator and the `imagePullSecrets` option are specified, only the `imagePullSecrets` variable is used and the `STRIMZI_IMAGE_PULL_SECRETS` variable is ignored.
                          items:
                            properties:
                              name:
                                type: string
                            type: object
                          type: array
                        metadata:
                          description: Metadata applied to the resource.
                          properties:
                            annotations:
                              additionalProperties:
                                type: string
                              description: Annotations added to the Kubernetes resource.
                              type: object
                            labels:
                              additionalProperties:
                                type: string
                              description: Labels added to the Kubernetes resource.
                              type: object
                          type: object
                        priorityClassName:
                          description: 'The name of the priority class used to assign priority to the pods. '
                          type: string
                        schedulerName:
                          description: The name of the scheduler used to dispatch this `Pod`. If not specified, the default scheduler will be used.
                          type: string
                        securityContext:
                          description: Configures pod-level security attributes and common container settings.
                          properties:
                            appArmorProfile:
                              properties:
                                localhostProfile:
                                  type: string
                                type:
                                  type: string
                              type: object
                            fsGroup:
                              type: integer
                            fsGroupChangePolicy:
                              type: string
                            runAsGroup:
                              type: integer
                            runAsNonRoot:
                              type: boolean
                            runAsUser:
                              type: integer
                            seLinuxOptions:
                              properties:
                                level:
                                  type: string
                                role:
                                  type: string
                                type:
                                  type: string
                                user:
                                  type: string
                              type: object
                            seccompProfile:
                              properties:
                                localhostProfile:
                                  type: string
                                type:
                                  type: string
                              type: object
                            supplementalGroups:
                              items:
                                type: integer
                              type: array
                            sysctls:
                              items:
                                properties:
                                  name:
                                    type: string
                                  value:
                                    type: string
                                type: object
                              type: array
                            windowsOptions:
                              properties:
                                gmsaCredentialSpec:
                                  type: string
                                gmsaCredentialSpecName:
                                  type: string
                                hostProcess:
                                  type: boolean
                                runAsUserName:
                                  type: string
                              type: object
                          type: object
                        terminationGracePeriodSeconds:
                          description: The grace period is the duration in seconds after the processes running in the pod are sent a termination signal, and the time when the processes are forcibly halted with a kill signal. Set this value to longer than the expected cleanup time for your process. Value must be a non-negative integer. A zero value indicates delete immediately. You might need to increase the grace period for very large Kafka clusters, so that the Kafka brokers have enough time to transfer their work to another broker before they are terminated. Defaults to 30 seconds.
                          minimum: 0
                          type: integer
                        tmpDirSizeLimit:
                          description: Defines the total amount of pod memory allocated for the temporary `EmptyDir` volume `/tmp`. Specify the allocation in memory units, for example, `100Mi` for 100 mebibytes. Default value is `5Mi`. The `/tmp` volume is backed by pod memory, not disk storage, so avoid setting a high value as it consumes pod memory resources.
                          pattern: ^([0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$
                          type: string
                        tolerations:
                          description: The pod's tolerations.
                          items:
                            properties:
                              effect:
                                type: string
                              key:
                                type: string
                              operator:
                                type: string
                              tolerationSeconds:
                                type: integer
                              value:
                                type: string
                            type: object
                          type: array
                        topologySpreadConstraints:
                          description: The pod's topology spread constraints.
                          items:
                            properties:
                              labelSelector:
                                properties:
                                  matchExpressions:
                                    items:
                                      properties:
                                        key:
                                          type: string
                                        operator:
                                          type: string
                                        values:
                                          items:
                                            type: string
                                          type: array
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    type: object
                                type: object
                              matchLabelKeys:
                                items:
                                  type: string
                                type: array
                              maxSkew:
                                type: integer
                              minDomains:
                                type: integer
                              nodeAffinityPolicy:
                                type: string
                              nodeTaintsPolicy:
                                type: string
                              topologyKey:
                                type: string
                              whenUnsatisfiable:
                                type: string
                            type: object
                          type: array
                        volumes:
                          description: Additional volumes that can be mounted to the pod.
                          items:
                            oneOf:
                              - properties:
                                  configMap: {}
                                  csi: {}
                                  emptyDir: {}
                                  persistentVolumeClaim: {}
                                  secret: {}
                            properties:
                              configMap:
                                description: ConfigMap to use to populate the volume.
                                properties:
                                  defaultMode:
                                    type: integer
                                  items:
                                    items:
                                      properties:
                                        key:
                                          type: string
                                        mode:
                                          type: integer
                                        path:
                                          type: string
                                      type: object
                                    type: array
                                  name:
                                    type: string
                                  optional:
                                    type: boolean
                                type: object
                              csi:
                                description: CSIVolumeSource object to use to populate the volume.
                                properties:
                                  driver:
                                    type: string
                                  fsType:
                                    type: string
                                  nodePublishSecretRef:
                                    properties:
                                      name:
                                        type: string
                                    type: object
                                  readOnly:
                                    type: boolean
                                  volumeAttributes:
                                    additionalProperties:
                                      type: string
                                    type: object
                                type: object
                              emptyDir:
                                description: EmptyDir to use to populate the volume.
                                properties:
                                  medium:
                                    type: string
                                  sizeLimit:
                                    properties:
                                      amount:
                                        type: string
                                      format:
                                        type: string
                                    type: object
                                type: object
                              name:
                                description: Name to use for the volume. Required.
                                type: string
                              persistentVolumeClaim:
                                description: PersistentVolumeClaim object to use to populate the volume.
                                properties:
                                  claimName:
                                    type: string
                                  readOnly:
                                    type: boolean
                                type: object
                              secret:
                                description: Secret to use populate the volume.
                                properties:
                                  defaultMode:
                                    type: integer
                                  items:
                                    items:
                                      properties:
                                        key:
                                          type: string
                                        mode:
                                          type: integer
                                        path:
                                          type: string
                                      type: object
                                    type: array
                                  optional:
                                    type: boolean
                                  secretName:
                                    type: string
                                type: object
                            type: object
                          type: array
                      type: object
                    podDisruptionBudget:
                      description: Template for Kafka MirrorMaker `PodDisruptionBudget`.
                      properties:
                        maxUnavailable:
                          description: Maximum number of unavailable pods to allow automatic Pod eviction. A Pod eviction is allowed when the `maxUnavailable` number of pods or fewer are unavailable after the eviction. Setting this value to 0 prevents all voluntary evictions, so the pods must be evicted manually. Defaults to 1.
                          minimum: 0
                          type: integer
                        metadata:
                          description: Metadata to apply to the `PodDisruptionBudgetTemplate` resource.
                          properties:
                            annotations:
                              additionalProperties:
                                type: string
                              description: Annotations added to the Kubernetes resource.
                              type: object
                            labels:
                              additionalProperties:
                                type: string
                              description: Labels added to the Kubernetes resource.
                              type: object
                          type: object
                      type: object
                    serviceAccount:
                      description: Template for the Kafka MirrorMaker service account.
                      properties:
                        metadata:
                          description: Metadata applied to the resource.
                          properties:
                            annotations:
                              additionalProperties:
                                type: string
                              description: Annotations added to the Kubernetes resource.
                              type: object
                            labels:
                              additionalProperties:
                                type: string
                              description: Labels added to the Kubernetes resource.
                              type: object
                          type: object
                      type: object
                  type: object
                tracing:
                  description: The configuration of tracing in Kafka MirrorMaker.
                  properties:
                    type:
                      description: Type of the tracing used. Currently the only supported type is `opentelemetry` for OpenTelemetry tracing. As of Strimzi 0.37.0, `jaeger` type is not supported anymore and this option is ignored.
                      enum:
                        - jaeger
                        - opentelemetry
                      type: string
                  required:
                    - type
                  type: object
                version:
                  description: The Kafka MirrorMaker version. Defaults to the latest version. Consult the documentation to understand the process required to upgrade or downgrade the version.
                  type: string
                whitelist:
                  description: List of topics which are included for mirroring. This option allows any regular expression using Java-style regular expressions. Mirroring two topics named A and B is achieved by using the expression `A\|B`. Or, as a special case, you can mirror all topics using the regular expression `*`. You can also specify multiple regular expressions separated by commas.
                  type: string
              required:
                - replicas
                - consumer
                - producer
              type: object
            status:
              description: The status of Kafka MirrorMaker.
              properties:
                conditions:
                  description: List of status conditions.
                  items:
                    properties:
                      lastTransitionTime:
                        description: Last time the condition of a type changed from one status to another. The required format is 'yyyy-MM-ddTHH:mm:ssZ', in the UTC time zone.
                        type: string
                      message:
                        description: Human-readable message indicating details about the condition's last transition.
                        type: string
                      reason:
                        description: The reason for the condition's last transition (a single word in CamelCase).
                        type: string
                      status:
                        description: The status of the condition, either True, False or Unknown.
                        type: string
                      type:
                        description: The unique identifier of a condition, used to distinguish between other conditions in the resource.
                        type: string
                    type: object
                  type: array
                labelSelector:
                  description: Label selector for pods providing this resource.
                  type: string
                observedGeneration:
                  description: The generation of the CRD that was last reconciled by the operator.
                  type: integer
                replicas:
                  description: The current number of pods being used to provide this resource.
                  type: integer
              type: object
          type: object
      served: true
      storage: true
      subresources:
        scale:
          labelSelectorPath: .status.labelSelector
          specReplicasPath: .spec.replicas
          statusReplicasPath: .status.replicas
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    app: strimzi
    strimzi.io/crd-install: "true"
  name: kafkas.kafka.strimzi.io
spec:
  conversion:
    strategy: None
  group: kafka.strimzi.io
  names:
    categories:
      - strimzi
    kind: Kafka
    listKind: KafkaList
    plural: kafkas
    shortNames:
      - k
    singular: kafka
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - description: The desired number of Kafka replicas in the cluster
          jsonPath: .spec.kafka.replicas
          name: Desired Kafka replicas
          type: integer
        - description: The desired number of ZooKeeper replicas in the cluster
          jsonPath: .spec.zookeeper.replicas
          name: Desired ZK replicas
          type: integer
        - description: The state of the custom resource
          jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
        - description: The state of the cluster metadata
          jsonPath: .status.kafkaMetadataState
          name: Metadata State
          type: string
        - description: Warnings related to the custom resource
          jsonPath: .status.conditions[?(@.type=="Warning")].status
          name: Warnings
          type: string
      name: v1beta2
      schema:
        openAPIV3Schema:
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: The specification of the Kafka and ZooKeeper clusters, and Topic Operator.
              properties:
                clientsCa:
                  description: Configuration of the clients certificate authority.
                  properties:
                    certificateExpirationPolicy:
                      description: How should CA certificate expiration be handled when `generateCertificateAuthority=true`. The default is for a new CA certificate to be generated reusing the existing private key.
                      enum:
                        - renew-certificate
                        - replace-key
                      type: string
                    generateCertificateAuthority:
                      description: If true then Certificate Authority certificates will be generated automatically. Otherwise the user will need to provide a Secret with the CA certificate. Default is true.
                      type: boolean
                    generateSecretOwnerReference:
                      description: If `true`, the Cluster and Client CA Secrets are configured with the `ownerReference` set to the `Kafka` resource. If the `Kafka` resource is deleted when `true`, the CA Secrets are also deleted. If `false`, the `ownerReference` is disabled. If the `Kafka` resource is deleted when `false`, the CA Secrets are retained and available for reuse. Default is `true`.
                      type: boolean
                    renewalDays:
                      description: The number of days in the certificate renewal period. This is the number of days before the a certificate expires during which renewal actions may be performed. When `generateCertificateAuthority` is true, this will cause the generation of a new certificate. When `generateCertificateAuthority` is true, this will cause extra logging at WARN level about the pending certificate expiry. Default is 30.
                      minimum: 1
                      type: integer
                    validityDays:
                      description: The number of days generated certificates should be valid for. The default is 365.
                      minimum: 1
                      type: integer
                  type: object
                clusterCa:
                  description: Configuration of the cluster certificate authority.
                  properties:
                    certificateExpirationPolicy:
                      description: How should CA certificate expiration be handled when `generateCertificateAuthority=true`. The default is for a new CA certificate to be generated reusing the existing private key.
                      enum:
                        - renew-certificate
                        - replace-key
                      type: string
                    generateCertificateAuthority:
                      description: If true then Certificate Authority certificates will be generated automatically. Otherwise the user will need to provide a Secret with the CA certificate. Default is true.
                      type: boolean
                    generateSecretOwnerReference:
                      description: If `true`, the Cluster and Client CA Secrets are configured with the `ownerReference` set to the `Kafka` resource. If the `Kafka` resource is deleted when `true`, the CA Secrets are also deleted. If `false`, the `ownerReference` is disabled. If the `Kafka` resource is deleted when `false`, the CA Secrets are retained and available for reuse. Default is `true`.
                      type: boolean
                    renewalDays:
                      description: The number of days in the certificate renewal period. This is the number of days before the a certificate expires during which renewal actions may be performed. When `generateCertificateAuthority` is true, this will cause the generation of a new certificate. When `generateCertificateAuthority` is true, this will cause extra logging at WARN level about the pending certificate expiry. Default is 30.
                      minimum: 1
                      type: integer
                    validityDays:
                      description: The number of days generated certificates should be valid for. The default is 365.
                      minimum: 1
                      type: integer
                  type: object
                cruiseControl:
                  description: Configuration for Cruise Control deployment. Deploys a Cruise Control instance when specified.
                  properties:
                    apiUsers:
                      description: Configuration of the Cruise Control REST API users.
                      properties:
                        type:
                          description: 'Type of the Cruise Control API users configuration. Supported format is: `hashLoginService`.'
                          enum:
                            - hashLoginService
                          type: string
                        valueFrom:
                          description: Secret from which the custom Cruise Control API authentication credentials are read.
                          properties:
                            secretKeyRef:
                              description: Selects a key of a Secret in the resource's namespace.
                              properties:
                                key:
                                  type: string
                                name:
                                  type: string
                                optional:
                                  type: boolean
                              type: object
                          type: object
                      required:
                        - type
                        - valueFrom
                      type: object
                    autoRebalance:
                      description: Auto-rebalancing on scaling related configuration listing the modes, when brokers are added or removed, with the corresponding rebalance template configurations.If this field is set, at least one mode has to be defined.
                      items:
                        properties:
                          mode:
                            description: "Specifies the mode for automatically rebalancing when brokers are added or removed. Supported modes are `add-brokers` and `remove-brokers`. \n"
                            enum:
                              - add-brokers
                              - remove-brokers
                            type: string
                          template:
                            description: Reference to the KafkaRebalance custom resource to be used as the configuration template for the auto-rebalancing on scaling when running for the corresponding mode.
                            properties:
                              name:
                                type: string
                            type: object
                        required:
                          - mode
                        type: object
                      minItems: 1
                      type: array
                    brokerCapacity:
                      description: The Cruise Control `brokerCapacity` configuration.
                      properties:
                        cpu:
                          description: Broker capacity for CPU resource in cores or millicores. For example, 1, 1.500, 1500m. For more information on valid CPU resource units see https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#meaning-of-cpu.
                          pattern: ^[0-9]+([.][0-9]{0,3}|[m]?)$
                          type: string
                        cpuUtilization:
                          description: Broker capacity for CPU resource utilization as a percentage (0 - 100).
                          maximum: 100
                          minimum: 0
                          type: integer
                        disk:
                          description: Broker capacity for disk in bytes. Use a number value with either standard Kubernetes byte units (K, M, G, or T), their bibyte (power of two) equivalents (Ki, Mi, Gi, or Ti), or a byte value with or without E notation. For example, 100000M, 100000Mi, 104857600000, or 1e+11.
                          pattern: ^[0-9]+([.][0-9]*)?([KMGTPE]i?|e[0-9]+)?$
                          type: string
                        inboundNetwork:
                          description: Broker capacity for inbound network throughput in bytes per second. Use an integer value with standard Kubernetes byte units (K, M, G) or their bibyte (power of two) equivalents (Ki, Mi, Gi) per second. For example, 10000KiB/s.
                          pattern: ^[0-9]+([KMG]i?)?B/s$
                          type: string
                        outboundNetwork:
                          description: Broker capacity for outbound network throughput in bytes per second. Use an integer value with standard Kubernetes byte units (K, M, G) or their bibyte (power of two) equivalents (Ki, Mi, Gi) per second. For example, 10000KiB/s.
                          pattern: ^[0-9]+([KMG]i?)?B/s$
                          type: string
                        overrides:
                          description: Overrides for individual brokers. The `overrides` property lets you specify a different capacity configuration for different brokers.
                          items:
                            properties:
                              brokers:
                                description: List of Kafka brokers (broker identifiers).
                                items:
                                  type: integer
                                type: array
                              cpu:
                                description: Broker capacity for CPU resource in cores or millicores. For example, 1, 1.500, 1500m. For more information on valid CPU resource units see https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#meaning-of-cpu.
                                pattern: ^[0-9]+([.][0-9]{0,3}|[m]?)$
                                type: string
                              inboundNetwork:
                                description: Broker capacity for inbound network throughput in bytes per second. Use an integer value with standard Kubernetes byte units (K, M, G) or their bibyte (power of two) equivalents (Ki, Mi, Gi) per second. For example, 10000KiB/s.
                                pattern: ^[0-9]+([KMG]i?)?B/s$
                                type: string
                              outboundNetwork:
                                description: Broker capacity for outbound network throughput in bytes per second. Use an integer value with standard Kubernetes byte units (K, M, G) or their bibyte (power of two) equivalents (Ki, Mi, Gi) per second. For example, 10000KiB/s.
                                pattern: ^[0-9]+([KMG]i?)?B/s$
                                type: string
                            required:
                              - brokers
                            type: object
                          type: array
                      type: object
                    config:
                      description: 'The Cruise Control configuration. For a full list of configuration options refer to https://github.com/linkedin/cruise-control/wiki/Configurations. Note that properties with the following prefixes cannot be set: bootstrap.servers, client.id, zookeeper., network., security., failed.brokers.zk.path,webserver.http., webserver.api.urlprefix, webserver.session.path, webserver.accesslog., two.step., request.reason.required,metric.reporter.sampler.bootstrap.servers, capacity.config.file, self.healing., ssl., kafka.broker.failure.detection.enable, topic.config.provider.class (with the exception of: ssl.cipher.suites, ssl.protocol, ssl.enabled.protocols, webserver.http.cors.enabled, webserver.http.cors.origin, webserver.http.cors.exposeheaders, webserver.security.enable, webserver.ssl.enable).'
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    image:
                      description: The container image used for Cruise Control pods. If no image name is explicitly specified, the image name corresponds to the name specified in the Cluster Operator configuration. If an image name is not defined in the Cluster Operator configuration, a default value is used.
                      type: string
                    jvmOptions:
                      description: JVM Options for the Cruise Control container.
                      properties:
                        -XX:
                          additionalProperties:
                            type: string
                          description: A map of -XX options to the JVM.
                          type: object
                        -Xms:
                          description: -Xms option to to the JVM.
                          pattern: ^[0-9]+[mMgG]?$
                          type: string
                        -Xmx:
                          description: -Xmx option to to the JVM.
                          pattern: ^[0-9]+[mMgG]?$
                          type: string
                        gcLoggingEnabled:
                          description: Specifies whether the Garbage Collection logging is enabled. The default is false.
                          type: boolean
                        javaSystemProperties:
                          description: A map of additional system properties which will be passed using the `-D` option to the JVM.
                          items:
                            properties:
                              name:
                                description: The system property name.
                                type: string
                              value:
                                description: The system property value.
                                type: string
                            type: object
                          type: array
                      type: object
                    livenessProbe:
                      description: Pod liveness checking for the Cruise Control container.
                      properties:
                        failureThreshold:
                          description: Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
                          minimum: 1
                          type: integer
                        initialDelaySeconds:
                          description: The initial delay before first the health is first checked. Default to 15 seconds. Minimum value is 0.
                          minimum: 0
                          type: integer
                        periodSeconds:
                          description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
                          minimum: 1
                          type: integer
                        successThreshold:
                          description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
                          minimum: 1
                          type: integer
                        timeoutSeconds:
                          description: The timeout for each attempted health check. Default to 5 seconds. Minimum value is 1.
                          minimum: 1
                          type: integer
                      type: object
                    logging:
                      description: Logging configuration (Log4j 2) for Cruise Control.
                      properties:
                        loggers:
                          additionalProperties:
                            type: string
                          description: A Map from logger name to logger level.
                          type: object
                        type:
                          description: Logging type, must be either 'inline' or 'external'.
                          enum:
                            - inline
                            - external
                          type: string
                        valueFrom:
                          description: '`ConfigMap` entry where the logging configuration is stored. '
                          properties:
                            configMapKeyRef:
                              description: Reference to the key in the ConfigMap containing the configuration.
                              properties:
                                key:
                                  type: string
                                name:
                                  type: string
                                optional:
                                  type: boolean
                              type: object
                          type: object
                      required:
                        - type
                      type: object
                    metricsConfig:
                      description: Metrics configuration.
                      properties:
                        type:
                          description: Metrics type. Only 'jmxPrometheusExporter' supported currently.
                          enum:
                            - jmxPrometheusExporter
                          type: string
                        valueFrom:
                          description: 'ConfigMap entry where the Prometheus JMX Exporter configuration is stored. '
                          properties:
                            configMapKeyRef:
                              description: Reference to the key in the ConfigMap containing the configuration.
                              properties:
                                key:
                                  type: string
                                name:
                                  type: string
                                optional:
                                  type: boolean
                              type: object
                          type: object
                      required:
                        - type
                        - valueFrom
                      type: object
                    readinessProbe:
                      description: Pod readiness checking for the Cruise Control container.
                      properties:
                        failureThreshold:
                          description: Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
                          minimum: 1
                          type: integer
                        initialDelaySeconds:
                          description: The initial delay before first the health is first checked. Default to 15 seconds. Minimum value is 0.
                          minimum: 0
                          type: integer
                        periodSeconds:
                          description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
                          minimum: 1
                          type: integer
                        successThreshold:
                          description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
                          minimum: 1
                          type: integer
                        timeoutSeconds:
                          description: The timeout for each attempted health check. Default to 5 seconds. Minimum value is 1.
                          minimum: 1
                          type: integer
                      type: object
                    resources:
                      description: CPU and memory resources to reserve for the Cruise Control container.
                      properties:
                        claims:
                          items:
                            properties:
                              name:
                                type: string
                            type: object
                          type: array
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          type: object
                      type: object
                    template:
                      description: Template to specify how Cruise Control resources, `Deployments` and `Pods`, are generated.
                      properties:
                        apiService:
                          description: Template for Cruise Control API `Service`.
                          properties:
                            ipFamilies:
                              description: Specifies the IP Families used by the service. Available options are `IPv4` and `IPv6`. If unspecified, Kubernetes will choose the default value based on the `ipFamilyPolicy` setting.
                              items:
                                enum:
                                  - IPv4
                                  - IPv6
                                type: string
                              type: array
                            ipFamilyPolicy:
                              description: Specifies the IP Family Policy used by the service. Available options are `SingleStack`, `PreferDualStack` and `RequireDualStack`. `SingleStack` is for a single IP family. `PreferDualStack` is for two IP families on dual-stack configured clusters or a single IP family on single-stack clusters. `RequireDualStack` fails unless there are two IP families on dual-stack configured clusters. If unspecified, Kubernetes will choose the default value based on the service type.
                              enum:
                                - SingleStack
                                - PreferDualStack
                                - RequireDualStack
                              type: string
                            metadata:
                              description: Metadata applied to the resource.
                              properties:
                                annotations:
                                  additionalProperties:
                                    type: string
                                  description: Annotations added to the Kubernetes resource.
                                  type: object
                                labels:
                                  additionalProperties:
                                    type: string
                                  description: Labels added to the Kubernetes resource.
                                  type: object
                              type: object
                          type: object
                        cruiseControlContainer:
                          description: Template for the Cruise Control container.
                          properties:
                            env:
                              description: Environment variables which should be applied to the container.
                              items:
                                oneOf:
                                  - properties:
                                      value: {}
                                    required:
                                      - value
                                  - properties:
                                      valueFrom: {}
                                    required:
                                      - valueFrom
                                properties:
                                  name:
                                    description: The environment variable key.
                                    type: string
                                  value:
                                    description: The environment variable value.
                                    type: string
                                  valueFrom:
                                    description: Reference to the secret or config map property to which the environment variable is set.
                                    oneOf:
                                      - properties:
                                          secretKeyRef: {}
                                        required:
                                          - secretKeyRef
                                      - properties:
                                          configMapKeyRef: {}
                                        required:
                                          - configMapKeyRef
                                    properties:
                                      configMapKeyRef:
                                        description: Reference to a key in a config map.
                                        properties:
                                          key:
                                            type: string
                                          name:
                                            type: string
                                          optional:
                                            type: boolean
                                        type: object
                                      secretKeyRef:
                                        description: Reference to a key in a secret.
                                        properties:
                                          key:
                                            type: string
                                          name:
                                            type: string
                                          optional:
                                            type: boolean
                                        type: object
                                    type: object
                                type: object
                              type: array
                            securityContext:
                              description: Security context for the container.
                              properties:
                                allowPrivilegeEscalation:
                                  type: boolean
                                appArmorProfile:
                                  properties:
                                    localhostProfile:
                                      type: string
                                    type:
                                      type: string
                                  type: object
                                capabilities:
                                  properties:
                                    add:
                                      items:
                                        type: string
                                      type: array
                                    drop:
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                privileged:
                                  type: boolean
                                procMount:
                                  type: string
                                readOnlyRootFilesystem:
                                  type: boolean
                                runAsGroup:
                                  type: integer
                                runAsNonRoot:
                                  type: boolean
                                runAsUser:
                                  type: integer
                                seLinuxOptions:
                                  properties:
                                    level:
                                      type: string
                                    role:
                                      type: string
                                    type:
                                      type: string
                                    user:
                                      type: string
                                  type: object
                                seccompProfile:
                                  properties:
                                    localhostProfile:
                                      type: string
                                    type:
                                      type: string
                                  type: object
                                windowsOptions:
                                  properties:
                                    gmsaCredentialSpec:
                                      type: string
                                    gmsaCredentialSpecName:
                                      type: string
                                    hostProcess:
                                      type: boolean
                                    runAsUserName:
                                      type: string
                                  type: object
                              type: object
                            volumeMounts:
                              description: Additional volume mounts which should be applied to the container.
                              items:
                                properties:
                                  mountPath:
                                    type: string
                                  mountPropagation:
                                    type: string
                                  name:
                                    type: string
                                  readOnly:
                                    type: boolean
                                  recursiveReadOnly:
                                    type: string
                                  subPath:
                                    type: string
                                  subPathExpr:
                                    type: string
                                type: object
                              type: array
                          type: object
                        deployment:
                          description: Template for Cruise Control `Deployment`.
                          properties:
                            deploymentStrategy:
                              description: Pod replacement strategy for deployment configuration changes. Valid values are `RollingUpdate` and `Recreate`. Defaults to `RollingUpdate`.
                              enum:
                                - RollingUpdate
                                - Recreate
                              type: string
                            metadata:
                              description: Metadata applied to the resource.
                              properties:
                                annotations:
                                  additionalProperties:
                                    type: string
                                  description: Annotations added to the Kubernetes resource.
                                  type: object
                                labels:
                                  additionalProperties:
                                    type: string
                                  description: Labels added to the Kubernetes resource.
                                  type: object
                              type: object
                          type: object
                        pod:
                          description: Template for Cruise Control `Pods`.
                          properties:
                            affinity:
                              description: The pod's affinity rules.
                              properties:
                                nodeAffinity:
                                  properties:
                                    preferredDuringSchedulingIgnoredDuringExecution:
                                      items:
                                        properties:
                                          preference:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchFields:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                            type: object
                                          weight:
                                            type: integer
                                        type: object
                                      type: array
                                    requiredDuringSchedulingIgnoredDuringExecution:
                                      properties:
                                        nodeSelectorTerms:
                                          items:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchFields:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                            type: object
                                          type: array
                                      type: object
                                  type: object
                                podAffinity:
                                  properties:
                                    preferredDuringSchedulingIgnoredDuringExecution:
                                      items:
                                        properties:
                                          podAffinityTerm:
                                            properties:
                                              labelSelector:
                                                properties:
                                                  matchExpressions:
                                                    items:
                                                      properties:
                                                        key:
                                                          type: string
                                                        operator:
                                                          type: string
                                                        values:
                                                          items:
                                                            type: string
                                                          type: array
                                                      type: object
                                                    type: array
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: string
                                                    type: object
                                                type: object
                                              matchLabelKeys:
                                                items:
                                                  type: string
                                                type: array
                                              mismatchLabelKeys:
                                                items:
                                                  type: string
                                                type: array
                                              namespaceSelector:
                                                properties:
                                                  matchExpressions:
                                                    items:
                                                      properties:
                                                        key:
                                                          type: string
                                                        operator:
                                                          type: string
                                                        values:
                                                          items:
                                                            type: string
                                                          type: array
                                                      type: object
                                                    type: array
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: string
                                                    type: object
                                                type: object
                                              namespaces:
                                                items:
                                                  type: string
                                                type: array
                                              topologyKey:
                                                type: string
                                            type: object
                                          weight:
                                            type: integer
                                        type: object
                                      type: array
                                    requiredDuringSchedulingIgnoredDuringExecution:
                                      items:
                                        properties:
                                          labelSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels:
                                                additionalProperties:
                                                  type: string
                                                type: object
                                            type: object
                                          matchLabelKeys:
                                            items:
                                              type: string
                                            type: array
                                          mismatchLabelKeys:
                                            items:
                                              type: string
                                            type: array
                                          namespaceSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels:
                                                additionalProperties:
                                                  type: string
                                                type: object
                                            type: object
                                          namespaces:
                                            items:
                                              type: string
                                            type: array
                                          topologyKey:
                                            type: string
                                        type: object
                                      type: array
                                  type: object
                                podAntiAffinity:
                                  properties:
                                    preferredDuringSchedulingIgnoredDuringExecution:
                                      items:
                                        properties:
                                          podAffinityTerm:
                                            properties:
                                              labelSelector:
                                                properties:
                                                  matchExpressions:
                                                    items:
                                                      properties:
                                                        key:
                                                          type: string
                                                        operator:
                                                          type: string
                                                        values:
                                                          items:
                                                            type: string
                                                          type: array
                                                      type: object
                                                    type: array
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: string
                                                    type: object
                                                type: object
                                              matchLabelKeys:
                                                items:
                                                  type: string
                                                type: array
                                              mismatchLabelKeys:
                                                items:
                                                  type: string
                                                type: array
                                              namespaceSelector:
                                                properties:
                                                  matchExpressions:
                                                    items:
                                                      properties:
                                                        key:
                                                          type: string
                                                        operator:
                                                          type: string
                                                        values:
                                                          items:
                                                            type: string
                                                          type: array
                                                      type: object
                                                    type: array
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: string
                                                    type: object
                                                type: object
                                              namespaces:
                                                items:
                                                  type: string
                                                type: array
                                              topologyKey:
                                                type: string
                                            type: object
                                          weight:
                                            type: integer
                                        type: object
                                      type: array
                                    requiredDuringSchedulingIgnoredDuringExecution:
                                      items:
                                        properties:
                                          labelSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels:
                                                additionalProperties:
                                                  type: string
                                                type: object
                                            type: object
                                          matchLabelKeys:
                                            items:
                                              type: string
                                            type: array
                                          mismatchLabelKeys:
                                            items:
                                              type: string
                                            type: array
                                          namespaceSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels:
                                                additionalProperties:
                                                  type: string
                                                type: object
                                            type: object
                                          namespaces:
                                            items:
                                              type: string
                                            type: array
                                          topologyKey:
                                            type: string
                                        type: object
                                      type: array
                                  type: object
                              type: object
                            enableServiceLinks:
                              description: Indicates whether information about services should be injected into Pod's environment variables.
                              type: boolean
                            hostAliases:
                              description: The pod's HostAliases. HostAliases is an optional list of hosts and IPs that will be injected into the Pod's hosts file if specified.
                              items:
                                properties:
                                  hostnames:
                                    items:
                                      type: string
                                    type: array
                                  ip:
                                    type: string
                                type: object
                              type: array
                            imagePullSecrets:
                              description: List of references to secrets in the same namespace to use for pulling any of the images used by this Pod. When the `STRIMZI_IMAGE_PULL_SECRETS` environment variable in Cluster Operator and the `imagePullSecrets` option are specified, only the `imagePullSecrets` variable is used and the `STRIMZI_IMAGE_PULL_SECRETS` variable is ignored.
                              items:
                                properties:
                                  name:
                                    type: string
                                type: object
                              type: array
                            metadata:
                              description: Metadata applied to the resource.
                              properties:
                                annotations:
                                  additionalProperties:
                                    type: string
                                  description: Annotations added to the Kubernetes resource.
                                  type: object
                                labels:
                                  additionalProperties:
                                    type: string
                                  description: Labels added to the Kubernetes resource.
                                  type: object
                              type: object
                            priorityClassName:
                              description: 'The name of the priority class used to assign priority to the pods. '
                              type: string
                            schedulerName:
                              description: The name of the scheduler used to dispatch this `Pod`. If not specified, the default scheduler will be used.
                              type: string
                            securityContext:
                              description: Configures pod-level security attributes and common container settings.
                              properties:
                                appArmorProfile:
                                  properties:
                                    localhostProfile:
                                      type: string
                                    type:
                                      type: string
                                  type: object
                                fsGroup:
                                  type: integer
                                fsGroupChangePolicy:
                                  type: string
                                runAsGroup:
                                  type: integer
                                runAsNonRoot:
                                  type: boolean
                                runAsUser:
                                  type: integer
                                seLinuxOptions:
                                  properties:
                                    level:
                                      type: string
                                    role:
                                      type: string
                                    type:
                                      type: string
                                    user:
                                      type: string
                                  type: object
                                seccompProfile:
                                  properties:
                                    localhostProfile:
                                      type: string
                                    type:
                                      type: string
                                  type: object
                                supplementalGroups:
                                  items:
                                    type: integer
                                  type: array
                                sysctls:
                                  items:
                                    properties:
                                      name:
                                        type: string
                                      value:
                                        type: string
                                    type: object
                                  type: array
                                windowsOptions:
                                  properties:
                                    gmsaCredentialSpec:
                                      type: string
                                    gmsaCredentialSpecName:
                                      type: string
                                    hostProcess:
                                      type: boolean
                                    runAsUserName:
                                      type: string
                                  type: object
                              type: object
                            terminationGracePeriodSeconds:
                              description: The grace period is the duration in seconds after the processes running in the pod are sent a termination signal, and the time when the processes are forcibly halted with a kill signal. Set this value to longer than the expected cleanup time for your process. Value must be a non-negative integer. A zero value indicates delete immediately. You might need to increase the grace period for very large Kafka clusters, so that the Kafka brokers have enough time to transfer their work to another broker before they are terminated. Defaults to 30 seconds.
                              minimum: 0
                              type: integer
                            tmpDirSizeLimit:
                              description: Defines the total amount of pod memory allocated for the temporary `EmptyDir` volume `/tmp`. Specify the allocation in memory units, for example, `100Mi` for 100 mebibytes. Default value is `5Mi`. The `/tmp` volume is backed by pod memory, not disk storage, so avoid setting a high value as it consumes pod memory resources.
                              pattern: ^([0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$
                              type: string
                            tolerations:
                              description: The pod's tolerations.
                              items:
                                properties:
                                  effect:
                                    type: string
                                  key:
                                    type: string
                                  operator:
                                    type: string
                                  tolerationSeconds:
                                    type: integer
                                  value:
                                    type: string
                                type: object
                              type: array
                            topologySpreadConstraints:
                              description: The pod's topology spread constraints.
                              items:
                                properties:
                                  labelSelector:
                                    properties:
                                      matchExpressions:
                                        items:
                                          properties:
                                            key:
                                              type: string
                                            operator:
                                              type: string
                                            values:
                                              items:
                                                type: string
                                              type: array
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        type: object
                                    type: object
                                  matchLabelKeys:
                                    items:
                                      type: string
                                    type: array
                                  maxSkew:
                                    type: integer
                                  minDomains:
                                    type: integer
                                  nodeAffinityPolicy:
                                    type: string
                                  nodeTaintsPolicy:
                                    type: string
                                  topologyKey:
                                    type: string
                                  whenUnsatisfiable:
                                    type: string
                                type: object
                              type: array
                            volumes:
                              description: Additional volumes that can be mounted to the pod.
                              items:
                                oneOf:
                                  - properties:
                                      configMap: {}
                                      csi: {}
                                      emptyDir: {}
                                      persistentVolumeClaim: {}
                                      secret: {}
                                properties:
                                  configMap:
                                    description: ConfigMap to use to populate the volume.
                                    properties:
                                      defaultMode:
                                        type: integer
                                      items:
                                        items:
                                          properties:
                                            key:
                                              type: string
                                            mode:
                                              type: integer
                                            path:
                                              type: string
                                          type: object
                                        type: array
                                      name:
                                        type: string
                                      optional:
                                        type: boolean
                                    type: object
                                  csi:
                                    description: CSIVolumeSource object to use to populate the volume.
                                    properties:
                                      driver:
                                        type: string
                                      fsType:
                                        type: string
                                      nodePublishSecretRef:
                                        properties:
                                          name:
                                            type: string
                                        type: object
                                      readOnly:
                                        type: boolean
                                      volumeAttributes:
                                        additionalProperties:
                                          type: string
                                        type: object
                                    type: object
                                  emptyDir:
                                    description: EmptyDir to use to populate the volume.
                                    properties:
                                      medium:
                                        type: string
                                      sizeLimit:
                                        properties:
                                          amount:
                                            type: string
                                          format:
                                            type: string
                                        type: object
                                    type: object
                                  name:
                                    description: Name to use for the volume. Required.
                                    type: string
                                  persistentVolumeClaim:
                                    description: PersistentVolumeClaim object to use to populate the volume.
                                    properties:
                                      claimName:
                                        type: string
                                      readOnly:
                                        type: boolean
                                    type: object
                                  secret:
                                    description: Secret to use populate the volume.
                                    properties:
                                      defaultMode:
                                        type: integer
                                      items:
                                        items:
                                          properties:
                                            key:
                                              type: string
                                            mode:
                                              type: integer
                                            path:
                                              type: string
                                          type: object
                                        type: array
                                      optional:
                                        type: boolean
                                      secretName:
                                        type: string
                                    type: object
                                type: object
                              type: array
                          type: object
                        podDisruptionBudget:
                          description: Template for Cruise Control `PodDisruptionBudget`.
                          properties:
                            maxUnavailable:
                              description: Maximum number of unavailable pods to allow automatic Pod eviction. A Pod eviction is allowed when the `maxUnavailable` number of pods or fewer are unavailable after the eviction. Setting this value to 0 prevents all voluntary evictions, so the pods must be evicted manually. Defaults to 1.
                              minimum: 0
                              type: integer
                            metadata:
                              description: Metadata to apply to the `PodDisruptionBudgetTemplate` resource.
                              properties:
                                annotations:
                                  additionalProperties:
                                    type: string
                                  description: Annotations added to the Kubernetes resource.
                                  type: object
                                labels:
                                  additionalProperties:
                                    type: string
                                  description: Labels added to the Kubernetes resource.
                                  type: object
                              type: object
                          type: object
                        serviceAccount:
                          description: Template for the Cruise Control service account.
                          properties:
                            metadata:
                              description: Metadata applied to the resource.
                              properties:
                                annotations:
                                  additionalProperties:
                                    type: string
                                  description: Annotations added to the Kubernetes resource.
                                  type: object
                                labels:
                                  additionalProperties:
                                    type: string
                                  description: Labels added to the Kubernetes resource.
                                  type: object
                              type: object
                          type: object
                        tlsSidecarContainer:
                          description: Template for the Cruise Control TLS sidecar container.
                          properties:
                            env:
                              description: Environment variables which should be applied to the container.
                              items:
                                oneOf:
                                  - properties:
                                      value: {}
                                    required:
                                      - value
                                  - properties:
                                      valueFrom: {}
                                    required:
                                      - valueFrom
                                properties:
                                  name:
                                    description: The environment variable key.
                                    type: string
                                  value:
                                    description: The environment variable value.
                                    type: string
                                  valueFrom:
                                    description: Reference to the secret or config map property to which the environment variable is set.
                                    oneOf:
                                      - properties:
                                          secretKeyRef: {}
                                        required:
                                          - secretKeyRef
                                      - properties:
                                          configMapKeyRef: {}
                                        required:
                                          - configMapKeyRef
                                    properties:
                                      configMapKeyRef:
                                        description: Reference to a key in a config map.
                                        properties:
                                          key:
                                            type: string
                                          name:
                                            type: string
                                          optional:
                                            type: boolean
                                        type: object
                                      secretKeyRef:
                                        description: Reference to a key in a secret.
                                        properties:
                                          key:
                                            type: string
                                          name:
                                            type: string
                                          optional:
                                            type: boolean
                                        type: object
                                    type: object
                                type: object
                              type: array
                            securityContext:
                              description: Security context for the container.
                              properties:
                                allowPrivilegeEscalation:
                                  type: boolean
                                appArmorProfile:
                                  properties:
                                    localhostProfile:
                                      type: string
                                    type:
                                      type: string
                                  type: object
                                capabilities:
                                  properties:
                                    add:
                                      items:
                                        type: string
                                      type: array
                                    drop:
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                privileged:
                                  type: boolean
                                procMount:
                                  type: string
                                readOnlyRootFilesystem:
                                  type: boolean
                                runAsGroup:
                                  type: integer
                                runAsNonRoot:
                                  type: boolean
                                runAsUser:
                                  type: integer
                                seLinuxOptions:
                                  properties:
                                    level:
                                      type: string
                                    role:
                                      type: string
                                    type:
                                      type: string
                                    user:
                                      type: string
                                  type: object
                                seccompProfile:
                                  properties:
                                    localhostProfile:
                                      type: string
                                    type:
                                      type: string
                                  type: object
                                windowsOptions:
                                  properties:
                                    gmsaCredentialSpec:
                                      type: string
                                    gmsaCredentialSpecName:
                                      type: string
                                    hostProcess:
                                      type: boolean
                                    runAsUserName:
                                      type: string
                                  type: object
                              type: object
                            volumeMounts:
                              description: Additional volume mounts which should be applied to the container.
                              items:
                                properties:
                                  mountPath:
                                    type: string
                                  mountPropagation:
                                    type: string
                                  name:
                                    type: string
                                  readOnly:
                                    type: boolean
                                  recursiveReadOnly:
                                    type: string
                                  subPath:
                                    type: string
                                  subPathExpr:
                                    type: string
                                type: object
                              type: array
                          type: object
                      type: object
                    tlsSidecar:
                      description: TLS sidecar configuration.
                      properties:
                        image:
                          description: The docker image for the container.
                          type: string
                        livenessProbe:
                          description: Pod liveness checking.
                          properties:
                            failureThreshold:
                              description: Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
                              minimum: 1
                              type: integer
                            initialDelaySeconds:
                              description: The initial delay before first the health is first checked. Default to 15 seconds. Minimum value is 0.
                              minimum: 0
                              type: integer
                            periodSeconds:
                              description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
                              minimum: 1
                              type: integer
                            successThreshold:
                              description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
                              minimum: 1
                              type: integer
                            timeoutSeconds:
                              description: The timeout for each attempted health check. Default to 5 seconds. Minimum value is 1.
                              minimum: 1
                              type: integer
                          type: object
                        logLevel:
                          description: The log level for the TLS sidecar. Default value is `notice`.
                          enum:
                            - emerg
                            - alert
                            - crit
                            - err
                            - warning
                            - notice
                            - info
                            - debug
                          type: string
                        readinessProbe:
                          description: Pod readiness checking.
                          properties:
                            failureThreshold:
                              description: Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
                              minimum: 1
                              type: integer
                            initialDelaySeconds:
                              description: The initial delay before first the health is first checked. Default to 15 seconds. Minimum value is 0.
                              minimum: 0
                              type: integer
                            periodSeconds:
                              description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
                              minimum: 1
                              type: integer
                            successThreshold:
                              description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
                              minimum: 1
                              type: integer
                            timeoutSeconds:
                              description: The timeout for each attempted health check. Default to 5 seconds. Minimum value is 1.
                              minimum: 1
                              type: integer
                          type: object
                        resources:
                          description: CPU and memory resources to reserve.
                          properties:
                            claims:
                              items:
                                properties:
                                  name:
                                    type: string
                                type: object
                              type: array
                            limits:
                              additionalProperties:
                                anyOf:
                                  - type: integer
                                  - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              type: object
                            requests:
                              additionalProperties:
                                anyOf:
                                  - type: integer
                                  - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              type: object
                          type: object
                      type: object
                  type: object
                entityOperator:
                  description: Configuration of the Entity Operator.
                  properties:
                    template:
                      description: Template for Entity Operator resources. The template allows users to specify how a `Deployment` and `Pod` is generated.
                      properties:
                        deployment:
                          description: Template for Entity Operator `Deployment`.
                          properties:
                            deploymentStrategy:
                              description: Pod replacement strategy for deployment configuration changes. Valid values are `RollingUpdate` and `Recreate`. Defaults to `RollingUpdate`.
                              enum:
                                - RollingUpdate
                                - Recreate
                              type: string
                            metadata:
                              description: Metadata applied to the resource.
                              properties:
                                annotations:
                                  additionalProperties:
                                    type: string
                                  description: Annotations added to the Kubernetes resource.
                                  type: object
                                labels:
                                  additionalProperties:
                                    type: string
                                  description: Labels added to the Kubernetes resource.
                                  type: object
                              type: object
                          type: object
                        entityOperatorRole:
                          description: Template for the Entity Operator Role.
                          properties:
                            metadata:
                              description: Metadata applied to the resource.
                              properties:
                                annotations:
                                  additionalProperties:
                                    type: string
                                  description: Annotations added to the Kubernetes resource.
                                  type: object
                                labels:
                                  additionalProperties:
                                    type: string
                                  description: Labels added to the Kubernetes resource.
                                  type: object
                              type: object
                          type: object
                        pod:
                          description: Template for Entity Operator `Pods`.
                          properties:
                            affinity:
                              description: The pod's affinity rules.
                              properties:
                                nodeAffinity:
                                  properties:
                                    preferredDuringSchedulingIgnoredDuringExecution:
                                      items:
                                        properties:
                                          preference:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchFields:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                            type: object
                                          weight:
                                            type: integer
                                        type: object
                                      type: array
                                    requiredDuringSchedulingIgnoredDuringExecution:
                                      properties:
                                        nodeSelectorTerms:
                                          items:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchFields:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                            type: object
                                          type: array
                                      type: object
                                  type: object
                                podAffinity:
                                  properties:
                                    preferredDuringSchedulingIgnoredDuringExecution:
                                      items:
                                        properties:
                                          podAffinityTerm:
                                            properties:
                                              labelSelector:
                                                properties:
                                                  matchExpressions:
                                                    items:
                                                      properties:
                                                        key:
                                                          type: string
                                                        operator:
                                                          type: string
                                                        values:
                                                          items:
                                                            type: string
                                                          type: array
                                                      type: object
                                                    type: array
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: string
                                                    type: object
                                                type: object
                                              matchLabelKeys:
                                                items:
                                                  type: string
                                                type: array
                                              mismatchLabelKeys:
                                                items:
                                                  type: string
                                                type: array
                                              namespaceSelector:
                                                properties:
                                                  matchExpressions:
                                                    items:
                                                      properties:
                                                        key:
                                                          type: string
                                                        operator:
                                                          type: string
                                                        values:
                                                          items:
                                                            type: string
                                                          type: array
                                                      type: object
                                                    type: array
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: string
                                                    type: object
                                                type: object
                                              namespaces:
                                                items:
                                                  type: string
                                                type: array
                                              topologyKey:
                                                type: string
                                            type: object
                                          weight:
                                            type: integer
                                        type: object
                                      type: array
                                    requiredDuringSchedulingIgnoredDuringExecution:
                                      items:
                                        properties:
                                          labelSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels:
                                                additionalProperties:
                                                  type: string
                                                type: object
                                            type: object
                                          matchLabelKeys:
                                            items:
                                              type: string
                                            type: array
                                          mismatchLabelKeys:
                                            items:
                                              type: string
                                            type: array
                                          namespaceSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels:
                                                additionalProperties:
                                                  type: string
                                                type: object
                                            type: object
                                          namespaces:
                                            items:
                                              type: string
                                            type: array
                                          topologyKey:
                                            type: string
                                        type: object
                                      type: array
                                  type: object
                                podAntiAffinity:
                                  properties:
                                    preferredDuringSchedulingIgnoredDuringExecution:
                                      items:
                                        properties:
                                          podAffinityTerm:
                                            properties:
                                              labelSelector:
                                                properties:
                                                  matchExpressions:
                                                    items:
                                                      properties:
                                                        key:
                                                          type: string
                                                        operator:
                                                          type: string
                                                        values:
                                                          items:
                                                            type: string
                                                          type: array
                                                      type: object
                                                    type: array
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: string
                                                    type: object
                                                type: object
                                              matchLabelKeys:
                                                items:
                                                  type: string
                                                type: array
                                              mismatchLabelKeys:
                                                items:
                                                  type: string
                                                type: array
                                              namespaceSelector:
                                                properties:
                                                  matchExpressions:
                                                    items:
                                                      properties:
                                                        key:
                                                          type: string
                                                        operator:
                                                          type: string
                                                        values:
                                                          items:
                                                            type: string
                                                          type: array
                                                      type: object
                                                    type: array
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: string
                                                    type: object
                                                type: object
                                              namespaces:
                                                items:
                                                  type: string
                                                type: array
                                              topologyKey:
                                                type: string
                                            type: object
                                          weight:
                                            type: integer
                                        type: object
                                      type: array
                                    requiredDuringSchedulingIgnoredDuringExecution:
                                      items:
                                        properties:
                                          labelSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels:
                                                additionalProperties:
                                                  type: string
                                                type: object
                                            type: object
                                          matchLabelKeys:
                                            items:
                                              type: string
                                            type: array
                                          mismatchLabelKeys:
                                            items:
                                              type: string
                                            type: array
                                          namespaceSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels:
                                                additionalProperties:
                                                  type: string
                                                type: object
                                            type: object
                                          namespaces:
                                            items:
                                              type: string
                                            type: array
                                          topologyKey:
                                            type: string
                                        type: object
                                      type: array
                                  type: object
                              type: object
                            enableServiceLinks:
                              description: Indicates whether information about services should be injected into Pod's environment variables.
                              type: boolean
                            hostAliases:
                              description: The pod's HostAliases. HostAliases is an optional list of hosts and IPs that will be injected into the Pod's hosts file if specified.
                              items:
                                properties:
                                  hostnames:
                                    items:
                                      type: string
                                    type: array
                                  ip:
                                    type: string
                                type: object
                              type: array
                            imagePullSecrets:
                              description: List of references to secrets in the same namespace to use for pulling any of the images used by this Pod. When the `STRIMZI_IMAGE_PULL_SECRETS` environment variable in Cluster Operator and the `imagePullSecrets` option are specified, only the `imagePullSecrets` variable is used and the `STRIMZI_IMAGE_PULL_SECRETS` variable is ignored.
                              items:
                                properties:
                                  name:
                                    type: string
                                type: object
                              type: array
                            metadata:
                              description: Metadata applied to the resource.
                              properties:
                                annotations:
                                  additionalProperties:
                                    type: string
                                  description: Annotations added to the Kubernetes resource.
                                  type: object
                                labels:
                                  additionalProperties:
                                    type: string
                                  description: Labels added to the Kubernetes resource.
                                  type: object
                              type: object
                            priorityClassName:
                              description: 'The name of the priority class used to assign priority to the pods. '
                              type: string
                            schedulerName:
                              description: The name of the scheduler used to dispatch this `Pod`. If not specified, the default scheduler will be used.
                              type: string
                            securityContext:
                              description: Configures pod-level security attributes and common container settings.
                              properties:
                                appArmorProfile:
                                  properties:
                                    localhostProfile:
                                      type: string
                                    type:
                                      type: string
                                  type: object
                                fsGroup:
                                  type: integer
                                fsGroupChangePolicy:
                                  type: string
                                runAsGroup:
                                  type: integer
                                runAsNonRoot:
                                  type: boolean
                                runAsUser:
                                  type: integer
                                seLinuxOptions:
                                  properties:
                                    level:
                                      type: string
                                    role:
                                      type: string
                                    type:
                                      type: string
                                    user:
                                      type: string
                                  type: object
                                seccompProfile:
                                  properties:
                                    localhostProfile:
                                      type: string
                                    type:
                                      type: string
                                  type: object
                                supplementalGroups:
                                  items:
                                    type: integer
                                  type: array
                                sysctls:
                                  items:
                                    properties:
                                      name:
                                        type: string
                                      value:
                                        type: string
                                    type: object
                                  type: array
                                windowsOptions:
                                  properties:
                                    gmsaCredentialSpec:
                                      type: string
                                    gmsaCredentialSpecName:
                                      type: string
                                    hostProcess:
                                      type: boolean
                                    runAsUserName:
                                      type: string
                                  type: object
                              type: object
                            terminationGracePeriodSeconds:
                              description: The grace period is the duration in seconds after the processes running in the pod are sent a termination signal, and the time when the processes are forcibly halted with a kill signal. Set this value to longer than the expected cleanup time for your process. Value must be a non-negative integer. A zero value indicates delete immediately. You might need to increase the grace period for very large Kafka clusters, so that the Kafka brokers have enough time to transfer their work to another broker before they are terminated. Defaults to 30 seconds.
                              minimum: 0
                              type: integer
                            tmpDirSizeLimit:
                              description: Defines the total amount of pod memory allocated for the temporary `EmptyDir` volume `/tmp`. Specify the allocation in memory units, for example, `100Mi` for 100 mebibytes. Default value is `5Mi`. The `/tmp` volume is backed by pod memory, not disk storage, so avoid setting a high value as it consumes pod memory resources.
                              pattern: ^([0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$
                              type: string
                            tolerations:
                              description: The pod's tolerations.
                              items:
                                properties:
                                  effect:
                                    type: string
                                  key:
                                    type: string
                                  operator:
                                    type: string
                                  tolerationSeconds:
                                    type: integer
                                  value:
                                    type: string
                                type: object
                              type: array
                            topologySpreadConstraints:
                              description: The pod's topology spread constraints.
                              items:
                                properties:
                                  labelSelector:
                                    properties:
                                      matchExpressions:
                                        items:
                                          properties:
                                            key:
                                              type: string
                                            operator:
                                              type: string
                                            values:
                                              items:
                                                type: string
                                              type: array
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        type: object
                                    type: object
                                  matchLabelKeys:
                                    items:
                                      type: string
                                    type: array
                                  maxSkew:
                                    type: integer
                                  minDomains:
                                    type: integer
                                  nodeAffinityPolicy:
                                    type: string
                                  nodeTaintsPolicy:
                                    type: string
                                  topologyKey:
                                    type: string
                                  whenUnsatisfiable:
                                    type: string
                                type: object
                              type: array
                            volumes:
                              description: Additional volumes that can be mounted to the pod.
                              items:
                                oneOf:
                                  - properties:
                                      configMap: {}
                                      csi: {}
                                      emptyDir: {}
                                      persistentVolumeClaim: {}
                                      secret: {}
                                properties:
                                  configMap:
                                    description: ConfigMap to use to populate the volume.
                                    properties:
                                      defaultMode:
                                        type: integer
                                      items:
                                        items:
                                          properties:
                                            key:
                                              type: string
                                            mode:
                                              type: integer
                                            path:
                                              type: string
                                          type: object
                                        type: array
                                      name:
                                        type: string
                                      optional:
                                        type: boolean
                                    type: object
                                  csi:
                                    description: CSIVolumeSource object to use to populate the volume.
                                    properties:
                                      driver:
                                        type: string
                                      fsType:
                                        type: string
                                      nodePublishSecretRef:
                                        properties:
                                          name:
                                            type: string
                                        type: object
                                      readOnly:
                                        type: boolean
                                      volumeAttributes:
                                        additionalProperties:
                                          type: string
                                        type: object
                                    type: object
                                  emptyDir:
                                    description: EmptyDir to use to populate the volume.
                                    properties:
                                      medium:
                                        type: string
                                      sizeLimit:
                                        properties:
                                          amount:
                                            type: string
                                          format:
                                            type: string
                                        type: object
                                    type: object
                                  name:
                                    description: Name to use for the volume. Required.
                                    type: string
                                  persistentVolumeClaim:
                                    description: PersistentVolumeClaim object to use to populate the volume.
                                    properties:
                                      claimName:
                                        type: string
                                      readOnly:
                                        type: boolean
                                    type: object
                                  secret:
                                    description: Secret to use populate the volume.
                                    properties:
                                      defaultMode:
                                        type: integer
                                      items:
                                        items:
                                          properties:
                                            key:
                                              type: string
                                            mode:
                                              type: integer
                                            path:
                                              type: string
                                          type: object
                                        type: array
                                      optional:
                                        type: boolean
                                      secretName:
                                        type: string
                                    type: object
                                type: object
                              type: array
                          type: object
                        serviceAccount:
                          description: Template for the Entity Operator service account.
                          properties:
                            metadata:
                              description: Metadata applied to the resource.
                              properties:
                                annotations:
                                  additionalProperties:
                                    type: string
                                  description: Annotations added to the Kubernetes resource.
                                  type: object
                                labels:
                                  additionalProperties:
                                    type: string
                                  description: Labels added to the Kubernetes resource.
                                  type: object
                              type: object
                          type: object
                        tlsSidecarContainer:
                          description: Template for the Entity Operator TLS sidecar container.
                          properties:
                            env:
                              description: Environment variables which should be applied to the container.
                              items:
                                oneOf:
                                  - properties:
                                      value: {}
                                    required:
                                      - value
                                  - properties:
                                      valueFrom: {}
                                    required:
                                      - valueFrom
                                properties:
                                  name:
                                    description: The environment variable key.
                                    type: string
                                  value:
                                    description: The environment variable value.
                                    type: string
                                  valueFrom:
                                    description: Reference to the secret or config map property to which the environment variable is set.
                                    oneOf:
                                      - properties:
                                          secretKeyRef: {}
                                        required:
                                          - secretKeyRef
                                      - properties:
                                          configMapKeyRef: {}
                                        required:
                                          - configMapKeyRef
                                    properties:
                                      configMapKeyRef:
                                        description: Reference to a key in a config map.
                                        properties:
                                          key:
                                            type: string
                                          name:
                                            type: string
                                          optional:
                                            type: boolean
                                        type: object
                                      secretKeyRef:
                                        description: Reference to a key in a secret.
                                        properties:
                                          key:
                                            type: string
                                          name:
                                            type: string
                                          optional:
                                            type: boolean
                                        type: object
                                    type: object
                                type: object
                              type: array
                            securityContext:
                              description: Security context for the container.
                              properties:
                                allowPrivilegeEscalation:
                                  type: boolean
                                appArmorProfile:
                                  properties:
                                    localhostProfile:
                                      type: string
                                    type:
                                      type: string
                                  type: object
                                capabilities:
                                  properties:
                                    add:
                                      items:
                                        type: string
                                      type: array
                                    drop:
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                privileged:
                                  type: boolean
                                procMount:
                                  type: string
                                readOnlyRootFilesystem:
                                  type: boolean
                                runAsGroup:
                                  type: integer
                                runAsNonRoot:
                                  type: boolean
                                runAsUser:
                                  type: integer
                                seLinuxOptions:
                                  properties:
                                    level:
                                      type: string
                                    role:
                                      type: string
                                    type:
                                      type: string
                                    user:
                                      type: string
                                  type: object
                                seccompProfile:
                                  properties:
                                    localhostProfile:
                                      type: string
                                    type:
                                      type: string
                                  type: object
                                windowsOptions:
                                  properties:
                                    gmsaCredentialSpec:
                                      type: string
                                    gmsaCredentialSpecName:
                                      type: string
                                    hostProcess:
                                      type: boolean
                                    runAsUserName:
                                      type: string
                                  type: object
                              type: object
                            volumeMounts:
                              description: Additional volume mounts which should be applied to the container.
                              items:
                                properties:
                                  mountPath:
                                    type: string
                                  mountPropagation:
                                    type: string
                                  name:
                                    type: string
                                  readOnly:
                                    type: boolean
                                  recursiveReadOnly:
                                    type: string
                                  subPath:
                                    type: string
                                  subPathExpr:
                                    type: string
                                type: object
                              type: array
                          type: object
                        topicOperatorContainer:
                          description: Template for the Entity Topic Operator container.
                          properties:
                            env:
                              description: Environment variables which should be applied to the container.
                              items:
                                oneOf:
                                  - properties:
                                      value: {}
                                    required:
                                      - value
                                  - properties:
                                      valueFrom: {}
                                    required:
                                      - valueFrom
                                properties:
                                  name:
                                    description: The environment variable key.
                                    type: string
                                  value:
                                    description: The environment variable value.
                                    type: string
                                  valueFrom:
                                    description: Reference to the secret or config map property to which the environment variable is set.
                                    oneOf:
                                      - properties:
                                          secretKeyRef: {}
                                        required:
                                          - secretKeyRef
                                      - properties:
                                          configMapKeyRef: {}
                                        required:
                                          - configMapKeyRef
                                    properties:
                                      configMapKeyRef:
                                        description: Reference to a key in a config map.
                                        properties:
                                          key:
                                            type: string
                                          name:
                                            type: string
                                          optional:
                                            type: boolean
                                        type: object
                                      secretKeyRef:
                                        description: Reference to a key in a secret.
                                        properties:
                                          key:
                                            type: string
                                          name:
                                            type: string
                                          optional:
                                            type: boolean
                                        type: object
                                    type: object
                                type: object
                              type: array
                            securityContext:
                              description: Security context for the container.
                              properties:
                                allowPrivilegeEscalation:
                                  type: boolean
                                appArmorProfile:
                                  properties:
                                    localhostProfile:
                                      type: string
                                    type:
                                      type: string
                                  type: object
                                capabilities:
                                  properties:
                                    add:
                                      items:
                                        type: string
                                      type: array
                                    drop:
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                privileged:
                                  type: boolean
                                procMount:
                                  type: string
                                readOnlyRootFilesystem:
                                  type: boolean
                                runAsGroup:
                                  type: integer
                                runAsNonRoot:
                                  type: boolean
                                runAsUser:
                                  type: integer
                                seLinuxOptions:
                                  properties:
                                    level:
                                      type: string
                                    role:
                                      type: string
                                    type:
                                      type: string
                                    user:
                                      type: string
                                  type: object
                                seccompProfile:
                                  properties:
                                    localhostProfile:
                                      type: string
                                    type:
                                      type: string
                                  type: object
                                windowsOptions:
                                  properties:
                                    gmsaCredentialSpec:
                                      type: string
                                    gmsaCredentialSpecName:
                                      type: string
                                    hostProcess:
                                      type: boolean
                                    runAsUserName:
                                      type: string
                                  type: object
                              type: object
                            volumeMounts:
                              description: Additional volume mounts which should be applied to the container.
                              items:
                                properties:
                                  mountPath:
                                    type: string
                                  mountPropagation:
                                    type: string
                                  name:
                                    type: string
                                  readOnly:
                                    type: boolean
                                  recursiveReadOnly:
                                    type: string
                                  subPath:
                                    type: string
                                  subPathExpr:
                                    type: string
                                type: object
                              type: array
                          type: object
                        topicOperatorRoleBinding:
                          description: Template for the Entity Topic Operator RoleBinding.
                          properties:
                            metadata:
                              description: Metadata applied to the resource.
                              properties:
                                annotations:
                                  additionalProperties:
                                    type: string
                                  description: Annotations added to the Kubernetes resource.
                                  type: object
                                labels:
                                  additionalProperties:
                                    type: string
                                  description: Labels added to the Kubernetes resource.
                                  type: object
                              type: object
                          type: object
                        userOperatorContainer:
                          description: Template for the Entity User Operator container.
                          properties:
                            env:
                              description: Environment variables which should be applied to the container.
                              items:
                                oneOf:
                                  - properties:
                                      value: {}
                                    required:
                                      - value
                                  - properties:
                                      valueFrom: {}
                                    required:
                                      - valueFrom
                                properties:
                                  name:
                                    description: The environment variable key.
                                    type: string
                                  value:
                                    description: The environment variable value.
                                    type: string
                                  valueFrom:
                                    description: Reference to the secret or config map property to which the environment variable is set.
                                    oneOf:
                                      - properties:
                                          secretKeyRef: {}
                                        required:
                                          - secretKeyRef
                                      - properties:
                                          configMapKeyRef: {}
                                        required:
                                          - configMapKeyRef
                                    properties:
                                      configMapKeyRef:
                                        description: Reference to a key in a config map.
                                        properties:
                                          key:
                                            type: string
                                          name:
                                            type: string
                                          optional:
                                            type: boolean
                                        type: object
                                      secretKeyRef:
                                        description: Reference to a key in a secret.
                                        properties:
                                          key:
                                            type: string
                                          name:
                                            type: string
                                          optional:
                                            type: boolean
                                        type: object
                                    type: object
                                type: object
                              type: array
                            securityContext:
                              description: Security context for the container.
                              properties:
                                allowPrivilegeEscalation:
                                  type: boolean
                                appArmorProfile:
                                  properties:
                                    localhostProfile:
                                      type: string
                                    type:
                                      type: string
                                  type: object
                                capabilities:
                                  properties:
                                    add:
                                      items:
                                        type: string
                                      type: array
                                    drop:
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                privileged:
                                  type: boolean
                                procMount:
                                  type: string
                                readOnlyRootFilesystem:
                                  type: boolean
                                runAsGroup:
                                  type: integer
                                runAsNonRoot:
                                  type: boolean
                                runAsUser:
                                  type: integer
                                seLinuxOptions:
                                  properties:
                                    level:
                                      type: string
                                    role:
                                      type: string
                                    type:
                                      type: string
                                    user:
                                      type: string
                                  type: object
                                seccompProfile:
                                  properties:
                                    localhostProfile:
                                      type: string
                                    type:
                                      type: string
                                  type: object
                                windowsOptions:
                                  properties:
                                    gmsaCredentialSpec:
                                      type: string
                                    gmsaCredentialSpecName:
                                      type: string
                                    hostProcess:
                                      type: boolean
                                    runAsUserName:
                                      type: string
                                  type: object
                              type: object
                            volumeMounts:
                              description: Additional volume mounts which should be applied to the container.
                              items:
                                properties:
                                  mountPath:
                                    type: string
                                  mountPropagation:
                                    type: string
                                  name:
                                    type: string
                                  readOnly:
                                    type: boolean
                                  recursiveReadOnly:
                                    type: string
                                  subPath:
                                    type: string
                                  subPathExpr:
                                    type: string
                                type: object
                              type: array
                          type: object
                        userOperatorRoleBinding:
                          description: Template for the Entity Topic Operator RoleBinding.
                          properties:
                            metadata:
                              description: Metadata applied to the resource.
                              properties:
                                annotations:
                                  additionalProperties:
                                    type: string
                                  description: Annotations added to the Kubernetes resource.
                                  type: object
                                labels:
                                  additionalProperties:
                                    type: string
                                  description: Labels added to the Kubernetes resource.
                                  type: object
                              type: object
                          type: object
                      type: object
                    tlsSidecar:
                      description: TLS sidecar configuration.
                      properties:
                        image:
                          description: The docker image for the container.
                          type: string
                        livenessProbe:
                          description: Pod liveness checking.
                          properties:
                            failureThreshold:
                              description: Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
                              minimum: 1
                              type: integer
                            initialDelaySeconds:
                              description: The initial delay before first the health is first checked. Default to 15 seconds. Minimum value is 0.
                              minimum: 0
                              type: integer
                            periodSeconds:
                              description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
                              minimum: 1
                              type: integer
                            successThreshold:
                              description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
                              minimum: 1
                              type: integer
                            timeoutSeconds:
                              description: The timeout for each attempted health check. Default to 5 seconds. Minimum value is 1.
                              minimum: 1
                              type: integer
                          type: object
                        logLevel:
                          description: The log level for the TLS sidecar. Default value is `notice`.
                          enum:
                            - emerg
                            - alert
                            - crit
                            - err
                            - warning
                            - notice
                            - info
                            - debug
                          type: string
                        readinessProbe:
                          description: Pod readiness checking.
                          properties:
                            failureThreshold:
                              description: Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
                              minimum: 1
                              type: integer
                            initialDelaySeconds:
                              description: The initial delay before first the health is first checked. Default to 15 seconds. Minimum value is 0.
                              minimum: 0
                              type: integer
                            periodSeconds:
                              description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
                              minimum: 1
                              type: integer
                            successThreshold:
                              description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
                              minimum: 1
                              type: integer
                            timeoutSeconds:
                              description: The timeout for each attempted health check. Default to 5 seconds. Minimum value is 1.
                              minimum: 1
                              type: integer
                          type: object
                        resources:
                          description: CPU and memory resources to reserve.
                          properties:
                            claims:
                              items:
                                properties:
                                  name:
                                    type: string
                                type: object
                              type: array
                            limits:
                              additionalProperties:
                                anyOf:
                                  - type: integer
                                  - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              type: object
                            requests:
                              additionalProperties:
                                anyOf:
                                  - type: integer
                                  - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              type: object
                          type: object
                      type: object
                    topicOperator:
                      description: Configuration of the Topic Operator.
                      properties:
                        image:
                          description: The image to use for the Topic Operator.
                          type: string
                        jvmOptions:
                          description: JVM Options for pods.
                          properties:
                            -XX:
                              additionalProperties:
                                type: string
                              description: A map of -XX options to the JVM.
                              type: object
                            -Xms:
                              description: -Xms option to to the JVM.
                              pattern: ^[0-9]+[mMgG]?$
                              type: string
                            -Xmx:
                              description: -Xmx option to to the JVM.
                              pattern: ^[0-9]+[mMgG]?$
                              type: string
                            gcLoggingEnabled:
                              description: Specifies whether the Garbage Collection logging is enabled. The default is false.
                              type: boolean
                            javaSystemProperties:
                              description: A map of additional system properties which will be passed using the `-D` option to the JVM.
                              items:
                                properties:
                                  name:
                                    description: The system property name.
                                    type: string
                                  value:
                                    description: The system property value.
                                    type: string
                                type: object
                              type: array
                          type: object
                        livenessProbe:
                          description: Pod liveness checking.
                          properties:
                            failureThreshold:
                              description: Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
                              minimum: 1
                              type: integer
                            initialDelaySeconds:
                              description: The initial delay before first the health is first checked. Default to 15 seconds. Minimum value is 0.
                              minimum: 0
                              type: integer
                            periodSeconds:
                              description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
                              minimum: 1
                              type: integer
                            successThreshold:
                              description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
                              minimum: 1
                              type: integer
                            timeoutSeconds:
                              description: The timeout for each attempted health check. Default to 5 seconds. Minimum value is 1.
                              minimum: 1
                              type: integer
                          type: object
                        logging:
                          description: Logging configuration.
                          properties:
                            loggers:
                              additionalProperties:
                                type: string
                              description: A Map from logger name to logger level.
                              type: object
                            type:
                              description: Logging type, must be either 'inline' or 'external'.
                              enum:
                                - inline
                                - external
                              type: string
                            valueFrom:
                              description: '`ConfigMap` entry where the logging configuration is stored. '
                              properties:
                                configMapKeyRef:
                                  description: Reference to the key in the ConfigMap containing the configuration.
                                  properties:
                                    key:
                                      type: string
                                    name:
                                      type: string
                                    optional:
                                      type: boolean
                                  type: object
                              type: object
                          required:
                            - type
                          type: object
                        readinessProbe:
                          description: Pod readiness checking.
                          properties:
                            failureThreshold:
                              description: Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
                              minimum: 1
                              type: integer
                            initialDelaySeconds:
                              description: The initial delay before first the health is first checked. Default to 15 seconds. Minimum value is 0.
                              minimum: 0
                              type: integer
                            periodSeconds:
                              description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
                              minimum: 1
                              type: integer
                            successThreshold:
                              description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
                              minimum: 1
                              type: integer
                            timeoutSeconds:
                              description: The timeout for each attempted health check. Default to 5 seconds. Minimum value is 1.
                              minimum: 1
                              type: integer
                          type: object
                        reconciliationIntervalMs:
                          description: Interval between periodic reconciliations in milliseconds.
                          minimum: 0
                          type: integer
                        reconciliationIntervalSeconds:
                          description: Interval between periodic reconciliations in seconds. Ignored if reconciliationIntervalMs is set.
                          minimum: 0
                          type: integer
                        resources:
                          description: CPU and memory resources to reserve.
                          properties:
                            claims:
                              items:
                                properties:
                                  name:
                                    type: string
                                type: object
                              type: array
                            limits:
                              additionalProperties:
                                anyOf:
                                  - type: integer
                                  - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              type: object
                            requests:
                              additionalProperties:
                                anyOf:
                                  - type: integer
                                  - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              type: object
                          type: object
                        startupProbe:
                          description: Pod startup checking.
                          properties:
                            failureThreshold:
                              description: Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
                              minimum: 1
                              type: integer
                            initialDelaySeconds:
                              description: The initial delay before first the health is first checked. Default to 15 seconds. Minimum value is 0.
                              minimum: 0
                              type: integer
                            periodSeconds:
                              description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
                              minimum: 1
                              type: integer
                            successThreshold:
                              description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
                              minimum: 1
                              type: integer
                            timeoutSeconds:
                              description: The timeout for each attempted health check. Default to 5 seconds. Minimum value is 1.
                              minimum: 1
                              type: integer
                          type: object
                        topicMetadataMaxAttempts:
                          description: The number of attempts at getting topic metadata.
                          minimum: 0
                          type: integer
                        watchedNamespace:
                          description: The namespace the Topic Operator should watch.
                          type: string
                        zookeeperSessionTimeoutSeconds:
                          description: Timeout for the ZooKeeper session.
                          minimum: 0
                          type: integer
                      type: object
                    userOperator:
                      description: Configuration of the User Operator.
                      properties:
                        image:
                          description: The image to use for the User Operator.
                          type: string
                        jvmOptions:
                          description: JVM Options for pods.
                          properties:
                            -XX:
                              additionalProperties:
                                type: string
                              description: A map of -XX options to the JVM.
                              type: object
                            -Xms:
                              description: -Xms option to to the JVM.
                              pattern: ^[0-9]+[mMgG]?$
                              type: string
                            -Xmx:
                              description: -Xmx option to to the JVM.
                              pattern: ^[0-9]+[mMgG]?$
                              type: string
                            gcLoggingEnabled:
                              description: Specifies whether the Garbage Collection logging is enabled. The default is false.
                              type: boolean
                            javaSystemProperties:
                              description: A map of additional system properties which will be passed using the `-D` option to the JVM.
                              items:
                                properties:
                                  name:
                                    description: The system property name.
                                    type: string
                                  value:
                                    description: The system property value.
                                    type: string
                                type: object
                              type: array
                          type: object
                        livenessProbe:
                          description: Pod liveness checking.
                          properties:
                            failureThreshold:
                              description: Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
                              minimum: 1
                              type: integer
                            initialDelaySeconds:
                              description: The initial delay before first the health is first checked. Default to 15 seconds. Minimum value is 0.
                              minimum: 0
                              type: integer
                            periodSeconds:
                              description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
                              minimum: 1
                              type: integer
                            successThreshold:
                              description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
                              minimum: 1
                              type: integer
                            timeoutSeconds:
                              description: The timeout for each attempted health check. Default to 5 seconds. Minimum value is 1.
                              minimum: 1
                              type: integer
                          type: object
                        logging:
                          description: Logging configuration.
                          properties:
                            loggers:
                              additionalProperties:
                                type: string
                              description: A Map from logger name to logger level.
                              type: object
                            type:
                              description: Logging type, must be either 'inline' or 'external'.
                              enum:
                                - inline
                                - external
                              type: string
                            valueFrom:
                              description: '`ConfigMap` entry where the logging configuration is stored. '
                              properties:
                                configMapKeyRef:
                                  description: Reference to the key in the ConfigMap containing the configuration.
                                  properties:
                                    key:
                                      type: string
                                    name:
                                      type: string
                                    optional:
                                      type: boolean
                                  type: object
                              type: object
                          required:
                            - type
                          type: object
                        readinessProbe:
                          description: Pod readiness checking.
                          properties:
                            failureThreshold:
                              description: Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
                              minimum: 1
                              type: integer
                            initialDelaySeconds:
                              description: The initial delay before first the health is first checked. Default to 15 seconds. Minimum value is 0.
                              minimum: 0
                              type: integer
                            periodSeconds:
                              description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
                              minimum: 1
                              type: integer
                            successThreshold:
                              description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
                              minimum: 1
                              type: integer
                            timeoutSeconds:
                              description: The timeout for each attempted health check. Default to 5 seconds. Minimum value is 1.
                              minimum: 1
                              type: integer
                          type: object
                        reconciliationIntervalMs:
                          description: Interval between periodic reconciliations in milliseconds.
                          minimum: 0
                          type: integer
                        reconciliationIntervalSeconds:
                          description: Interval between periodic reconciliations in seconds. Ignored if reconciliationIntervalMs is set.
                          minimum: 0
                          type: integer
                        resources:
                          description: CPU and memory resources to reserve.
                          properties:
                            claims:
                              items:
                                properties:
                                  name:
                                    type: string
                                type: object
                              type: array
                            limits:
                              additionalProperties:
                                anyOf:
                                  - type: integer
                                  - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              type: object
                            requests:
                              additionalProperties:
                                anyOf:
                                  - type: integer
                                  - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              type: object
                          type: object
                        secretPrefix:
                          description: The prefix that will be added to the KafkaUser name to be used as the Secret name.
                          type: string
                        watchedNamespace:
                          description: The namespace the User Operator should watch.
                          type: string
                        zookeeperSessionTimeoutSeconds:
                          description: Timeout for the ZooKeeper session.
                          minimum: 0
                          type: integer
                      type: object
                  type: object
                jmxTrans:
                  description: As of Strimzi 0.35.0, JMXTrans is not supported anymore and this option is ignored.
                  properties:
                    image:
                      description: The image to use for the JmxTrans.
                      type: string
                    kafkaQueries:
                      description: Queries to send to the Kafka brokers to define what data should be read from each broker. For more information on these properties see, xref:type-JmxTransQueryTemplate-reference[`JmxTransQueryTemplate` schema reference].
                      items:
                        properties:
                          attributes:
                            description: Determine which attributes of the targeted MBean should be included.
                            items:
                              type: string
                            type: array
                          outputs:
                            description: List of the names of output definitions specified in the spec.kafka.jmxTrans.outputDefinitions that have defined where JMX metrics are pushed to, and in which data format.
                            items:
                              type: string
                            type: array
                          targetMBean:
                            description: If using wildcards instead of a specific MBean then the data is gathered from multiple MBeans. Otherwise if specifying an MBean then data is gathered from that specified MBean.
                            type: string
                        required:
                          - targetMBean
                          - attributes
                          - outputs
                        type: object
                      type: array
                    logLevel:
                      description: Sets the logging level of the JmxTrans deployment.For more information see, https://github.com/jmxtrans/jmxtrans-agent/wiki/Troubleshooting[JmxTrans Logging Level].
                      type: string
                    outputDefinitions:
                      description: Defines the output hosts that will be referenced later on. For more information on these properties see, xref:type-JmxTransOutputDefinitionTemplate-reference[`JmxTransOutputDefinitionTemplate` schema reference].
                      items:
                        properties:
                          flushDelayInSeconds:
                            description: How many seconds the JmxTrans waits before pushing a new set of data out.
                            type: integer
                          host:
                            description: The DNS/hostname of the remote host that the data is pushed to.
                            type: string
                          name:
                            description: Template for setting the name of the output definition. This is used to identify where to send the results of queries should be sent.
                            type: string
                          outputType:
                            description: Template for setting the format of the data that will be pushed.For more information see https://github.com/jmxtrans/jmxtrans/wiki/OutputWriters[JmxTrans OutputWriters].
                            type: string
                          port:
                            description: The port of the remote host that the data is pushed to.
                            type: integer
                          typeNames:
                            description: Template for filtering data to be included in response to a wildcard query. For more information see https://github.com/jmxtrans/jmxtrans/wiki/Queries[JmxTrans queries].
                            items:
                              type: string
                            type: array
                        required:
                          - outputType
                          - name
                        type: object
                      type: array
                    resources:
                      description: CPU and memory resources to reserve.
                      properties:
                        claims:
                          items:
                            properties:
                              name:
                                type: string
                            type: object
                          type: array
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          type: object
                      type: object
                    template:
                      description: Template for JmxTrans resources.
                      properties:
                        container:
                          description: Template for JmxTrans container.
                          properties:
                            env:
                              description: Environment variables which should be applied to the container.
                              items:
                                oneOf:
                                  - properties:
                                      value: {}
                                    required:
                                      - value
                                  - properties:
                                      valueFrom: {}
                                    required:
                                      - valueFrom
                                properties:
                                  name:
                                    description: The environment variable key.
                                    type: string
                                  value:
                                    description: The environment variable value.
                                    type: string
                                  valueFrom:
                                    description: Reference to the secret or config map property to which the environment variable is set.
                                    oneOf:
                                      - properties:
                                          secretKeyRef: {}
                                        required:
                                          - secretKeyRef
                                      - properties:
                                          configMapKeyRef: {}
                                        required:
                                          - configMapKeyRef
                                    properties:
                                      configMapKeyRef:
                                        description: Reference to a key in a config map.
                                        properties:
                                          key:
                                            type: string
                                          name:
                                            type: string
                                          optional:
                                            type: boolean
                                        type: object
                                      secretKeyRef:
                                        description: Reference to a key in a secret.
                                        properties:
                                          key:
                                            type: string
                                          name:
                                            type: string
                                          optional:
                                            type: boolean
                                        type: object
                                    type: object
                                type: object
                              type: array
                            securityContext:
                              description: Security context for the container.
                              properties:
                                allowPrivilegeEscalation:
                                  type: boolean
                                appArmorProfile:
                                  properties:
                                    localhostProfile:
                                      type: string
                                    type:
                                      type: string
                                  type: object
                                capabilities:
                                  properties:
                                    add:
                                      items:
                                        type: string
                                      type: array
                                    drop:
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                privileged:
                                  type: boolean
                                procMount:
                                  type: string
                                readOnlyRootFilesystem:
                                  type: boolean
                                runAsGroup:
                                  type: integer
                                runAsNonRoot:
                                  type: boolean
                                runAsUser:
                                  type: integer
                                seLinuxOptions:
                                  properties:
                                    level:
                                      type: string
                                    role:
                                      type: string
                                    type:
                                      type: string
                                    user:
                                      type: string
                                  type: object
                                seccompProfile:
                                  properties:
                                    localhostProfile:
                                      type: string
                                    type:
                                      type: string
                                  type: object
                                windowsOptions:
                                  properties:
                                    gmsaCredentialSpec:
                                      type: string
                                    gmsaCredentialSpecName:
                                      type: string
                                    hostProcess:
                                      type: boolean
                                    runAsUserName:
                                      type: string
                                  type: object
                              type: object
                            volumeMounts:
                              description: Additional volume mounts which should be applied to the container.
                              items:
                                properties:
                                  mountPath:
                                    type: string
                                  mountPropagation:
                                    type: string
                                  name:
                                    type: string
                                  readOnly:
                                    type: boolean
                                  recursiveReadOnly:
                                    type: string
                                  subPath:
                                    type: string
                                  subPathExpr:
                                    type: string
                                type: object
                              type: array
                          type: object
                        deployment:
                          description: Template for JmxTrans `Deployment`.
                          properties:
                            deploymentStrategy:
                              description: Pod replacement strategy for deployment configuration changes. Valid values are `RollingUpdate` and `Recreate`. Defaults to `RollingUpdate`.
                              enum:
                                - RollingUpdate
                                - Recreate
                              type: string
                            metadata:
                              description: Metadata applied to the resource.
                              properties:
                                annotations:
                                  additionalProperties:
                                    type: string
                                  description: Annotations added to the Kubernetes resource.
                                  type: object
                                labels:
                                  additionalProperties:
                                    type: string
                                  description: Labels added to the Kubernetes resource.
                                  type: object
                              type: object
                          type: object
                        pod:
                          description: Template for JmxTrans `Pods`.
                          properties:
                            affinity:
                              description: The pod's affinity rules.
                              properties:
                                nodeAffinity:
                                  properties:
                                    preferredDuringSchedulingIgnoredDuringExecution:
                                      items:
                                        properties:
                                          preference:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchFields:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                            type: object
                                          weight:
                                            type: integer
                                        type: object
                                      type: array
                                    requiredDuringSchedulingIgnoredDuringExecution:
                                      properties:
                                        nodeSelectorTerms:
                                          items:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchFields:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                            type: object
                                          type: array
                                      type: object
                                  type: object
                                podAffinity:
                                  properties:
                                    preferredDuringSchedulingIgnoredDuringExecution:
                                      items:
                                        properties:
                                          podAffinityTerm:
                                            properties:
                                              labelSelector:
                                                properties:
                                                  matchExpressions:
                                                    items:
                                                      properties:
                                                        key:
                                                          type: string
                                                        operator:
                                                          type: string
                                                        values:
                                                          items:
                                                            type: string
                                                          type: array
                                                      type: object
                                                    type: array
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: string
                                                    type: object
                                                type: object
                                              matchLabelKeys:
                                                items:
                                                  type: string
                                                type: array
                                              mismatchLabelKeys:
                                                items:
                                                  type: string
                                                type: array
                                              namespaceSelector:
                                                properties:
                                                  matchExpressions:
                                                    items:
                                                      properties:
                                                        key:
                                                          type: string
                                                        operator:
                                                          type: string
                                                        values:
                                                          items:
                                                            type: string
                                                          type: array
                                                      type: object
                                                    type: array
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: string
                                                    type: object
                                                type: object
                                              namespaces:
                                                items:
                                                  type: string
                                                type: array
                                              topologyKey:
                                                type: string
                                            type: object
                                          weight:
                                            type: integer
                                        type: object
                                      type: array
                                    requiredDuringSchedulingIgnoredDuringExecution:
                                      items:
                                        properties:
                                          labelSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels:
                                                additionalProperties:
                                                  type: string
                                                type: object
                                            type: object
                                          matchLabelKeys:
                                            items:
                                              type: string
                                            type: array
                                          mismatchLabelKeys:
                                            items:
                                              type: string
                                            type: array
                                          namespaceSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels:
                                                additionalProperties:
                                                  type: string
                                                type: object
                                            type: object
                                          namespaces:
                                            items:
                                              type: string
                                            type: array
                                          topologyKey:
                                            type: string
                                        type: object
                                      type: array
                                  type: object
                                podAntiAffinity:
                                  properties:
                                    preferredDuringSchedulingIgnoredDuringExecution:
                                      items:
                                        properties:
                                          podAffinityTerm:
                                            properties:
                                              labelSelector:
                                                properties:
                                                  matchExpressions:
                                                    items:
                                                      properties:
                                                        key:
                                                          type: string
                                                        operator:
                                                          type: string
                                                        values:
                                                          items:
                                                            type: string
                                                          type: array
                                                      type: object
                                                    type: array
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: string
                                                    type: object
                                                type: object
                                              matchLabelKeys:
                                                items:
                                                  type: string
                                                type: array
                                              mismatchLabelKeys:
                                                items:
                                                  type: string
                                                type: array
                                              namespaceSelector:
                                                properties:
                                                  matchExpressions:
                                                    items:
                                                      properties:
                                                        key:
                                                          type: string
                                                        operator:
                                                          type: string
                                                        values:
                                                          items:
                                                            type: string
                                                          type: array
                                                      type: object
                                                    type: array
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: string
                                                    type: object
                                                type: object
                                              namespaces:
                                                items:
                                                  type: string
                                                type: array
                                              topologyKey:
                                                type: string
                                            type: object
                                          weight:
                                            type: integer
                                        type: object
                                      type: array
                                    requiredDuringSchedulingIgnoredDuringExecution:
                                      items:
                                        properties:
                                          labelSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels:
                                                additionalProperties:
                                                  type: string
                                                type: object
                                            type: object
                                          matchLabelKeys:
                                            items:
                                              type: string
                                            type: array
                                          mismatchLabelKeys:
                                            items:
                                              type: string
                                            type: array
                                          namespaceSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels:
                                                additionalProperties:
                                                  type: string
                                                type: object
                                            type: object
                                          namespaces:
                                            items:
                                              type: string
                                            type: array
                                          topologyKey:
                                            type: string
                                        type: object
                                      type: array
                                  type: object
                              type: object
                            enableServiceLinks:
                              description: Indicates whether information about services should be injected into Pod's environment variables.
                              type: boolean
                            hostAliases:
                              description: The pod's HostAliases. HostAliases is an optional list of hosts and IPs that will be injected into the Pod's hosts file if specified.
                              items:
                                properties:
                                  hostnames:
                                    items:
                                      type: string
                                    type: array
                                  ip:
                                    type: string
                                type: object
                              type: array
                            imagePullSecrets:
                              description: List of references to secrets in the same namespace to use for pulling any of the images used by this Pod. When the `STRIMZI_IMAGE_PULL_SECRETS` environment variable in Cluster Operator and the `imagePullSecrets` option are specified, only the `imagePullSecrets` variable is used and the `STRIMZI_IMAGE_PULL_SECRETS` variable is ignored.
                              items:
                                properties:
                                  name:
                                    type: string
                                type: object
                              type: array
                            metadata:
                              description: Metadata applied to the resource.
                              properties:
                                annotations:
                                  additionalProperties:
                                    type: string
                                  description: Annotations added to the Kubernetes resource.
                                  type: object
                                labels:
                                  additionalProperties:
                                    type: string
                                  description: Labels added to the Kubernetes resource.
                                  type: object
                              type: object
                            priorityClassName:
                              description: 'The name of the priority class used to assign priority to the pods. '
                              type: string
                            schedulerName:
                              description: The name of the scheduler used to dispatch this `Pod`. If not specified, the default scheduler will be used.
                              type: string
                            securityContext:
                              description: Configures pod-level security attributes and common container settings.
                              properties:
                                appArmorProfile:
                                  properties:
                                    localhostProfile:
                                      type: string
                                    type:
                                      type: string
                                  type: object
                                fsGroup:
                                  type: integer
                                fsGroupChangePolicy:
                                  type: string
                                runAsGroup:
                                  type: integer
                                runAsNonRoot:
                                  type: boolean
                                runAsUser:
                                  type: integer
                                seLinuxOptions:
                                  properties:
                                    level:
                                      type: string
                                    role:
                                      type: string
                                    type:
                                      type: string
                                    user:
                                      type: string
                                  type: object
                                seccompProfile:
                                  properties:
                                    localhostProfile:
                                      type: string
                                    type:
                                      type: string
                                  type: object
                                supplementalGroups:
                                  items:
                                    type: integer
                                  type: array
                                sysctls:
                                  items:
                                    properties:
                                      name:
                                        type: string
                                      value:
                                        type: string
                                    type: object
                                  type: array
                                windowsOptions:
                                  properties:
                                    gmsaCredentialSpec:
                                      type: string
                                    gmsaCredentialSpecName:
                                      type: string
                                    hostProcess:
                                      type: boolean
                                    runAsUserName:
                                      type: string
                                  type: object
                              type: object
                            terminationGracePeriodSeconds:
                              description: The grace period is the duration in seconds after the processes running in the pod are sent a termination signal, and the time when the processes are forcibly halted with a kill signal. Set this value to longer than the expected cleanup time for your process. Value must be a non-negative integer. A zero value indicates delete immediately. You might need to increase the grace period for very large Kafka clusters, so that the Kafka brokers have enough time to transfer their work to another broker before they are terminated. Defaults to 30 seconds.
                              minimum: 0
                              type: integer
                            tmpDirSizeLimit:
                              description: Defines the total amount of pod memory allocated for the temporary `EmptyDir` volume `/tmp`. Specify the allocation in memory units, for example, `100Mi` for 100 mebibytes. Default value is `5Mi`. The `/tmp` volume is backed by pod memory, not disk storage, so avoid setting a high value as it consumes pod memory resources.
                              pattern: ^([0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$
                              type: string
                            tolerations:
                              description: The pod's tolerations.
                              items:
                                properties:
                                  effect:
                                    type: string
                                  key:
                                    type: string
                                  operator:
                                    type: string
                                  tolerationSeconds:
                                    type: integer
                                  value:
                                    type: string
                                type: object
                              type: array
                            topologySpreadConstraints:
                              description: The pod's topology spread constraints.
                              items:
                                properties:
                                  labelSelector:
                                    properties:
                                      matchExpressions:
                                        items:
                                          properties:
                                            key:
                                              type: string
                                            operator:
                                              type: string
                                            values:
                                              items:
                                                type: string
                                              type: array
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        type: object
                                    type: object
                                  matchLabelKeys:
                                    items:
                                      type: string
                                    type: array
                                  maxSkew:
                                    type: integer
                                  minDomains:
                                    type: integer
                                  nodeAffinityPolicy:
                                    type: string
                                  nodeTaintsPolicy:
                                    type: string
                                  topologyKey:
                                    type: string
                                  whenUnsatisfiable:
                                    type: string
                                type: object
                              type: array
                            volumes:
                              description: Additional volumes that can be mounted to the pod.
                              items:
                                oneOf:
                                  - properties:
                                      configMap: {}
                                      csi: {}
                                      emptyDir: {}
                                      persistentVolumeClaim: {}
                                      secret: {}
                                properties:
                                  configMap:
                                    description: ConfigMap to use to populate the volume.
                                    properties:
                                      defaultMode:
                                        type: integer
                                      items:
                                        items:
                                          properties:
                                            key:
                                              type: string
                                            mode:
                                              type: integer
                                            path:
                                              type: string
                                          type: object
                                        type: array
                                      name:
                                        type: string
                                      optional:
                                        type: boolean
                                    type: object
                                  csi:
                                    description: CSIVolumeSource object to use to populate the volume.
                                    properties:
                                      driver:
                                        type: string
                                      fsType:
                                        type: string
                                      nodePublishSecretRef:
                                        properties:
                                          name:
                                            type: string
                                        type: object
                                      readOnly:
                                        type: boolean
                                      volumeAttributes:
                                        additionalProperties:
                                          type: string
                                        type: object
                                    type: object
                                  emptyDir:
                                    description: EmptyDir to use to populate the volume.
                                    properties:
                                      medium:
                                        type: string
                                      sizeLimit:
                                        properties:
                                          amount:
                                            type: string
                                          format:
                                            type: string
                                        type: object
                                    type: object
                                  name:
                                    description: Name to use for the volume. Required.
                                    type: string
                                  persistentVolumeClaim:
                                    description: PersistentVolumeClaim object to use to populate the volume.
                                    properties:
                                      claimName:
                                        type: string
                                      readOnly:
                                        type: boolean
                                    type: object
                                  secret:
                                    description: Secret to use populate the volume.
                                    properties:
                                      defaultMode:
                                        type: integer
                                      items:
                                        items:
                                          properties:
                                            key:
                                              type: string
                                            mode:
                                              type: integer
                                            path:
                                              type: string
                                          type: object
                                        type: array
                                      optional:
                                        type: boolean
                                      secretName:
                                        type: string
                                    type: object
                                type: object
                              type: array
                          type: object
                        serviceAccount:
                          description: Template for the JmxTrans service account.
                          properties:
                            metadata:
                              description: Metadata applied to the resource.
                              properties:
                                annotations:
                                  additionalProperties:
                                    type: string
                                  description: Annotations added to the Kubernetes resource.
                                  type: object
                                labels:
                                  additionalProperties:
                                    type: string
                                  description: Labels added to the Kubernetes resource.
                                  type: object
                              type: object
                          type: object
                      type: object
                  required:
                    - outputDefinitions
                    - kafkaQueries
                  type: object
                kafka:
                  description: Configuration of the Kafka cluster.
                  properties:
                    authorization:
                      description: Authorization configuration for Kafka brokers.
                      properties:
                        allowOnError:
                          description: Defines whether a Kafka client should be allowed or denied by default when the authorizer fails to query the Open Policy Agent, for example, when it is temporarily unavailable). Defaults to `false` - all actions will be denied.
                          type: boolean
                        authorizerClass:
                          description: Authorization implementation class, which must be available in classpath.
                          type: string
                        clientId:
                          description: OAuth Client ID which the Kafka client can use to authenticate against the OAuth server and use the token endpoint URI.
                          type: string
                        connectTimeoutSeconds:
                          description: The connect timeout in seconds when connecting to authorization server. If not set, the effective connect timeout is 60 seconds.
                          minimum: 1
                          type: integer
                        delegateToKafkaAcls:
                          description: Whether authorization decision should be delegated to the 'Simple' authorizer if DENIED by Keycloak Authorization Services policies. Default value is `false`.
                          type: boolean
                        disableTlsHostnameVerification:
                          description: Enable or disable TLS hostname verification. Default value is `false`.
                          type: boolean
                        enableMetrics:
                          description: Enable or disable OAuth metrics. The default value is `false`.
                          type: boolean
                        expireAfterMs:
                          description: The expiration of the records kept in the local cache to avoid querying the Open Policy Agent for every request. Defines how often the cached authorization decisions are reloaded from the Open Policy Agent server. In milliseconds. Defaults to `3600000`.
                          type: integer
                        grantsAlwaysLatest:
                          description: Controls whether the latest grants are fetched for a new session. When enabled, grants are retrieved from Keycloak and cached for the user. The default value is `false`.
                          type: boolean
                        grantsGcPeriodSeconds:
                          description: The time, in seconds, between consecutive runs of a job that cleans stale grants from the cache. The default value is 300.
                          minimum: 1
                          type: integer
                        grantsMaxIdleTimeSeconds:
                          description: The time, in seconds, after which an idle grant can be evicted from the cache. The default value is 300.
                          minimum: 1
                          type: integer
                        grantsRefreshPeriodSeconds:
                          description: The time between two consecutive grants refresh runs in seconds. The default value is 60.
                          minimum: 0
                          type: integer
                        grantsRefreshPoolSize:
                          description: The number of threads to use to refresh grants for active sessions. The more threads, the more parallelism, so the sooner the job completes. However, using more threads places a heavier load on the authorization server. The default value is 5.
                          minimum: 1
                          type: integer
                        httpRetries:
                          description: The maximum number of retries to attempt if an initial HTTP request fails. If not set, the default is to not attempt any retries.
                          minimum: 0
                          type: integer
                        includeAcceptHeader:
                          description: Whether the Accept header should be set in requests to the authorization servers. The default value is `true`.
                          type: boolean
                        initialCacheCapacity:
                          description: Initial capacity of the local cache used by the authorizer to avoid querying the Open Policy Agent for every request Defaults to `5000`.
                          type: integer
                        maximumCacheSize:
                          description: Maximum capacity of the local cache used by the authorizer to avoid querying the Open Policy Agent for every request. Defaults to `50000`.
                          type: integer
                        readTimeoutSeconds:
                          description: The read timeout in seconds when connecting to authorization server. If not set, the effective read timeout is 60 seconds.
                          minimum: 1
                          type: integer
                        superUsers:
                          description: List of super users, which are user principals with unlimited access rights.
                          items:
                            type: string
                          type: array
                        supportsAdminApi:
                          description: Indicates whether the custom authorizer supports the APIs for managing ACLs using the Kafka Admin API. Defaults to `false`.
                          type: boolean
                        tlsTrustedCertificates:
                          description: Trusted certificates for TLS connection to the OAuth server.
                          items:
                            oneOf:
                              - properties:
                                  certificate: {}
                                required:
                                  - certificate
                              - properties:
                                  pattern: {}
                                required:
                                  - pattern
                            properties:
                              certificate:
                                description: The name of the file certificate in the secret.
                                type: string
                              pattern:
                                description: Pattern for the certificate files in the secret. Use the link:https://en.wikipedia.org/wiki/Glob_(programming)[_glob syntax_] for the pattern. All files in the secret that match the pattern are used.
                                type: string
                              secretName:
                                description: The name of the Secret containing the certificate.
                                type: string
                            required:
                              - secretName
                            type: object
                          type: array
                        tokenEndpointUri:
                          description: Authorization server token endpoint URI.
                          type: string
                        type:
                          description: Authorization type. Currently, the supported types are `simple`, `keycloak`, `opa` and `custom`. `simple` authorization type uses Kafka's built-in authorizer for authorization. `keycloak` authorization type uses Keycloak Authorization Services for authorization. `opa` authorization type uses Open Policy Agent based authorization.`custom` authorization type uses user-provided implementation for authorization.
                          enum:
                            - simple
                            - opa
                            - keycloak
                            - custom
                          type: string
                        url:
                          description: The URL used to connect to the Open Policy Agent server. The URL has to include the policy which will be queried by the authorizer. This option is required.
                          example: http://opa:8181/v1/data/kafka/authz/allow
                          type: string
                      required:
                        - type
                      type: object
                    brokerRackInitImage:
                      description: The image of the init container used for initializing the `broker.rack`.
                      type: string
                    config:
                      description: 'Kafka broker config properties with the following prefixes cannot be set: listeners, advertised., broker., listener., host.name, port, inter.broker.listener.name, sasl., ssl., security., password., log.dir, zookeeper.connect, zookeeper.set.acl, zookeeper.ssl, zookeeper.clientCnxnSocket, authorizer., super.user, cruise.control.metrics.topic, cruise.control.metrics.reporter.bootstrap.servers, node.id, process.roles, controller., metadata.log.dir, zookeeper.metadata.migration.enable, client.quota.callback.static.kafka.admin., client.quota.callback.static.produce, client.quota.callback.static.fetch, client.quota.callback.static.storage.per.volume.limit.min.available., client.quota.callback.static.excluded.principal.name.list (with the exception of: zookeeper.connection.timeout.ms, sasl.server.max.receive.size, ssl.cipher.suites, ssl.protocol, ssl.enabled.protocols, ssl.secure.random.implementation, cruise.control.metrics.topic.num.partitions, cruise.control.metrics.topic.replication.factor, cruise.control.metrics.topic.retention.ms, cruise.control.metrics.topic.auto.create.retries, cruise.control.metrics.topic.auto.create.timeout.ms, cruise.control.metrics.topic.min.insync.replicas, controller.quorum.election.backoff.max.ms, controller.quorum.election.timeout.ms, controller.quorum.fetch.timeout.ms).'
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    image:
                      description: 'The container image used for Kafka pods. If the property is not set, the default Kafka image version is determined based on the `version` configuration. The image names are specifically mapped to corresponding versions in the Cluster Operator configuration. Changing the Kafka image version does not automatically update the image versions for other components, such as Kafka Exporter. '
                      type: string
                    jmxOptions:
                      description: JMX Options for Kafka brokers.
                      properties:
                        authentication:
                          description: Authentication configuration for connecting to the JMX port.
                          properties:
                            type:
                              description: Authentication type. Currently the only supported types are `password`.`password` type creates a username and protected port with no TLS.
                              enum:
                                - password
                              type: string
                          required:
                            - type
                          type: object
                      type: object
                    jvmOptions:
                      description: JVM Options for pods.
                      properties:
                        -XX:
                          additionalProperties:
                            type: string
                          description: A map of -XX options to the JVM.
                          type: object
                        -Xms:
                          description: -Xms option to to the JVM.
                          pattern: ^[0-9]+[mMgG]?$
                          type: string
                        -Xmx:
                          description: -Xmx option to to the JVM.
                          pattern: ^[0-9]+[mMgG]?$
                          type: string
                        gcLoggingEnabled:
                          description: Specifies whether the Garbage Collection logging is enabled. The default is false.
                          type: boolean
                        javaSystemProperties:
                          description: A map of additional system properties which will be passed using the `-D` option to the JVM.
                          items:
                            properties:
                              name:
                                description: The system property name.
                                type: string
                              value:
                                description: The system property value.
                                type: string
                            type: object
                          type: array
                      type: object
                    listeners:
                      description: Configures listeners to provide access to Kafka brokers.
                      items:
                        properties:
                          authentication:
                            description: Authentication configuration for this listener.
                            properties:
                              accessTokenIsJwt:
                                description: Configure whether the access token is treated as JWT. This must be set to `false` if the authorization server returns opaque tokens. Defaults to `true`.
                                type: boolean
                              checkAccessTokenType:
                                description: Configure whether the access token type check is performed or not. This should be set to `false` if the authorization server does not include 'typ' claim in JWT token. Defaults to `true`.
                                type: boolean
                              checkAudience:
                                description: Enable or disable audience checking. Audience checks identify the recipients of tokens. If audience checking is enabled, the OAuth Client ID also has to be configured using the `clientId` property. The Kafka broker will reject tokens that do not have its `clientId` in their `aud` (audience) claim.Default value is `false`.
                                type: boolean
                              checkIssuer:
                                description: Enable or disable issuer checking. By default issuer is checked using the value configured by `validIssuerUri`. Default value is `true`.
                                type: boolean
                              clientAudience:
                                description: The audience to use when making requests to the authorization server's token endpoint. Used for inter-broker authentication and for configuring OAuth 2.0 over PLAIN using the `clientId` and `secret` method.
                                type: string
                              clientId:
                                description: OAuth Client ID which the Kafka broker can use to authenticate against the authorization server and use the introspect endpoint URI.
                                type: string
                              clientScope:
                                description: The scope to use when making requests to the authorization server's token endpoint. Used for inter-broker authentication and for configuring OAuth 2.0 over PLAIN using the `clientId` and `secret` method.
                                type: string
                              clientSecret:
                                description: Link to Kubernetes Secret containing the OAuth client secret which the Kafka broker can use to authenticate against the authorization server and use the introspect endpoint URI.
                                properties:
                                  key:
                                    description: The key under which the secret value is stored in the Kubernetes Secret.
                                    type: string
                                  secretName:
                                    description: The name of the Kubernetes Secret containing the secret value.
                                    type: string
                                required:
                                  - key
                                  - secretName
                                type: object
                              connectTimeoutSeconds:
                                description: The connect timeout in seconds when connecting to authorization server. If not set, the effective connect timeout is 60 seconds.
                                type: integer
                              customClaimCheck:
                                description: JsonPath filter query to be applied to the JWT token or to the response of the introspection endpoint for additional token validation. Not set by default.
                                type: string
                              disableTlsHostnameVerification:
                                description: Enable or disable TLS hostname verification. Default value is `false`.
                                type: boolean
                              enableECDSA:
                                description: Enable or disable ECDSA support by installing BouncyCastle crypto provider. ECDSA support is always enabled. The BouncyCastle libraries are no longer packaged with Strimzi. Value is ignored.
                                type: boolean
                              enableMetrics:
                                description: Enable or disable OAuth metrics. Default value is `false`.
                                type: boolean
                              enableOauthBearer:
                                description: Enable or disable OAuth authentication over SASL_OAUTHBEARER. Default value is `true`.
                                type: boolean
                              enablePlain:
                                description: Enable or disable OAuth authentication over SASL_PLAIN. There is no re-authentication support when this mechanism is used. Default value is `false`.
                                type: boolean
                              failFast:
                                description: Enable or disable termination of Kafka broker processes due to potentially recoverable runtime errors during startup. Default value is `true`.
                                type: boolean
                              fallbackUserNameClaim:
                                description: The fallback username claim to be used for the user ID if the claim specified by `userNameClaim` is not present. This is useful when `client_credentials` authentication only results in the client ID being provided in another claim. It only takes effect if `userNameClaim` is set.
                                type: string
                              fallbackUserNamePrefix:
                                description: The prefix to use with the value of `fallbackUserNameClaim` to construct the user id. This only takes effect if `fallbackUserNameClaim` is true, and the value is present for the claim. Mapping usernames and client ids into the same user id space is useful in preventing name collisions.
                                type: string
                              groupsClaim:
                                description: JsonPath query used to extract groups for the user during authentication. Extracted groups can be used by a custom authorizer. By default no groups are extracted.
                                type: string
                              groupsClaimDelimiter:
                                description: A delimiter used to parse groups when they are extracted as a single String value rather than a JSON array. Default value is ',' (comma).
                                type: string
                              httpRetries:
                                description: The maximum number of retries to attempt if an initial HTTP request fails. If not set, the default is to not attempt any retries.
                                type: integer
                              httpRetryPauseMs:
                                description: The pause to take before retrying a failed HTTP request. If not set, the default is to not pause at all but to immediately repeat a request.
                                type: integer
                              includeAcceptHeader:
                                description: Whether the Accept header should be set in requests to the authorization servers. The default value is `true`.
                                type: boolean
                              introspectionEndpointUri:
                                description: URI of the token introspection endpoint which can be used to validate opaque non-JWT tokens.
                                type: string
                              jwksEndpointUri:
                                description: URI of the JWKS certificate endpoint, which can be used for local JWT validation.
                                type: string
                              jwksExpirySeconds:
                                description: Configures how often are the JWKS certificates considered valid. The expiry interval has to be at least 60 seconds longer then the refresh interval specified in `jwksRefreshSeconds`. Defaults to 360 seconds.
                                minimum: 1
                                type: integer
                              jwksIgnoreKeyUse:
                                description: Flag to ignore the 'use' attribute of `key` declarations in a JWKS endpoint response. Default value is `false`.
                                type: boolean
                              jwksMinRefreshPauseSeconds:
                                description: The minimum pause between two consecutive refreshes. When an unknown signing key is encountered the refresh is scheduled immediately, but will always wait for this minimum pause. Defaults to 1 second.
                                minimum: 0
                                type: integer
                              jwksRefreshSeconds:
                                description: Configures how often are the JWKS certificates refreshed. The refresh interval has to be at least 60 seconds shorter then the expiry interval specified in `jwksExpirySeconds`. Defaults to 300 seconds.
                                minimum: 1
                                type: integer
                              listenerConfig:
                                description: Configuration to be used for a specific listener. All values are prefixed with `listener.name.<listener_name>`.
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              maxSecondsWithoutReauthentication:
                                description: Maximum number of seconds the authenticated session remains valid without re-authentication. This enables Apache Kafka re-authentication feature, and causes sessions to expire when the access token expires. If the access token expires before max time or if max time is reached, the client has to re-authenticate, otherwise the server will drop the connection. Not set by default - the authenticated session does not expire when the access token expires. This option only applies to SASL_OAUTHBEARER authentication mechanism (when `enableOauthBearer` is `true`).
                                type: integer
                              readTimeoutSeconds:
                                description: The read timeout in seconds when connecting to authorization server. If not set, the effective read timeout is 60 seconds.
                                type: integer
                              sasl:
                                description: Enable or disable SASL on this listener.
                                type: boolean
                              secrets:
                                description: Secrets to be mounted to `/opt/kafka/custom-authn-secrets/custom-listener-<listener_name>-<port>/<secret_name>`.
                                items:
                                  properties:
                                    key:
                                      description: The key under which the secret value is stored in the Kubernetes Secret.
                                      type: string
                                    secretName:
                                      description: The name of the Kubernetes Secret containing the secret value.
                                      type: string
                                  required:
                                    - key
                                    - secretName
                                  type: object
                                type: array
                              serverBearerTokenLocation:
                                description: Path to the file on the local filesystem that contains a bearer token to be used instead of client ID and secret when authenticating to authorization server.
                                type: string
                              tlsTrustedCertificates:
                                description: Trusted certificates for TLS connection to the OAuth server.
                                items:
                                  oneOf:
                                    - properties:
                                        certificate: {}
                                      required:
                                        - certificate
                                    - properties:
                                        pattern: {}
                                      required:
                                        - pattern
                                  properties:
                                    certificate:
                                      description: The name of the file certificate in the secret.
                                      type: string
                                    pattern:
                                      description: Pattern for the certificate files in the secret. Use the link:https://en.wikipedia.org/wiki/Glob_(programming)[_glob syntax_] for the pattern. All files in the secret that match the pattern are used.
                                      type: string
                                    secretName:
                                      description: The name of the Secret containing the certificate.
                                      type: string
                                  required:
                                    - secretName
                                  type: object
                                type: array
                              tokenEndpointUri:
                                description: URI of the Token Endpoint to use with SASL_PLAIN mechanism when the client authenticates with `clientId` and a `secret`. If set, the client can authenticate over SASL_PLAIN by either setting `username` to `clientId`, and setting `password` to client `secret`, or by setting `username` to account username, and `password` to access token prefixed with `$accessToken:`. If this option is not set, the `password` is always interpreted as an access token (without a prefix), and `username` as the account username (a so called 'no-client-credentials' mode).
                                type: string
                              type:
                                description: Authentication type. `oauth` type uses SASL OAUTHBEARER Authentication. `scram-sha-512` type uses SASL SCRAM-SHA-512 Authentication. `tls` type uses TLS Client Authentication. `tls` type is supported only on TLS listeners.`custom` type allows for any authentication type to be used.
                                enum:
                                  - tls
                                  - scram-sha-512
                                  - oauth
                                  - custom
                                type: string
                              userInfoEndpointUri:
                                description: 'URI of the User Info Endpoint to use as a fallback to obtaining the user id when the Introspection Endpoint does not return information that can be used for the user id. '
                                type: string
                              userNameClaim:
                                description: Name of the claim from the JWT authentication token, Introspection Endpoint response or User Info Endpoint response which will be used to extract the user id. Defaults to `sub`.
                                type: string
                              userNamePrefix:
                                description: The prefix to use with the value of `userNameClaim` to construct the user ID. This only takes effect if `userNameClaim` is specified and the value is present for the claim. When used in combination with `fallbackUserNameClaims`, it ensures consistent mapping of usernames and client IDs into the same user ID space and prevents name collisions.
                                type: string
                              validIssuerUri:
                                description: URI of the token issuer used for authentication.
                                type: string
                              validTokenType:
                                description: Valid value for the `token_type` attribute returned by the Introspection Endpoint. No default value, and not checked by default.
                                type: string
                            required:
                              - type
                            type: object
                          configuration:
                            description: Additional listener configuration.
                            properties:
                              advertisedHostTemplate:
                                description: Configures the template for generating the advertised hostnames of the individual brokers. Valid placeholders that you can use in the template are `{nodeId}` and `{nodePodName}`.
                                type: string
                              allocateLoadBalancerNodePorts:
                                description: |-
                                  Configures whether to allocate NodePort automatically for the `Service` with type `LoadBalancer`.
                                  This is a one to one with the `spec.allocateLoadBalancerNodePorts` configuration in the `Service` type
                                  For `loadbalancer` listeners only.
                                type: boolean
                              bootstrap:
                                description: Bootstrap configuration.
                                properties:
                                  alternativeNames:
                                    description: Additional alternative names for the bootstrap service. The alternative names will be added to the list of subject alternative names of the TLS certificates.
                                    items:
                                      type: string
                                    type: array
                                  annotations:
                                    additionalProperties:
                                      type: string
                                    description: Annotations added to `Ingress`, `Route`, or `Service` resources. You can use this property to configure DNS providers such as External DNS. For `loadbalancer`, `nodeport`, `route`, or `ingress` listeners only.
                                    type: object
                                  externalIPs:
                                    description: External IPs associated to the nodeport service. These IPs are used by clients external to the Kubernetes cluster to access the Kafka brokers. This property is helpful when `nodeport` without `externalIP` is not sufficient. For example on bare-metal Kubernetes clusters that do not support Loadbalancer service types. For `nodeport` listeners only.
                                    items:
                                      type: string
                                    type: array
                                  host:
                                    description: Specifies the hostname used for the bootstrap resource. For `route` (optional) or `ingress` (required) listeners only. Ensure the hostname resolves to the Ingress endpoints; no validation is performed by Strimzi.
                                    type: string
                                  labels:
                                    additionalProperties:
                                      type: string
                                    description: Labels added to `Ingress`, `Route`, or `Service` resources. For `loadbalancer`, `nodeport`, `route`, or `ingress` listeners only.
                                    type: object
                                  loadBalancerIP:
                                    description: The loadbalancer is requested with the IP address specified in this property. This feature depends on whether the underlying cloud provider supports specifying the `loadBalancerIP` when a load balancer is created. This property is ignored if the cloud provider does not support the feature. For `loadbalancer` listeners only.
                                    type: string
                                  nodePort:
                                    description: Node port for the bootstrap service. For `nodeport` listeners only.
                                    type: integer
                                type: object
                              brokerCertChainAndKey:
                                description: Reference to the `Secret` which holds the certificate and private key pair which will be used for this listener. The certificate can optionally contain the whole chain. This field can be used only with listeners with enabled TLS encryption.
                                properties:
                                  certificate:
                                    description: The name of the file certificate in the Secret.
                                    type: string
                                  key:
                                    description: The name of the private key in the Secret.
                                    type: string
                                  secretName:
                                    description: The name of the Secret containing the certificate.
                                    type: string
                                required:
                                  - secretName
                                  - certificate
                                  - key
                                type: object
                              brokers:
                                description: Per-broker configurations.
                                items:
                                  properties:
                                    advertisedHost:
                                      description: The host name used in the brokers' `advertised.listeners`.
                                      type: string
                                    advertisedPort:
                                      description: The port number used in the brokers' `advertised.listeners`.
                                      type: integer
                                    annotations:
                                      additionalProperties:
                                        type: string
                                      description: Annotations that will be added to the `Ingress` or `Service` resource. You can use this field to configure DNS providers such as External DNS. This field can be used only with `loadbalancer`, `nodeport`, or `ingress` type listeners.
                                      type: object
                                    broker:
                                      description: ID of the kafka broker (broker identifier). Broker IDs start from 0 and correspond to the number of broker replicas.
                                      type: integer
                                    externalIPs:
                                      description: External IPs associated to the nodeport service. These IPs are used by clients external to the Kubernetes cluster to access the Kafka brokers. This field is helpful when `nodeport` without `externalIP` is not sufficient. For example on bare-metal Kubernetes clusters that do not support Loadbalancer service types. This field can only be used with `nodeport` type listener.
                                      items:
                                        type: string
                                      type: array
                                    host:
                                      description: The broker host. This field will be used in the Ingress resource or in the Route resource to specify the desired hostname. This field can be used only with `route` (optional) or `ingress` (required) type listeners.
                                      type: string
                                    labels:
                                      additionalProperties:
                                        type: string
                                      description: Labels that will be added to the `Ingress`, `Route`, or `Service` resource. This field can be used only with `loadbalancer`, `nodeport`, `route`, or `ingress` type listeners.
                                      type: object
                                    loadBalancerIP:
                                      description: The loadbalancer is requested with the IP address specified in this field. This feature depends on whether the underlying cloud provider supports specifying the `loadBalancerIP` when a load balancer is created. This field is ignored if the cloud provider does not support the feature.This field can be used only with `loadbalancer` type listener.
                                      type: string
                                    nodePort:
                                      description: Node port for the per-broker service. This field can be used only with `nodeport` type listener.
                                      type: integer
                                  required:
                                    - broker
                                  type: object
                                type: array
                              class:
                                description: |-
                                  Configures a specific class for `Ingress` and `LoadBalancer` that defines which controller is used. If not specified, the default controller is used.

                                  * For an `ingress` listener, the operator uses this property to set the `ingressClassName` property in the `Ingress` resources.
                                  * For a `loadbalancer` listener, the operator uses this property to set the `loadBalancerClass` property  in the `Service` resources.

                                  For `ingress` and `loadbalancer` listeners only.
                                type: string
                              createBootstrapService:
                                description: Whether to create the bootstrap service or not. The bootstrap service is created by default (if not specified differently). This field can be used with the `loadbalancer` listener.
                                type: boolean
                              externalTrafficPolicy:
                                description: |-
                                  Specifies whether the service routes external traffic to cluster-wide or node-local endpoints:

                                  * `Cluster` may cause a second hop to another node and obscures the client source IP.
                                  * `Local` avoids a second hop for `LoadBalancer` and `Nodeport` type services and preserves the client source IP (when supported by the infrastructure).

                                  If unspecified, Kubernetes uses `Cluster` as the default. For `loadbalancer` or `nodeport` listeners only.
                                enum:
                                  - Local
                                  - Cluster
                                type: string
                              finalizers:
                                description: A list of finalizers configured for the `LoadBalancer` type services created for this listener. If supported by the platform, the finalizer `service.kubernetes.io/load-balancer-cleanup` to make sure that the external load balancer is deleted together with the service.For more information, see https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#garbage-collecting-load-balancers. For `loadbalancer` listeners only.
                                items:
                                  type: string
                                type: array
                              hostTemplate:
                                description: Configures the template for generating the hostnames of the individual brokers. Valid placeholders that you can use in the template are `{nodeId}` and `{nodePodName}`.
                                type: string
                              ipFamilies:
                                description: Specifies the IP Families used by the service. Available options are `IPv4` and `IPv6`. If unspecified, Kubernetes will choose the default value based on the `ipFamilyPolicy` setting.
                                items:
                                  enum:
                                    - IPv4
                                    - IPv6
                                  type: string
                                type: array
                              ipFamilyPolicy:
                                description: |-
                                  Specifies the IP Family Policy used by the service. Available options are `SingleStack`, `PreferDualStack` and `RequireDualStack`:

                                  * `SingleStack` is for a single IP family.
                                  * `PreferDualStack` is for two IP families on dual-stack configured clusters or a single IP family on single-stack clusters.
                                  * `RequireDualStack` fails unless there are two IP families on dual-stack configured clusters.

                                  If unspecified, Kubernetes will choose the default value based on the service type.
                                enum:
                                  - SingleStack
                                  - PreferDualStack
                                  - RequireDualStack
                                type: string
                              loadBalancerSourceRanges:
                                description: A list of CIDR ranges (for example `10.0.0.0/8` or `130.211.204.1/32`) from which clients can connect to loadbalancer listeners. If supported by the platform, traffic through the loadbalancer is restricted to the specified CIDR ranges. This field is applicable only for loadbalancer type services and is ignored if the cloud provider does not support the feature. For `loadbalancer` listeners only.
                                items:
                                  type: string
                                type: array
                              maxConnectionCreationRate:
                                description: The maximum connection creation rate we allow in this listener at any time. New connections will be throttled if the limit is reached.
                                type: integer
                              maxConnections:
                                description: The maximum number of connections we allow for this listener in the broker at any time. New connections are blocked if the limit is reached.
                                type: integer
                              preferredNodePortAddressType:
                                description: |-
                                  Defines which address type should be used as the node address. Available types are: `ExternalDNS`, `ExternalIP`, `InternalDNS`, `InternalIP` and `Hostname`. By default, the addresses are used in the following order (the first one found is used):

                                  * `ExternalDNS`
                                  * `ExternalIP`
                                  * `InternalDNS`
                                  * `InternalIP`
                                  * `Hostname`

                                  This property is used to select the preferred address type, which is checked first. If no address is found for this address type, the other types are checked in the default order.For `nodeport` listeners only.
                                enum:
                                  - ExternalIP
                                  - ExternalDNS
                                  - InternalIP
                                  - InternalDNS
                                  - Hostname
                                type: string
                              publishNotReadyAddresses:
                                description: Configures whether the service endpoints are considered "ready" even if the Pods themselves are not. Defaults to `false`. This field can not be used with `internal` listeners.
                                type: boolean
                              useServiceDnsDomain:
                                description: |-
                                  Configures whether the Kubernetes service DNS domain should be included in the generated addresses.

                                  * If set to `false`, the generated addresses do not contain the service DNS domain suffix. For example, `my-cluster-kafka-0.my-cluster-kafka-brokers.myproject.svc`.
                                  * If set to `true`, the generated addresses contain the service DNS domain suffix. For example, `my-cluster-kafka-0.my-cluster-kafka-brokers.myproject.svc.cluster.local`.

                                  The default is `.cluster.local`, but this is customizable using the environment variable `KUBERNETES_SERVICE_DNS_DOMAIN`. For `internal` and `cluster-ip` listeners only.
                                type: boolean
                            type: object
                          name:
                            description: Name of the listener. The name will be used to identify the listener and the related Kubernetes objects. The name has to be unique within given a Kafka cluster. The name can consist of lowercase characters and numbers and be up to 11 characters long.
                            pattern: ^[a-z0-9]{1,11}$
                            type: string
                          networkPolicyPeers:
                            description: List of peers which should be able to connect to this listener. Peers in this list are combined using a logical OR operation. If this field is empty or missing, all connections will be allowed for this listener. If this field is present and contains at least one item, the listener only allows the traffic which matches at least one item in this list.
                            items:
                              properties:
                                ipBlock:
                                  properties:
                                    cidr:
                                      type: string
                                    except:
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                namespaceSelector:
                                  properties:
                                    matchExpressions:
                                      items:
                                        properties:
                                          key:
                                            type: string
                                          operator:
                                            type: string
                                          values:
                                            items:
                                              type: string
                                            type: array
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      type: object
                                  type: object
                                podSelector:
                                  properties:
                                    matchExpressions:
                                      items:
                                        properties:
                                          key:
                                            type: string
                                          operator:
                                            type: string
                                          values:
                                            items:
                                              type: string
                                            type: array
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      type: object
                                  type: object
                              type: object
                            type: array
                          port:
                            description: Port number used by the listener inside Kafka. The port number has to be unique within a given Kafka cluster. Allowed port numbers are 9092 and higher with the exception of ports 9404 and 9999, which are already used for Prometheus and JMX. Depending on the listener type, the port number might not be the same as the port number that connects Kafka clients.
                            minimum: 9092
                            type: integer
                          tls:
                            description: Enables TLS encryption on the listener. This is a required property. For `route` and `ingress` type listeners, TLS encryption must be always enabled.
                            type: boolean
                          type:
                            description: "Type of the listener. The supported types are as follows: \n\n* `internal` type exposes Kafka internally only within the Kubernetes cluster.\n* `route` type uses OpenShift Routes to expose Kafka.\n* `loadbalancer` type uses LoadBalancer type services to expose Kafka.\n* `nodeport` type uses NodePort type services to expose Kafka.\n* `ingress` type uses Kubernetes Nginx Ingress to expose Kafka with TLS passthrough.\n* `cluster-ip` type uses a per-broker `ClusterIP` service.\n"
                            enum:
                              - internal
                              - route
                              - loadbalancer
                              - nodeport
                              - ingress
                              - cluster-ip
                            type: string
                        required:
                          - name
                          - port
                          - type
                          - tls
                        type: object
                      minItems: 1
                      type: array
                    livenessProbe:
                      description: Pod liveness checking.
                      properties:
                        failureThreshold:
                          description: Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
                          minimum: 1
                          type: integer
                        initialDelaySeconds:
                          description: The initial delay before first the health is first checked. Default to 15 seconds. Minimum value is 0.
                          minimum: 0
                          type: integer
                        periodSeconds:
                          description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
                          minimum: 1
                          type: integer
                        successThreshold:
                          description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
                          minimum: 1
                          type: integer
                        timeoutSeconds:
                          description: The timeout for each attempted health check. Default to 5 seconds. Minimum value is 1.
                          minimum: 1
                          type: integer
                      type: object
                    logging:
                      description: Logging configuration for Kafka.
                      properties:
                        loggers:
                          additionalProperties:
                            type: string
                          description: A Map from logger name to logger level.
                          type: object
                        type:
                          description: Logging type, must be either 'inline' or 'external'.
                          enum:
                            - inline
                            - external
                          type: string
                        valueFrom:
                          description: '`ConfigMap` entry where the logging configuration is stored. '
                          properties:
                            configMapKeyRef:
                              description: Reference to the key in the ConfigMap containing the configuration.
                              properties:
                                key:
                                  type: string
                                name:
                                  type: string
                                optional:
                                  type: boolean
                              type: object
                          type: object
                      required:
                        - type
                      type: object
                    metadataVersion:
                      description: The KRaft metadata version used by the Kafka cluster. This property is ignored when running in ZooKeeper mode. If the property is not set, it defaults to the metadata version that corresponds to the `version` property.
                      type: string
                    metricsConfig:
                      description: Metrics configuration.
                      properties:
                        type:
                          description: Metrics type. Only 'jmxPrometheusExporter' supported currently.
                          enum:
                            - jmxPrometheusExporter
                          type: string
                        valueFrom:
                          description: 'ConfigMap entry where the Prometheus JMX Exporter configuration is stored. '
                          properties:
                            configMapKeyRef:
                              description: Reference to the key in the ConfigMap containing the configuration.
                              properties:
                                key:
                                  type: string
                                name:
                                  type: string
                                optional:
                                  type: boolean
                              type: object
                          type: object
                      required:
                        - type
                        - valueFrom
                      type: object
                    quotas:
                      description: Quotas plugin configuration for Kafka brokers allows setting quotas for disk usage, produce/fetch rates, and more. Supported plugin types include `kafka` (default) and `strimzi`. If not specified, the default `kafka` quotas plugin is used.
                      properties:
                        consumerByteRate:
                          description: A per-broker byte-rate quota for clients consuming from a broker, independent of their number. If clients consume at maximum speed, the quota is shared equally between all non-excluded consumers. Otherwise, the quota is divided based on each client's consumption rate.
                          minimum: 0
                          type: integer
                        controllerMutationRate:
                          description: The default client quota on the rate at which mutations are accepted per second for create topic requests, create partition requests, and delete topic requests, defined for each broker. The mutations rate is measured by the number of partitions created or deleted. Applied on a per-broker basis.
                          minimum: 0
                          type: number
                        excludedPrincipals:
                          description: List of principals that are excluded from the quota. The principals have to be prefixed with `User:`, for example `User:my-user;User:CN=my-other-user`.
                          items:
                            type: string
                          type: array
                        minAvailableBytesPerVolume:
                          description: Stop message production if the available size (in bytes) of the storage is lower than or equal to this specified value. This condition is mutually exclusive with `minAvailableRatioPerVolume`.
                          minimum: 0
                          type: integer
                        minAvailableRatioPerVolume:
                          description: Stop message production if the percentage of available storage space falls below or equals the specified ratio (set as a decimal representing a percentage). This condition is mutually exclusive with `minAvailableBytesPerVolume`.
                          maximum: 1
                          minimum: 0
                          type: number
                        producerByteRate:
                          description: A per-broker byte-rate quota for clients producing to a broker, independent of their number. If clients produce at maximum speed, the quota is shared equally between all non-excluded producers. Otherwise, the quota is divided based on each client's production rate.
                          minimum: 0
                          type: integer
                        requestPercentage:
                          description: The default client quota limits the maximum CPU utilization of each client as a percentage of the network and I/O threads of each broker. Applied on a per-broker basis.
                          minimum: 0
                          type: integer
                        type:
                          description: Quotas plugin type. Currently, the supported types are `kafka` and `strimzi`. `kafka` quotas type uses Kafka's built-in quotas plugin. `strimzi` quotas type uses Strimzi quotas plugin.
                          enum:
                            - kafka
                            - strimzi
                          type: string
                      required:
                        - type
                      type: object
                    rack:
                      description: Configuration of the `broker.rack` broker config.
                      properties:
                        topologyKey:
                          description: A key that matches labels assigned to the Kubernetes cluster nodes. The value of the label is used to set a broker's `broker.rack` config, and the `client.rack` config for Kafka Connect or MirrorMaker 2.
                          example: topology.kubernetes.io/zone
                          type: string
                      required:
                        - topologyKey
                      type: object
                    readinessProbe:
                      description: Pod readiness checking.
                      properties:
                        failureThreshold:
                          description: Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
                          minimum: 1
                          type: integer
                        initialDelaySeconds:
                          description: The initial delay before first the health is first checked. Default to 15 seconds. Minimum value is 0.
                          minimum: 0
                          type: integer
                        periodSeconds:
                          description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
                          minimum: 1
                          type: integer
                        successThreshold:
                          description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
                          minimum: 1
                          type: integer
                        timeoutSeconds:
                          description: The timeout for each attempted health check. Default to 5 seconds. Minimum value is 1.
                          minimum: 1
                          type: integer
                      type: object
                    replicas:
                      description: The number of pods in the cluster. This property is required when node pools are not used.
                      minimum: 1
                      type: integer
                    resources:
                      description: CPU and memory resources to reserve.
                      properties:
                        claims:
                          items:
                            properties:
                              name:
                                type: string
                            type: object
                          type: array
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          type: object
                      type: object
                    storage:
                      description: Storage configuration (disk). Cannot be updated. This property is required when node pools are not used.
                      properties:
                        class:
                          description: The storage class to use for dynamic volume allocation.
                          type: string
                        deleteClaim:
                          description: Specifies if the persistent volume claim has to be deleted when the cluster is un-deployed.
                          type: boolean
                        id:
                          description: Storage identification number. It is mandatory only for storage volumes defined in a storage of type 'jbod'.
                          minimum: 0
                          type: integer
                        kraftMetadata:
                          description: Specifies whether this volume should be used for storing KRaft metadata. This property is optional. When set, the only currently supported value is `shared`. At most one volume can have this property set.
                          enum:
                            - shared
                          type: string
                        overrides:
                          description: Overrides for individual brokers. The `overrides` field allows you to specify a different configuration for different brokers.
                          items:
                            properties:
                              broker:
                                description: Id of the kafka broker (broker identifier).
                                type: integer
                              class:
                                description: The storage class to use for dynamic volume allocation for this broker.
                                type: string
                            type: object
                          type: array
                        selector:
                          additionalProperties:
                            type: string
                          description: Specifies a specific persistent volume to use. It contains key:value pairs representing labels for selecting such a volume.
                          type: object
                        size:
                          description: When `type=persistent-claim`, defines the size of the persistent volume claim, such as 100Gi. Mandatory when `type=persistent-claim`.
                          type: string
                        sizeLimit:
                          description: When type=ephemeral, defines the total amount of local storage required for this EmptyDir volume (for example 1Gi).
                          pattern: ^([0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$
                          type: string
                        type:
                          description: Storage type, must be either 'ephemeral', 'persistent-claim', or 'jbod'.
                          enum:
                            - ephemeral
                            - persistent-claim
                            - jbod
                          type: string
                        volumes:
                          description: List of volumes as Storage objects representing the JBOD disks array.
                          items:
                            properties:
                              class:
                                description: The storage class to use for dynamic volume allocation.
                                type: string
                              deleteClaim:
                                description: Specifies if the persistent volume claim has to be deleted when the cluster is un-deployed.
                                type: boolean
                              id:
                                description: Storage identification number. Mandatory for storage volumes defined with a `jbod` storage type configuration.
                                minimum: 0
                                type: integer
                              kraftMetadata:
                                description: Specifies whether this volume should be used for storing KRaft metadata. This property is optional. When set, the only currently supported value is `shared`. At most one volume can have this property set.
                                enum:
                                  - shared
                                type: string
                              overrides:
                                description: Overrides for individual brokers. The `overrides` field allows you to specify a different configuration for different brokers.
                                items:
                                  properties:
                                    broker:
                                      description: Id of the kafka broker (broker identifier).
                                      type: integer
                                    class:
                                      description: The storage class to use for dynamic volume allocation for this broker.
                                      type: string
                                  type: object
                                type: array
                              selector:
                                additionalProperties:
                                  type: string
                                description: Specifies a specific persistent volume to use. It contains key:value pairs representing labels for selecting such a volume.
                                type: object
                              size:
                                description: When `type=persistent-claim`, defines the size of the persistent volume claim, such as 100Gi. Mandatory when `type=persistent-claim`.
                                type: string
                              sizeLimit:
                                description: When type=ephemeral, defines the total amount of local storage required for this EmptyDir volume (for example 1Gi).
                                pattern: ^([0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$
                                type: string
                              type:
                                description: Storage type, must be either 'ephemeral' or 'persistent-claim'.
                                enum:
                                  - ephemeral
                                  - persistent-claim
                                type: string
                            required:
                              - type
                            type: object
                          type: array
                      required:
                        - type
                      type: object
                    template:
                      description: Template for Kafka cluster resources. The template allows users to specify how the Kubernetes resources are generated.
                      properties:
                        bootstrapService:
                          description: Template for Kafka bootstrap `Service`.
                          properties:
                            ipFamilies:
                              description: Specifies the IP Families used by the service. Available options are `IPv4` and `IPv6`. If unspecified, Kubernetes will choose the default value based on the `ipFamilyPolicy` setting.
                              items:
                                enum:
                                  - IPv4
                                  - IPv6
                                type: string
                              type: array
                            ipFamilyPolicy:
                              description: Specifies the IP Family Policy used by the service. Available options are `SingleStack`, `PreferDualStack` and `RequireDualStack`. `SingleStack` is for a single IP family. `PreferDualStack` is for two IP families on dual-stack configured clusters or a single IP family on single-stack clusters. `RequireDualStack` fails unless there are two IP families on dual-stack configured clusters. If unspecified, Kubernetes will choose the default value based on the service type.
                              enum:
                                - SingleStack
                                - PreferDualStack
                                - RequireDualStack
                              type: string
                            metadata:
                              description: Metadata applied to the resource.
                              properties:
                                annotations:
                                  additionalProperties:
                                    type: string
                                  description: Annotations added to the Kubernetes resource.
                                  type: object
                                labels:
                                  additionalProperties:
                                    type: string
                                  description: Labels added to the Kubernetes resource.
                                  type: object
                              type: object
                          type: object
                        brokersService:
                          description: Template for Kafka broker `Service`.
                          properties:
                            ipFamilies:
                              description: Specifies the IP Families used by the service. Available options are `IPv4` and `IPv6`. If unspecified, Kubernetes will choose the default value based on the `ipFamilyPolicy` setting.
                              items:
                                enum:
                                  - IPv4
                                  - IPv6
                                type: string
                              type: array
                            ipFamilyPolicy:
                              description: Specifies the IP Family Policy used by the service. Available options are `SingleStack`, `PreferDualStack` and `RequireDualStack`. `SingleStack` is for a single IP family. `PreferDualStack` is for two IP families on dual-stack configured clusters or a single IP family on single-stack clusters. `RequireDualStack` fails unless there are two IP families on dual-stack configured clusters. If unspecified, Kubernetes will choose the default value based on the service type.
                              enum:
                                - SingleStack
                                - PreferDualStack
                                - RequireDualStack
                              type: string
                            metadata:
                              description: Metadata applied to the resource.
                              properties:
                                annotations:
                                  additionalProperties:
                                    type: string
                                  description: Annotations added to the Kubernetes resource.
                                  type: object
                                labels:
                                  additionalProperties:
                                    type: string
                                  description: Labels added to the Kubernetes resource.
                                  type: object
                              type: object
                          type: object
                        clusterCaCert:
                          description: Template for Secret with Kafka Cluster certificate public key.
                          properties:
                            metadata:
                              description: Metadata applied to the resource.
                              properties:
                                annotations:
                                  additionalProperties:
                                    type: string
                                  description: Annotations added to the Kubernetes resource.
                                  type: object
                                labels:
                                  additionalProperties:
                                    type: string
                                  description: Labels added to the Kubernetes resource.
                                  type: object
                              type: object
                          type: object
                        clusterRoleBinding:
                          description: Template for the Kafka ClusterRoleBinding.
                          properties:
                            metadata:
                              description: Metadata applied to the resource.
                              properties:
                                annotations:
                                  additionalProperties:
                                    type: string
                                  description: Annotations added to the Kubernetes resource.
                                  type: object
                                labels:
                                  additionalProperties:
                                    type: string
                                  description: Labels added to the Kubernetes resource.
                                  type: object
                              type: object
                          type: object
                        externalBootstrapIngress:
                          description: Template for Kafka external bootstrap `Ingress`.
                          properties:
                            metadata:
                              description: Metadata applied to the resource.
                              properties:
                                annotations:
                                  additionalProperties:
                                    type: string
                                  description: Annotations added to the Kubernetes resource.
                                  type: object
                                labels:
                                  additionalProperties:
                                    type: string
                                  description: Labels added to the Kubernetes resource.
                                  type: object
                              type: object
                          type: object
                        externalBootstrapRoute:
                          description: Template for Kafka external bootstrap `Route`.
                          properties:
                            metadata:
                              description: Metadata applied to the resource.
                              properties:
                                annotations:
                                  additionalProperties:
                                    type: string
                                  description: Annotations added to the Kubernetes resource.
                                  type: object
                                labels:
                                  additionalProperties:
                                    type: string
                                  description: Labels added to the Kubernetes resource.
                                  type: object
                              type: object
                          type: object
                        externalBootstrapService:
                          description: Template for Kafka external bootstrap `Service`.
                          properties:
                            metadata:
                              description: Metadata applied to the resource.
                              properties:
                                annotations:
                                  additionalProperties:
                                    type: string
                                  description: Annotations added to the Kubernetes resource.
                                  type: object
                                labels:
                                  additionalProperties:
                                    type: string
                                  description: Labels added to the Kubernetes resource.
                                  type: object
                              type: object
                          type: object
                        initContainer:
                          description: Template for the Kafka init container.
                          properties:
                            env:
                              description: Environment variables which should be applied to the container.
                              items:
                                oneOf:
                                  - properties:
                                      value: {}
                                    required:
                                      - value
                                  - properties:
                                      valueFrom: {}
                                    required:
                                      - valueFrom
                                properties:
                                  name:
                                    description: The environment variable key.
                                    type: string
                                  value:
                                    description: The environment variable value.
                                    type: string
                                  valueFrom:
                                    description: Reference to the secret or config map property to which the environment variable is set.
                                    oneOf:
                                      - properties:
                                          secretKeyRef: {}
                                        required:
                                          - secretKeyRef
                                      - properties:
                                          configMapKeyRef: {}
                                        required:
                                          - configMapKeyRef
                                    properties:
                                      configMapKeyRef:
                                        description: Reference to a key in a config map.
                                        properties:
                                          key:
                                            type: string
                                          name:
                                            type: string
                                          optional:
                                            type: boolean
                                        type: object
                                      secretKeyRef:
                                        description: Reference to a key in a secret.
                                        properties:
                                          key:
                                            type: string
                                          name:
                                            type: string
                                          optional:
                                            type: boolean
                                        type: object
                                    type: object
                                type: object
                              type: array
                            securityContext:
                              description: Security context for the container.
                              properties:
                                allowPrivilegeEscalation:
                                  type: boolean
                                appArmorProfile:
                                  properties:
                                    localhostProfile:
                                      type: string
                                    type:
                                      type: string
                                  type: object
                                capabilities:
                                  properties:
                                    add:
                                      items:
                                        type: string
                                      type: array
                                    drop:
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                privileged:
                                  type: boolean
                                procMount:
                                  type: string
                                readOnlyRootFilesystem:
                                  type: boolean
                                runAsGroup:
                                  type: integer
                                runAsNonRoot:
                                  type: boolean
                                runAsUser:
                                  type: integer
                                seLinuxOptions:
                                  properties:
                                    level:
                                      type: string
                                    role:
                                      type: string
                                    type:
                                      type: string
                                    user:
                                      type: string
                                  type: object
                                seccompProfile:
                                  properties:
                                    localhostProfile:
                                      type: string
                                    type:
                                      type: string
                                  type: object
                                windowsOptions:
                                  properties:
                                    gmsaCredentialSpec:
                                      type: string
                                    gmsaCredentialSpecName:
                                      type: string
                                    hostProcess:
                                      type: boolean
                                    runAsUserName:
                                      type: string
                                  type: object
                              type: object
                            volumeMounts:
                              description: Additional volume mounts which should be applied to the container.
                              items:
                                properties:
                                  mountPath:
                                    type: string
                                  mountPropagation:
                                    type: string
                                  name:
                                    type: string
                                  readOnly:
                                    type: boolean
                                  recursiveReadOnly:
                                    type: string
                                  subPath:
                                    type: string
                                  subPathExpr:
                                    type: string
                                type: object
                              type: array
                          type: object
                        jmxSecret:
                          description: Template for Secret of the Kafka Cluster JMX authentication.
                          properties:
                            metadata:
                              description: Metadata applied to the resource.
                              properties:
                                annotations:
                                  additionalProperties:
                                    type: string
                                  description: Annotations added to the Kubernetes resource.
                                  type: object
                                labels:
                                  additionalProperties:
                                    type: string
                                  description: Labels added to the Kubernetes resource.
                                  type: object
                              type: object
                          type: object
                        kafkaContainer:
                          description: Template for the Kafka broker container.
                          properties:
                            env:
                              description: Environment variables which should be applied to the container.
                              items:
                                oneOf:
                                  - properties:
                                      value: {}
                                    required:
                                      - value
                                  - properties:
                                      valueFrom: {}
                                    required:
                                      - valueFrom
                                properties:
                                  name:
                                    description: The environment variable key.
                                    type: string
                                  value:
                                    description: The environment variable value.
                                    type: string
                                  valueFrom:
                                    description: Reference to the secret or config map property to which the environment variable is set.
                                    oneOf:
                                      - properties:
                                          secretKeyRef: {}
                                        required:
                                          - secretKeyRef
                                      - properties:
                                          configMapKeyRef: {}
                                        required:
                                          - configMapKeyRef
                                    properties:
                                      configMapKeyRef:
                                        description: Reference to a key in a config map.
                                        properties:
                                          key:
                                            type: string
                                          name:
                                            type: string
                                          optional:
                                            type: boolean
                                        type: object
                                      secretKeyRef:
                                        description: Reference to a key in a secret.
                                        properties:
                                          key:
                                            type: string
                                          name:
                                            type: string
                                          optional:
                                            type: boolean
                                        type: object
                                    type: object
                                type: object
                              type: array
                            securityContext:
                              description: Security context for the container.
                              properties:
                                allowPrivilegeEscalation:
                                  type: boolean
                                appArmorProfile:
                                  properties:
                                    localhostProfile:
                                      type: string
                                    type:
                                      type: string
                                  type: object
                                capabilities:
                                  properties:
                                    add:
                                      items:
                                        type: string
                                      type: array
                                    drop:
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                privileged:
                                  type: boolean
                                procMount:
                                  type: string
                                readOnlyRootFilesystem:
                                  type: boolean
                                runAsGroup:
                                  type: integer
                                runAsNonRoot:
                                  type: boolean
                                runAsUser:
                                  type: integer
                                seLinuxOptions:
                                  properties:
                                    level:
                                      type: string
                                    role:
                                      type: string
                                    type:
                                      type: string
                                    user:
                                      type: string
                                  type: object
                                seccompProfile:
                                  properties:
                                    localhostProfile:
                                      type: string
                                    type:
                                      type: string
                                  type: object
                                windowsOptions:
                                  properties:
                                    gmsaCredentialSpec:
                                      type: string
                                    gmsaCredentialSpecName:
                                      type: string
                                    hostProcess:
                                      type: boolean
                                    runAsUserName:
                                      type: string
                                  type: object
                              type: object
                            volumeMounts:
                              description: Additional volume mounts which should be applied to the container.
                              items:
                                properties:
                                  mountPath:
                                    type: string
                                  mountPropagation:
                                    type: string
                                  name:
                                    type: string
                                  readOnly:
                                    type: boolean
                                  recursiveReadOnly:
                                    type: string
                                  subPath:
                                    type: string
                                  subPathExpr:
                                    type: string
                                type: object
                              type: array
                          type: object
                        perPodIngress:
                          description: Template for Kafka per-pod `Ingress` used for access from outside of Kubernetes.
                          properties:
                            metadata:
                              description: Metadata applied to the resource.
                              properties:
                                annotations:
                                  additionalProperties:
                                    type: string
                                  description: Annotations added to the Kubernetes resource.
                                  type: object
                                labels:
                                  additionalProperties:
                                    type: string
                                  description: Labels added to the Kubernetes resource.
                                  type: object
                              type: object
                          type: object
                        perPodRoute:
                          description: Template for Kafka per-pod `Routes` used for access from outside of OpenShift.
                          properties:
                            metadata:
                              description: Metadata applied to the resource.
                              properties:
                                annotations:
                                  additionalProperties:
                                    type: string
                                  description: Annotations added to the Kubernetes resource.
                                  type: object
                                labels:
                                  additionalProperties:
                                    type: string
                                  description: Labels added to the Kubernetes resource.
                                  type: object
                              type: object
                          type: object
                        perPodService:
                          description: Template for Kafka per-pod `Services` used for access from outside of Kubernetes.
                          properties:
                            metadata:
                              description: Metadata applied to the resource.
                              properties:
                                annotations:
                                  additionalProperties:
                                    type: string
                                  description: Annotations added to the Kubernetes resource.
                                  type: object
                                labels:
                                  additionalProperties:
                                    type: string
                                  description: Labels added to the Kubernetes resource.
                                  type: object
                              type: object
                          type: object
                        persistentVolumeClaim:
                          description: Template for all Kafka `PersistentVolumeClaims`.
                          properties:
                            metadata:
                              description: Metadata applied to the resource.
                              properties:
                                annotations:
                                  additionalProperties:
                                    type: string
                                  description: Annotations added to the Kubernetes resource.
                                  type: object
                                labels:
                                  additionalProperties:
                                    type: string
                                  description: Labels added to the Kubernetes resource.
                                  type: object
                              type: object
                          type: object
                        pod:
                          description: Template for Kafka `Pods`.
                          properties:
                            affinity:
                              description: The pod's affinity rules.
                              properties:
                                nodeAffinity:
                                  properties:
                                    preferredDuringSchedulingIgnoredDuringExecution:
                                      items:
                                        properties:
                                          preference:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchFields:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                            type: object
                                          weight:
                                            type: integer
                                        type: object
                                      type: array
                                    requiredDuringSchedulingIgnoredDuringExecution:
                                      properties:
                                        nodeSelectorTerms:
                                          items:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchFields:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                            type: object
                                          type: array
                                      type: object
                                  type: object
                                podAffinity:
                                  properties:
                                    preferredDuringSchedulingIgnoredDuringExecution:
                                      items:
                                        properties:
                                          podAffinityTerm:
                                            properties:
                                              labelSelector:
                                                properties:
                                                  matchExpressions:
                                                    items:
                                                      properties:
                                                        key:
                                                          type: string
                                                        operator:
                                                          type: string
                                                        values:
                                                          items:
                                                            type: string
                                                          type: array
                                                      type: object
                                                    type: array
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: string
                                                    type: object
                                                type: object
                                              matchLabelKeys:
                                                items:
                                                  type: string
                                                type: array
                                              mismatchLabelKeys:
                                                items:
                                                  type: string
                                                type: array
                                              namespaceSelector:
                                                properties:
                                                  matchExpressions:
                                                    items:
                                                      properties:
                                                        key:
                                                          type: string
                                                        operator:
                                                          type: string
                                                        values:
                                                          items:
                                                            type: string
                                                          type: array
                                                      type: object
                                                    type: array
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: string
                                                    type: object
                                                type: object
                                              namespaces:
                                                items:
                                                  type: string
                                                type: array
                                              topologyKey:
                                                type: string
                                            type: object
                                          weight:
                                            type: integer
                                        type: object
                                      type: array
                                    requiredDuringSchedulingIgnoredDuringExecution:
                                      items:
                                        properties:
                                          labelSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels:
                                                additionalProperties:
                                                  type: string
                                                type: object
                                            type: object
                                          matchLabelKeys:
                                            items:
                                              type: string
                                            type: array
                                          mismatchLabelKeys:
                                            items:
                                              type: string
                                            type: array
                                          namespaceSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels:
                                                additionalProperties:
                                                  type: string
                                                type: object
                                            type: object
                                          namespaces:
                                            items:
                                              type: string
                                            type: array
                                          topologyKey:
                                            type: string
                                        type: object
                                      type: array
                                  type: object
                                podAntiAffinity:
                                  properties:
                                    preferredDuringSchedulingIgnoredDuringExecution:
                                      items:
                                        properties:
                                          podAffinityTerm:
                                            properties:
                                              labelSelector:
                                                properties:
                                                  matchExpressions:
                                                    items:
                                                      properties:
                                                        key:
                                                          type: string
                                                        operator:
                                                          type: string
                                                        values:
                                                          items:
                                                            type: string
                                                          type: array
                                                      type: object
                                                    type: array
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: string
                                                    type: object
                                                type: object
                                              matchLabelKeys:
                                                items:
                                                  type: string
                                                type: array
                                              mismatchLabelKeys:
                                                items:
                                                  type: string
                                                type: array
                                              namespaceSelector:
                                                properties:
                                                  matchExpressions:
                                                    items:
                                                      properties:
                                                        key:
                                                          type: string
                                                        operator:
                                                          type: string
                                                        values:
                                                          items:
                                                            type: string
                                                          type: array
                                                      type: object
                                                    type: array
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: string
                                                    type: object
                                                type: object
                                              namespaces:
                                                items:
                                                  type: string
                                                type: array
                                              topologyKey:
                                                type: string
                                            type: object
                                          weight:
                                            type: integer
                                        type: object
                                      type: array
                                    requiredDuringSchedulingIgnoredDuringExecution:
                                      items:
                                        properties:
                                          labelSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels:
                                                additionalProperties:
                                                  type: string
                                                type: object
                                            type: object
                                          matchLabelKeys:
                                            items:
                                              type: string
                                            type: array
                                          mismatchLabelKeys:
                                            items:
                                              type: string
                                            type: array
                                          namespaceSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels:
                                                additionalProperties:
                                                  type: string
                                                type: object
                                            type: object
                                          namespaces:
                                            items:
                                              type: string
                                            type: array
                                          topologyKey:
                                            type: string
                                        type: object
                                      type: array
                                  type: object
                              type: object
                            enableServiceLinks:
                              description: Indicates whether information about services should be injected into Pod's environment variables.
                              type: boolean
                            hostAliases:
                              description: The pod's HostAliases. HostAliases is an optional list of hosts and IPs that will be injected into the Pod's hosts file if specified.
                              items:
                                properties:
                                  hostnames:
                                    items:
                                      type: string
                                    type: array
                                  ip:
                                    type: string
                                type: object
                              type: array
                            imagePullSecrets:
                              description: List of references to secrets in the same namespace to use for pulling any of the images used by this Pod. When the `STRIMZI_IMAGE_PULL_SECRETS` environment variable in Cluster Operator and the `imagePullSecrets` option are specified, only the `imagePullSecrets` variable is used and the `STRIMZI_IMAGE_PULL_SECRETS` variable is ignored.
                              items:
                                properties:
                                  name:
                                    type: string
                                type: object
                              type: array
                            metadata:
                              description: Metadata applied to the resource.
                              properties:
                                annotations:
                                  additionalProperties:
                                    type: string
                                  description: Annotations added to the Kubernetes resource.
                                  type: object
                                labels:
                                  additionalProperties:
                                    type: string
                                  description: Labels added to the Kubernetes resource.
                                  type: object
                              type: object
                            priorityClassName:
                              description: 'The name of the priority class used to assign priority to the pods. '
                              type: string
                            schedulerName:
                              description: The name of the scheduler used to dispatch this `Pod`. If not specified, the default scheduler will be used.
                              type: string
                            securityContext:
                              description: Configures pod-level security attributes and common container settings.
                              properties:
                                appArmorProfile:
                                  properties:
                                    localhostProfile:
                                      type: string
                                    type:
                                      type: string
                                  type: object
                                fsGroup:
                                  type: integer
                                fsGroupChangePolicy:
                                  type: string
                                runAsGroup:
                                  type: integer
                                runAsNonRoot:
                                  type: boolean
                                runAsUser:
                                  type: integer
                                seLinuxOptions:
                                  properties:
                                    level:
                                      type: string
                                    role:
                                      type: string
                                    type:
                                      type: string
                                    user:
                                      type: string
                                  type: object
                                seccompProfile:
                                  properties:
                                    localhostProfile:
                                      type: string
                                    type:
                                      type: string
                                  type: object
                                supplementalGroups:
                                  items:
                                    type: integer
                                  type: array
                                sysctls:
                                  items:
                                    properties:
                                      name:
                                        type: string
                                      value:
                                        type: string
                                    type: object
                                  type: array
                                windowsOptions:
                                  properties:
                                    gmsaCredentialSpec:
                                      type: string
                                    gmsaCredentialSpecName:
                                      type: string
                                    hostProcess:
                                      type: boolean
                                    runAsUserName:
                                      type: string
                                  type: object
                              type: object
                            terminationGracePeriodSeconds:
                              description: The grace period is the duration in seconds after the processes running in the pod are sent a termination signal, and the time when the processes are forcibly halted with a kill signal. Set this value to longer than the expected cleanup time for your process. Value must be a non-negative integer. A zero value indicates delete immediately. You might need to increase the grace period for very large Kafka clusters, so that the Kafka brokers have enough time to transfer their work to another broker before they are terminated. Defaults to 30 seconds.
                              minimum: 0
                              type: integer
                            tmpDirSizeLimit:
                              description: Defines the total amount of pod memory allocated for the temporary `EmptyDir` volume `/tmp`. Specify the allocation in memory units, for example, `100Mi` for 100 mebibytes. Default value is `5Mi`. The `/tmp` volume is backed by pod memory, not disk storage, so avoid setting a high value as it consumes pod memory resources.
                              pattern: ^([0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$
                              type: string
                            tolerations:
                              description: The pod's tolerations.
                              items:
                                properties:
                                  effect:
                                    type: string
                                  key:
                                    type: string
                                  operator:
                                    type: string
                                  tolerationSeconds:
                                    type: integer
                                  value:
                                    type: string
                                type: object
                              type: array
                            topologySpreadConstraints:
                              description: The pod's topology spread constraints.
                              items:
                                properties:
                                  labelSelector:
                                    properties:
                                      matchExpressions:
                                        items:
                                          properties:
                                            key:
                                              type: string
                                            operator:
                                              type: string
                                            values:
                                              items:
                                                type: string
                                              type: array
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        type: object
                                    type: object
                                  matchLabelKeys:
                                    items:
                                      type: string
                                    type: array
                                  maxSkew:
                                    type: integer
                                  minDomains:
                                    type: integer
                                  nodeAffinityPolicy:
                                    type: string
                                  nodeTaintsPolicy:
                                    type: string
                                  topologyKey:
                                    type: string
                                  whenUnsatisfiable:
                                    type: string
                                type: object
                              type: array
                            volumes:
                              description: Additional volumes that can be mounted to the pod.
                              items:
                                oneOf:
                                  - properties:
                                      configMap: {}
                                      csi: {}
                                      emptyDir: {}
                                      persistentVolumeClaim: {}
                                      secret: {}
                                properties:
                                  configMap:
                                    description: ConfigMap to use to populate the volume.
                                    properties:
                                      defaultMode:
                                        type: integer
                                      items:
                                        items:
                                          properties:
                                            key:
                                              type: string
                                            mode:
                                              type: integer
                                            path:
                                              type: string
                                          type: object
                                        type: array
                                      name:
                                        type: string
                                      optional:
                                        type: boolean
                                    type: object
                                  csi:
                                    description: CSIVolumeSource object to use to populate the volume.
                                    properties:
                                      driver:
                                        type: string
                                      fsType:
                                        type: string
                                      nodePublishSecretRef:
                                        properties:
                                          name:
                                            type: string
                                        type: object
                                      readOnly:
                                        type: boolean
                                      volumeAttributes:
                                        additionalProperties:
                                          type: string
                                        type: object
                                    type: object
                                  emptyDir:
                                    description: EmptyDir to use to populate the volume.
                                    properties:
                                      medium:
                                        type: string
                                      sizeLimit:
                                        properties:
                                          amount:
                                            type: string
                                          format:
                                            type: string
                                        type: object
                                    type: object
                                  name:
                                    description: Name to use for the volume. Required.
                                    type: string
                                  persistentVolumeClaim:
                                    description: PersistentVolumeClaim object to use to populate the volume.
                                    properties:
                                      claimName:
                                        type: string
                                      readOnly:
                                        type: boolean
                                    type: object
                                  secret:
                                    description: Secret to use populate the volume.
                                    properties:
                                      defaultMode:
                                        type: integer
                                      items:
                                        items:
                                          properties:
                                            key:
                                              type: string
                                            mode:
                                              type: integer
                                            path:
                                              type: string
                                          type: object
                                        type: array
                                      optional:
                                        type: boolean
                                      secretName:
                                        type: string
                                    type: object
                                type: object
                              type: array
                          type: object
                        podDisruptionBudget:
                          description: Template for Kafka `PodDisruptionBudget`.
                          properties:
                            maxUnavailable:
                              description: Maximum number of unavailable pods to allow automatic Pod eviction. A Pod eviction is allowed when the `maxUnavailable` number of pods or fewer are unavailable after the eviction. Setting this value to 0 prevents all voluntary evictions, so the pods must be evicted manually. Defaults to 1.
                              minimum: 0
                              type: integer
                            metadata:
                              description: Metadata to apply to the `PodDisruptionBudgetTemplate` resource.
                              properties:
                                annotations:
                                  additionalProperties:
                                    type: string
                                  description: Annotations added to the Kubernetes resource.
                                  type: object
                                labels:
                                  additionalProperties:
                                    type: string
                                  description: Labels added to the Kubernetes resource.
                                  type: object
                              type: object
                          type: object
                        podSet:
                          description: Template for Kafka `StrimziPodSet` resource.
                          properties:
                            metadata:
                              description: Metadata applied to the resource.
                              properties:
                                annotations:
                                  additionalProperties:
                                    type: string
                                  description: Annotations added to the Kubernetes resource.
                                  type: object
                                labels:
                                  additionalProperties:
                                    type: string
                                  description: Labels added to the Kubernetes resource.
                                  type: object
                              type: object
                          type: object
                        serviceAccount:
                          description: Template for the Kafka service account.
                          properties:
                            metadata:
                              description: Metadata applied to the resource.
                              properties:
                                annotations:
                                  additionalProperties:
                                    type: string
                                  description: Annotations added to the Kubernetes resource.
                                  type: object
                                labels:
                                  additionalProperties:
                                    type: string
                                  description: Labels added to the Kubernetes resource.
                                  type: object
                              type: object
                          type: object
                        statefulset:
                          description: Template for Kafka `StatefulSet`.
                          properties:
                            metadata:
                              description: Metadata applied to the resource.
                              properties:
                                annotations:
                                  additionalProperties:
                                    type: string
                                  description: Annotations added to the Kubernetes resource.
                                  type: object
                                labels:
                                  additionalProperties:
                                    type: string
                                  description: Labels added to the Kubernetes resource.
                                  type: object
                              type: object
                            podManagementPolicy:
                              description: PodManagementPolicy which will be used for this StatefulSet. Valid values are `Parallel` and `OrderedReady`. Defaults to `Parallel`.
                              enum:
                                - OrderedReady
                                - Parallel
                              type: string
                          type: object
                      type: object
                    tieredStorage:
                      description: Configure the tiered storage feature for Kafka brokers.
                      properties:
                        remoteStorageManager:
                          description: Configuration for the Remote Storage Manager.
                          properties:
                            className:
                              description: The class name for the `RemoteStorageManager` implementation.
                              type: string
                            classPath:
                              description: The class path for the `RemoteStorageManager` implementation.
                              type: string
                            config:
                              additionalProperties:
                                type: string
                              description: The additional configuration map for the `RemoteStorageManager` implementation. Keys will be automatically prefixed with `rsm.config.`, and added to Kafka broker configuration.
                              type: object
                          type: object
                        type:
                          description: Storage type, only 'custom' is supported at the moment.
                          enum:
                            - custom
                          type: string
                      required:
                        - type
                      type: object
                    version:
                      description: The Kafka broker version. Defaults to the latest version. Consult the user documentation to understand the process required to upgrade or downgrade the version.
                      type: string
                  required:
                    - listeners
                  type: object
                kafkaExporter:
                  description: Configuration of the Kafka Exporter. Kafka Exporter can provide additional metrics, for example lag of consumer group at topic/partition.
                  properties:
                    enableSaramaLogging:
                      description: Enable Sarama logging, a Go client library used by the Kafka Exporter.
                      type: boolean
                    groupExcludeRegex:
                      description: Regular expression to specify which consumer groups to exclude.
                      type: string
                    groupRegex:
                      description: Regular expression to specify which consumer groups to collect. Default value is `.*`.
                      type: string
                    image:
                      description: The container image used for the Kafka Exporter pods. If no image name is explicitly specified, the image name corresponds to the version specified in the Cluster Operator configuration. If an image name is not defined in the Cluster Operator configuration, a default value is used.
                      type: string
                    livenessProbe:
                      description: Pod liveness check.
                      properties:
                        failureThreshold:
                          description: Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
                          minimum: 1
                          type: integer
                        initialDelaySeconds:
                          description: The initial delay before first the health is first checked. Default to 15 seconds. Minimum value is 0.
                          minimum: 0
                          type: integer
                        periodSeconds:
                          description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
                          minimum: 1
                          type: integer
                        successThreshold:
                          description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
                          minimum: 1
                          type: integer
                        timeoutSeconds:
                          description: The timeout for each attempted health check. Default to 5 seconds. Minimum value is 1.
                          minimum: 1
                          type: integer
                      type: object
                    logging:
                      description: 'Only log messages with the given severity or above. Valid levels: [`info`, `debug`, `trace`]. Default log level is `info`.'
                      type: string
                    readinessProbe:
                      description: Pod readiness check.
                      properties:
                        failureThreshold:
                          description: Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
                          minimum: 1
                          type: integer
                        initialDelaySeconds:
                          description: The initial delay before first the health is first checked. Default to 15 seconds. Minimum value is 0.
                          minimum: 0
                          type: integer
                        periodSeconds:
                          description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
                          minimum: 1
                          type: integer
                        successThreshold:
                          description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
                          minimum: 1
                          type: integer
                        timeoutSeconds:
                          description: The timeout for each attempted health check. Default to 5 seconds. Minimum value is 1.
                          minimum: 1
                          type: integer
                      type: object
                    resources:
                      description: CPU and memory resources to reserve.
                      properties:
                        claims:
                          items:
                            properties:
                              name:
                                type: string
                            type: object
                          type: array
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          type: object
                      type: object
                    showAllOffsets:
                      description: Whether show the offset/lag for all consumer group, otherwise, only show connected consumer groups.
                      type: boolean
                    template:
                      description: Customization of deployment templates and pods.
                      properties:
                        container:
                          description: Template for the Kafka Exporter container.
                          properties:
                            env:
                              description: Environment variables which should be applied to the container.
                              items:
                                oneOf:
                                  - properties:
                                      value: {}
                                    required:
                                      - value
                                  - properties:
                                      valueFrom: {}
                                    required:
                                      - valueFrom
                                properties:
                                  name:
                                    description: The environment variable key.
                                    type: string
                                  value:
                                    description: The environment variable value.
                                    type: string
                                  valueFrom:
                                    description: Reference to the secret or config map property to which the environment variable is set.
                                    oneOf:
                                      - properties:
                                          secretKeyRef: {}
                                        required:
                                          - secretKeyRef
                                      - properties:
                                          configMapKeyRef: {}
                                        required:
                                          - configMapKeyRef
                                    properties:
                                      configMapKeyRef:
                                        description: Reference to a key in a config map.
                                        properties:
                                          key:
                                            type: string
                                          name:
                                            type: string
                                          optional:
                                            type: boolean
                                        type: object
                                      secretKeyRef:
                                        description: Reference to a key in a secret.
                                        properties:
                                          key:
                                            type: string
                                          name:
                                            type: string
                                          optional:
                                            type: boolean
                                        type: object
                                    type: object
                                type: object
                              type: array
                            securityContext:
                              description: Security context for the container.
                              properties:
                                allowPrivilegeEscalation:
                                  type: boolean
                                appArmorProfile:
                                  properties:
                                    localhostProfile:
                                      type: string
                                    type:
                                      type: string
                                  type: object
                                capabilities:
                                  properties:
                                    add:
                                      items:
                                        type: string
                                      type: array
                                    drop:
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                privileged:
                                  type: boolean
                                procMount:
                                  type: string
                                readOnlyRootFilesystem:
                                  type: boolean
                                runAsGroup:
                                  type: integer
                                runAsNonRoot:
                                  type: boolean
                                runAsUser:
                                  type: integer
                                seLinuxOptions:
                                  properties:
                                    level:
                                      type: string
                                    role:
                                      type: string
                                    type:
                                      type: string
                                    user:
                                      type: string
                                  type: object
                                seccompProfile:
                                  properties:
                                    localhostProfile:
                                      type: string
                                    type:
                                      type: string
                                  type: object
                                windowsOptions:
                                  properties:
                                    gmsaCredentialSpec:
                                      type: string
                                    gmsaCredentialSpecName:
                                      type: string
                                    hostProcess:
                                      type: boolean
                                    runAsUserName:
                                      type: string
                                  type: object
                              type: object
                            volumeMounts:
                              description: Additional volume mounts which should be applied to the container.
                              items:
                                properties:
                                  mountPath:
                                    type: string
                                  mountPropagation:
                                    type: string
                                  name:
                                    type: string
                                  readOnly:
                                    type: boolean
                                  recursiveReadOnly:
                                    type: string
                                  subPath:
                                    type: string
                                  subPathExpr:
                                    type: string
                                type: object
                              type: array
                          type: object
                        deployment:
                          description: Template for Kafka Exporter `Deployment`.
                          properties:
                            deploymentStrategy:
                              description: Pod replacement strategy for deployment configuration changes. Valid values are `RollingUpdate` and `Recreate`. Defaults to `RollingUpdate`.
                              enum:
                                - RollingUpdate
                                - Recreate
                              type: string
                            metadata:
                              description: Metadata applied to the resource.
                              properties:
                                annotations:
                                  additionalProperties:
                                    type: string
                                  description: Annotations added to the Kubernetes resource.
                                  type: object
                                labels:
                                  additionalProperties:
                                    type: string
                                  description: Labels added to the Kubernetes resource.
                                  type: object
                              type: object
                          type: object
                        pod:
                          description: Template for Kafka Exporter `Pods`.
                          properties:
                            affinity:
                              description: The pod's affinity rules.
                              properties:
                                nodeAffinity:
                                  properties:
                                    preferredDuringSchedulingIgnoredDuringExecution:
                                      items:
                                        properties:
                                          preference:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchFields:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                            type: object
                                          weight:
                                            type: integer
                                        type: object
                                      type: array
                                    requiredDuringSchedulingIgnoredDuringExecution:
                                      properties:
                                        nodeSelectorTerms:
                                          items:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchFields:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                            type: object
                                          type: array
                                      type: object
                                  type: object
                                podAffinity:
                                  properties:
                                    preferredDuringSchedulingIgnoredDuringExecution:
                                      items:
                                        properties:
                                          podAffinityTerm:
                                            properties:
                                              labelSelector:
                                                properties:
                                                  matchExpressions:
                                                    items:
                                                      properties:
                                                        key:
                                                          type: string
                                                        operator:
                                                          type: string
                                                        values:
                                                          items:
                                                            type: string
                                                          type: array
                                                      type: object
                                                    type: array
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: string
                                                    type: object
                                                type: object
                                              matchLabelKeys:
                                                items:
                                                  type: string
                                                type: array
                                              mismatchLabelKeys:
                                                items:
                                                  type: string
                                                type: array
                                              namespaceSelector:
                                                properties:
                                                  matchExpressions:
                                                    items:
                                                      properties:
                                                        key:
                                                          type: string
                                                        operator:
                                                          type: string
                                                        values:
                                                          items:
                                                            type: string
                                                          type: array
                                                      type: object
                                                    type: array
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: string
                                                    type: object
                                                type: object
                                              namespaces:
                                                items:
                                                  type: string
                                                type: array
                                              topologyKey:
                                                type: string
                                            type: object
                                          weight:
                                            type: integer
                                        type: object
                                      type: array
                                    requiredDuringSchedulingIgnoredDuringExecution:
                                      items:
                                        properties:
                                          labelSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels:
                                                additionalProperties:
                                                  type: string
                                                type: object
                                            type: object
                                          matchLabelKeys:
                                            items:
                                              type: string
                                            type: array
                                          mismatchLabelKeys:
                                            items:
                                              type: string
                                            type: array
                                          namespaceSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels:
                                                additionalProperties:
                                                  type: string
                                                type: object
                                            type: object
                                          namespaces:
                                            items:
                                              type: string
                                            type: array
                                          topologyKey:
                                            type: string
                                        type: object
                                      type: array
                                  type: object
                                podAntiAffinity:
                                  properties:
                                    preferredDuringSchedulingIgnoredDuringExecution:
                                      items:
                                        properties:
                                          podAffinityTerm:
                                            properties:
                                              labelSelector:
                                                properties:
                                                  matchExpressions:
                                                    items:
                                                      properties:
                                                        key:
                                                          type: string
                                                        operator:
                                                          type: string
                                                        values:
                                                          items:
                                                            type: string
                                                          type: array
                                                      type: object
                                                    type: array
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: string
                                                    type: object
                                                type: object
                                              matchLabelKeys:
                                                items:
                                                  type: string
                                                type: array
                                              mismatchLabelKeys:
                                                items:
                                                  type: string
                                                type: array
                                              namespaceSelector:
                                                properties:
                                                  matchExpressions:
                                                    items:
                                                      properties:
                                                        key:
                                                          type: string
                                                        operator:
                                                          type: string
                                                        values:
                                                          items:
                                                            type: string
                                                          type: array
                                                      type: object
                                                    type: array
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: string
                                                    type: object
                                                type: object
                                              namespaces:
                                                items:
                                                  type: string
                                                type: array
                                              topologyKey:
                                                type: string
                                            type: object
                                          weight:
                                            type: integer
                                        type: object
                                      type: array
                                    requiredDuringSchedulingIgnoredDuringExecution:
                                      items:
                                        properties:
                                          labelSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels:
                                                additionalProperties:
                                                  type: string
                                                type: object
                                            type: object
                                          matchLabelKeys:
                                            items:
                                              type: string
                                            type: array
                                          mismatchLabelKeys:
                                            items:
                                              type: string
                                            type: array
                                          namespaceSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels:
                                                additionalProperties:
                                                  type: string
                                                type: object
                                            type: object
                                          namespaces:
                                            items:
                                              type: string
                                            type: array
                                          topologyKey:
                                            type: string
                                        type: object
                                      type: array
                                  type: object
                              type: object
                            enableServiceLinks:
                              description: Indicates whether information about services should be injected into Pod's environment variables.
                              type: boolean
                            hostAliases:
                              description: The pod's HostAliases. HostAliases is an optional list of hosts and IPs that will be injected into the Pod's hosts file if specified.
                              items:
                                properties:
                                  hostnames:
                                    items:
                                      type: string
                                    type: array
                                  ip:
                                    type: string
                                type: object
                              type: array
                            imagePullSecrets:
                              description: List of references to secrets in the same namespace to use for pulling any of the images used by this Pod. When the `STRIMZI_IMAGE_PULL_SECRETS` environment variable in Cluster Operator and the `imagePullSecrets` option are specified, only the `imagePullSecrets` variable is used and the `STRIMZI_IMAGE_PULL_SECRETS` variable is ignored.
                              items:
                                properties:
                                  name:
                                    type: string
                                type: object
                              type: array
                            metadata:
                              description: Metadata applied to the resource.
                              properties:
                                annotations:
                                  additionalProperties:
                                    type: string
                                  description: Annotations added to the Kubernetes resource.
                                  type: object
                                labels:
                                  additionalProperties:
                                    type: string
                                  description: Labels added to the Kubernetes resource.
                                  type: object
                              type: object
                            priorityClassName:
                              description: 'The name of the priority class used to assign priority to the pods. '
                              type: string
                            schedulerName:
                              description: The name of the scheduler used to dispatch this `Pod`. If not specified, the default scheduler will be used.
                              type: string
                            securityContext:
                              description: Configures pod-level security attributes and common container settings.
                              properties:
                                appArmorProfile:
                                  properties:
                                    localhostProfile:
                                      type: string
                                    type:
                                      type: string
                                  type: object
                                fsGroup:
                                  type: integer
                                fsGroupChangePolicy:
                                  type: string
                                runAsGroup:
                                  type: integer
                                runAsNonRoot:
                                  type: boolean
                                runAsUser:
                                  type: integer
                                seLinuxOptions:
                                  properties:
                                    level:
                                      type: string
                                    role:
                                      type: string
                                    type:
                                      type: string
                                    user:
                                      type: string
                                  type: object
                                seccompProfile:
                                  properties:
                                    localhostProfile:
                                      type: string
                                    type:
                                      type: string
                                  type: object
                                supplementalGroups:
                                  items:
                                    type: integer
                                  type: array
                                sysctls:
                                  items:
                                    properties:
                                      name:
                                        type: string
                                      value:
                                        type: string
                                    type: object
                                  type: array
                                windowsOptions:
                                  properties:
                                    gmsaCredentialSpec:
                                      type: string
                                    gmsaCredentialSpecName:
                                      type: string
                                    hostProcess:
                                      type: boolean
                                    runAsUserName:
                                      type: string
                                  type: object
                              type: object
                            terminationGracePeriodSeconds:
                              description: The grace period is the duration in seconds after the processes running in the pod are sent a termination signal, and the time when the processes are forcibly halted with a kill signal. Set this value to longer than the expected cleanup time for your process. Value must be a non-negative integer. A zero value indicates delete immediately. You might need to increase the grace period for very large Kafka clusters, so that the Kafka brokers have enough time to transfer their work to another broker before they are terminated. Defaults to 30 seconds.
                              minimum: 0
                              type: integer
                            tmpDirSizeLimit:
                              description: Defines the total amount of pod memory allocated for the temporary `EmptyDir` volume `/tmp`. Specify the allocation in memory units, for example, `100Mi` for 100 mebibytes. Default value is `5Mi`. The `/tmp` volume is backed by pod memory, not disk storage, so avoid setting a high value as it consumes pod memory resources.
                              pattern: ^([0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$
                              type: string
                            tolerations:
                              description: The pod's tolerations.
                              items:
                                properties:
                                  effect:
                                    type: string
                                  key:
                                    type: string
                                  operator:
                                    type: string
                                  tolerationSeconds:
                                    type: integer
                                  value:
                                    type: string
                                type: object
                              type: array
                            topologySpreadConstraints:
                              description: The pod's topology spread constraints.
                              items:
                                properties:
                                  labelSelector:
                                    properties:
                                      matchExpressions:
                                        items:
                                          properties:
                                            key:
                                              type: string
                                            operator:
                                              type: string
                                            values:
                                              items:
                                                type: string
                                              type: array
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        type: object
                                    type: object
                                  matchLabelKeys:
                                    items:
                                      type: string
                                    type: array
                                  maxSkew:
                                    type: integer
                                  minDomains:
                                    type: integer
                                  nodeAffinityPolicy:
                                    type: string
                                  nodeTaintsPolicy:
                                    type: string
                                  topologyKey:
                                    type: string
                                  whenUnsatisfiable:
                                    type: string
                                type: object
                              type: array
                            volumes:
                              description: Additional volumes that can be mounted to the pod.
                              items:
                                oneOf:
                                  - properties:
                                      configMap: {}
                                      csi: {}
                                      emptyDir: {}
                                      persistentVolumeClaim: {}
                                      secret: {}
                                properties:
                                  configMap:
                                    description: ConfigMap to use to populate the volume.
                                    properties:
                                      defaultMode:
                                        type: integer
                                      items:
                                        items:
                                          properties:
                                            key:
                                              type: string
                                            mode:
                                              type: integer
                                            path:
                                              type: string
                                          type: object
                                        type: array
                                      name:
                                        type: string
                                      optional:
                                        type: boolean
                                    type: object
                                  csi:
                                    description: CSIVolumeSource object to use to populate the volume.
                                    properties:
                                      driver:
                                        type: string
                                      fsType:
                                        type: string
                                      nodePublishSecretRef:
                                        properties:
                                          name:
                                            type: string
                                        type: object
                                      readOnly:
                                        type: boolean
                                      volumeAttributes:
                                        additionalProperties:
                                          type: string
                                        type: object
                                    type: object
                                  emptyDir:
                                    description: EmptyDir to use to populate the volume.
                                    properties:
                                      medium:
                                        type: string
                                      sizeLimit:
                                        properties:
                                          amount:
                                            type: string
                                          format:
                                            type: string
                                        type: object
                                    type: object
                                  name:
                                    description: Name to use for the volume. Required.
                                    type: string
                                  persistentVolumeClaim:
                                    description: PersistentVolumeClaim object to use to populate the volume.
                                    properties:
                                      claimName:
                                        type: string
                                      readOnly:
                                        type: boolean
                                    type: object
                                  secret:
                                    description: Secret to use populate the volume.
                                    properties:
                                      defaultMode:
                                        type: integer
                                      items:
                                        items:
                                          properties:
                                            key:
                                              type: string
                                            mode:
                                              type: integer
                                            path:
                                              type: string
                                          type: object
                                        type: array
                                      optional:
                                        type: boolean
                                      secretName:
                                        type: string
                                    type: object
                                type: object
                              type: array
                          type: object
                        service:
                          description: Template for Kafka Exporter `Service`.
                          properties:
                            metadata:
                              description: Metadata applied to the resource.
                              properties:
                                annotations:
                                  additionalProperties:
                                    type: string
                                  description: Annotations added to the Kubernetes resource.
                                  type: object
                                labels:
                                  additionalProperties:
                                    type: string
                                  description: Labels added to the Kubernetes resource.
                                  type: object
                              type: object
                          type: object
                        serviceAccount:
                          description: Template for the Kafka Exporter service account.
                          properties:
                            metadata:
                              description: Metadata applied to the resource.
                              properties:
                                annotations:
                                  additionalProperties:
                                    type: string
                                  description: Annotations added to the Kubernetes resource.
                                  type: object
                                labels:
                                  additionalProperties:
                                    type: string
                                  description: Labels added to the Kubernetes resource.
                                  type: object
                              type: object
                          type: object
                      type: object
                    topicExcludeRegex:
                      description: Regular expression to specify which topics to exclude.
                      type: string
                    topicRegex:
                      description: Regular expression to specify which topics to collect. Default value is `.*`.
                      type: string
                  type: object
                maintenanceTimeWindows:
                  description: A list of time windows for maintenance tasks (that is, certificates renewal). Each time window is defined by a cron expression.
                  items:
                    type: string
                  type: array
                zookeeper:
                  description: Configuration of the ZooKeeper cluster. This section is required when running a ZooKeeper-based Apache Kafka cluster.
                  properties:
                    config:
                      description: 'The ZooKeeper broker config. Properties with the following prefixes cannot be set: server., dataDir, dataLogDir, clientPort, authProvider, quorum.auth, requireClientAuthScheme, snapshot.trust.empty, standaloneEnabled, reconfigEnabled, 4lw.commands.whitelist, secureClientPort, ssl., serverCnxnFactory, sslQuorum (with the exception of: ssl.protocol, ssl.quorum.protocol, ssl.enabledProtocols, ssl.quorum.enabledProtocols, ssl.ciphersuites, ssl.quorum.ciphersuites, ssl.hostnameVerification, ssl.quorum.hostnameVerification).'
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    image:
                      description: The container image used for ZooKeeper pods. If no image name is explicitly specified, it is determined based on the Kafka version set in `spec.kafka.version`. The image names are specifically mapped to corresponding versions in the Cluster Operator configuration.
                      type: string
                    jmxOptions:
                      description: JMX Options for Zookeeper nodes.
                      properties:
                        authentication:
                          description: Authentication configuration for connecting to the JMX port.
                          properties:
                            type:
                              description: Authentication type. Currently the only supported types are `password`.`password` type creates a username and protected port with no TLS.
                              enum:
                                - password
                              type: string
                          required:
                            - type
                          type: object
                      type: object
                    jvmOptions:
                      description: JVM Options for pods.
                      properties:
                        -XX:
                          additionalProperties:
                            type: string
                          description: A map of -XX options to the JVM.
                          type: object
                        -Xms:
                          description: -Xms option to to the JVM.
                          pattern: ^[0-9]+[mMgG]?$
                          type: string
                        -Xmx:
                          description: -Xmx option to to the JVM.
                          pattern: ^[0-9]+[mMgG]?$
                          type: string
                        gcLoggingEnabled:
                          description: Specifies whether the Garbage Collection logging is enabled. The default is false.
                          type: boolean
                        javaSystemProperties:
                          description: A map of additional system properties which will be passed using the `-D` option to the JVM.
                          items:
                            properties:
                              name:
                                description: The system property name.
                                type: string
                              value:
                                description: The system property value.
                                type: string
                            type: object
                          type: array
                      type: object
                    livenessProbe:
                      description: Pod liveness checking.
                      properties:
                        failureThreshold:
                          description: Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
                          minimum: 1
                          type: integer
                        initialDelaySeconds:
                          description: The initial delay before first the health is first checked. Default to 15 seconds. Minimum value is 0.
                          minimum: 0
                          type: integer
                        periodSeconds:
                          description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
                          minimum: 1
                          type: integer
                        successThreshold:
                          description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
                          minimum: 1
                          type: integer
                        timeoutSeconds:
                          description: The timeout for each attempted health check. Default to 5 seconds. Minimum value is 1.
                          minimum: 1
                          type: integer
                      type: object
                    logging:
                      description: Logging configuration for ZooKeeper.
                      properties:
                        loggers:
                          additionalProperties:
                            type: string
                          description: A Map from logger name to logger level.
                          type: object
                        type:
                          description: Logging type, must be either 'inline' or 'external'.
                          enum:
                            - inline
                            - external
                          type: string
                        valueFrom:
                          description: '`ConfigMap` entry where the logging configuration is stored. '
                          properties:
                            configMapKeyRef:
                              description: Reference to the key in the ConfigMap containing the configuration.
                              properties:
                                key:
                                  type: string
                                name:
                                  type: string
                                optional:
                                  type: boolean
                              type: object
                          type: object
                      required:
                        - type
                      type: object
                    metricsConfig:
                      description: Metrics configuration.
                      properties:
                        type:
                          description: Metrics type. Only 'jmxPrometheusExporter' supported currently.
                          enum:
                            - jmxPrometheusExporter
                          type: string
                        valueFrom:
                          description: 'ConfigMap entry where the Prometheus JMX Exporter configuration is stored. '
                          properties:
                            configMapKeyRef:
                              description: Reference to the key in the ConfigMap containing the configuration.
                              properties:
                                key:
                                  type: string
                                name:
                                  type: string
                                optional:
                                  type: boolean
                              type: object
                          type: object
                      required:
                        - type
                        - valueFrom
                      type: object
                    readinessProbe:
                      description: Pod readiness checking.
                      properties:
                        failureThreshold:
                          description: Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
                          minimum: 1
                          type: integer
                        initialDelaySeconds:
                          description: The initial delay before first the health is first checked. Default to 15 seconds. Minimum value is 0.
                          minimum: 0
                          type: integer
                        periodSeconds:
                          description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
                          minimum: 1
                          type: integer
                        successThreshold:
                          description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
                          minimum: 1
                          type: integer
                        timeoutSeconds:
                          description: The timeout for each attempted health check. Default to 5 seconds. Minimum value is 1.
                          minimum: 1
                          type: integer
                      type: object
                    replicas:
                      description: The number of pods in the cluster.
                      minimum: 1
                      type: integer
                    resources:
                      description: CPU and memory resources to reserve.
                      properties:
                        claims:
                          items:
                            properties:
                              name:
                                type: string
                            type: object
                          type: array
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          type: object
                      type: object
                    storage:
                      description: Storage configuration (disk). Cannot be updated.
                      properties:
                        class:
                          description: The storage class to use for dynamic volume allocation.
                          type: string
                        deleteClaim:
                          description: Specifies if the persistent volume claim has to be deleted when the cluster is un-deployed.
                          type: boolean
                        id:
                          description: Storage identification number. Mandatory for storage volumes defined with a `jbod` storage type configuration.
                          minimum: 0
                          type: integer
                        kraftMetadata:
                          description: Specifies whether this volume should be used for storing KRaft metadata. This property is optional. When set, the only currently supported value is `shared`. At most one volume can have this property set.
                          enum:
                            - shared
                          type: string
                        overrides:
                          description: Overrides for individual brokers. The `overrides` field allows you to specify a different configuration for different brokers.
                          items:
                            properties:
                              broker:
                                description: Id of the kafka broker (broker identifier).
                                type: integer
                              class:
                                description: The storage class to use for dynamic volume allocation for this broker.
                                type: string
                            type: object
                          type: array
                        selector:
                          additionalProperties:
                            type: string
                          description: Specifies a specific persistent volume to use. It contains key:value pairs representing labels for selecting such a volume.
                          type: object
                        size:
                          description: When `type=persistent-claim`, defines the size of the persistent volume claim, such as 100Gi. Mandatory when `type=persistent-claim`.
                          type: string
                        sizeLimit:
                          description: When type=ephemeral, defines the total amount of local storage required for this EmptyDir volume (for example 1Gi).
                          pattern: ^([0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$
                          type: string
                        type:
                          description: Storage type, must be either 'ephemeral' or 'persistent-claim'.
                          enum:
                            - ephemeral
                            - persistent-claim
                          type: string
                      required:
                        - type
                      type: object
                    template:
                      description: Template for ZooKeeper cluster resources. The template allows users to specify how the Kubernetes resources are generated.
                      properties:
                        clientService:
                          description: Template for ZooKeeper client `Service`.
                          properties:
                            ipFamilies:
                              description: Specifies the IP Families used by the service. Available options are `IPv4` and `IPv6`. If unspecified, Kubernetes will choose the default value based on the `ipFamilyPolicy` setting.
                              items:
                                enum:
                                  - IPv4
                                  - IPv6
                                type: string
                              type: array
                            ipFamilyPolicy:
                              description: Specifies the IP Family Policy used by the service. Available options are `SingleStack`, `PreferDualStack` and `RequireDualStack`. `SingleStack` is for a single IP family. `PreferDualStack` is for two IP families on dual-stack configured clusters or a single IP family on single-stack clusters. `RequireDualStack` fails unless there are two IP families on dual-stack configured clusters. If unspecified, Kubernetes will choose the default value based on the service type.
                              enum:
                                - SingleStack
                                - PreferDualStack
                                - RequireDualStack
                              type: string
                            metadata:
                              description: Metadata applied to the resource.
                              properties:
                                annotations:
                                  additionalProperties:
                                    type: string
                                  description: Annotations added to the Kubernetes resource.
                                  type: object
                                labels:
                                  additionalProperties:
                                    type: string
                                  description: Labels added to the Kubernetes resource.
                                  type: object
                              type: object
                          type: object
                        jmxSecret:
                          description: Template for Secret of the Zookeeper Cluster JMX authentication.
                          properties:
                            metadata:
                              description: Metadata applied to the resource.
                              properties:
                                annotations:
                                  additionalProperties:
                                    type: string
                                  description: Annotations added to the Kubernetes resource.
                                  type: object
                                labels:
                                  additionalProperties:
                                    type: string
                                  description: Labels added to the Kubernetes resource.
                                  type: object
                              type: object
                          type: object
                        nodesService:
                          description: Template for ZooKeeper nodes `Service`.
                          properties:
                            ipFamilies:
                              description: Specifies the IP Families used by the service. Available options are `IPv4` and `IPv6`. If unspecified, Kubernetes will choose the default value based on the `ipFamilyPolicy` setting.
                              items:
                                enum:
                                  - IPv4
                                  - IPv6
                                type: string
                              type: array
                            ipFamilyPolicy:
                              description: Specifies the IP Family Policy used by the service. Available options are `SingleStack`, `PreferDualStack` and `RequireDualStack`. `SingleStack` is for a single IP family. `PreferDualStack` is for two IP families on dual-stack configured clusters or a single IP family on single-stack clusters. `RequireDualStack` fails unless there are two IP families on dual-stack configured clusters. If unspecified, Kubernetes will choose the default value based on the service type.
                              enum:
                                - SingleStack
                                - PreferDualStack
                                - RequireDualStack
                              type: string
                            metadata:
                              description: Metadata applied to the resource.
                              properties:
                                annotations:
                                  additionalProperties:
                                    type: string
                                  description: Annotations added to the Kubernetes resource.
                                  type: object
                                labels:
                                  additionalProperties:
                                    type: string
                                  description: Labels added to the Kubernetes resource.
                                  type: object
                              type: object
                          type: object
                        persistentVolumeClaim:
                          description: Template for all ZooKeeper `PersistentVolumeClaims`.
                          properties:
                            metadata:
                              description: Metadata applied to the resource.
                              properties:
                                annotations:
                                  additionalProperties:
                                    type: string
                                  description: Annotations added to the Kubernetes resource.
                                  type: object
                                labels:
                                  additionalProperties:
                                    type: string
                                  description: Labels added to the Kubernetes resource.
                                  type: object
                              type: object
                          type: object
                        pod:
                          description: Template for ZooKeeper `Pods`.
                          properties:
                            affinity:
                              description: The pod's affinity rules.
                              properties:
                                nodeAffinity:
                                  properties:
                                    preferredDuringSchedulingIgnoredDuringExecution:
                                      items:
                                        properties:
                                          preference:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchFields:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                            type: object
                                          weight:
                                            type: integer
                                        type: object
                                      type: array
                                    requiredDuringSchedulingIgnoredDuringExecution:
                                      properties:
                                        nodeSelectorTerms:
                                          items:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchFields:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                            type: object
                                          type: array
                                      type: object
                                  type: object
                                podAffinity:
                                  properties:
                                    preferredDuringSchedulingIgnoredDuringExecution:
                                      items:
                                        properties:
                                          podAffinityTerm:
                                            properties:
                                              labelSelector:
                                                properties:
                                                  matchExpressions:
                                                    items:
                                                      properties:
                                                        key:
                                                          type: string
                                                        operator:
                                                          type: string
                                                        values:
                                                          items:
                                                            type: string
                                                          type: array
                                                      type: object
                                                    type: array
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: string
                                                    type: object
                                                type: object
                                              matchLabelKeys:
                                                items:
                                                  type: string
                                                type: array
                                              mismatchLabelKeys:
                                                items:
                                                  type: string
                                                type: array
                                              namespaceSelector:
                                                properties:
                                                  matchExpressions:
                                                    items:
                                                      properties:
                                                        key:
                                                          type: string
                                                        operator:
                                                          type: string
                                                        values:
                                                          items:
                                                            type: string
                                                          type: array
                                                      type: object
                                                    type: array
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: string
                                                    type: object
                                                type: object
                                              namespaces:
                                                items:
                                                  type: string
                                                type: array
                                              topologyKey:
                                                type: string
                                            type: object
                                          weight:
                                            type: integer
                                        type: object
                                      type: array
                                    requiredDuringSchedulingIgnoredDuringExecution:
                                      items:
                                        properties:
                                          labelSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels:
                                                additionalProperties:
                                                  type: string
                                                type: object
                                            type: object
                                          matchLabelKeys:
                                            items:
                                              type: string
                                            type: array
                                          mismatchLabelKeys:
                                            items:
                                              type: string
                                            type: array
                                          namespaceSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels:
                                                additionalProperties:
                                                  type: string
                                                type: object
                                            type: object
                                          namespaces:
                                            items:
                                              type: string
                                            type: array
                                          topologyKey:
                                            type: string
                                        type: object
                                      type: array
                                  type: object
                                podAntiAffinity:
                                  properties:
                                    preferredDuringSchedulingIgnoredDuringExecution:
                                      items:
                                        properties:
                                          podAffinityTerm:
                                            properties:
                                              labelSelector:
                                                properties:
                                                  matchExpressions:
                                                    items:
                                                      properties:
                                                        key:
                                                          type: string
                                                        operator:
                                                          type: string
                                                        values:
                                                          items:
                                                            type: string
                                                          type: array
                                                      type: object
                                                    type: array
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: string
                                                    type: object
                                                type: object
                                              matchLabelKeys:
                                                items:
                                                  type: string
                                                type: array
                                              mismatchLabelKeys:
                                                items:
                                                  type: string
                                                type: array
                                              namespaceSelector:
                                                properties:
                                                  matchExpressions:
                                                    items:
                                                      properties:
                                                        key:
                                                          type: string
                                                        operator:
                                                          type: string
                                                        values:
                                                          items:
                                                            type: string
                                                          type: array
                                                      type: object
                                                    type: array
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: string
                                                    type: object
                                                type: object
                                              namespaces:
                                                items:
                                                  type: string
                                                type: array
                                              topologyKey:
                                                type: string
                                            type: object
                                          weight:
                                            type: integer
                                        type: object
                                      type: array
                                    requiredDuringSchedulingIgnoredDuringExecution:
                                      items:
                                        properties:
                                          labelSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels:
                                                additionalProperties:
                                                  type: string
                                                type: object
                                            type: object
                                          matchLabelKeys:
                                            items:
                                              type: string
                                            type: array
                                          mismatchLabelKeys:
                                            items:
                                              type: string
                                            type: array
                                          namespaceSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels:
                                                additionalProperties:
                                                  type: string
                                                type: object
                                            type: object
                                          namespaces:
                                            items:
                                              type: string
                                            type: array
                                          topologyKey:
                                            type: string
                                        type: object
                                      type: array
                                  type: object
                              type: object
                            enableServiceLinks:
                              description: Indicates whether information about services should be injected into Pod's environment variables.
                              type: boolean
                            hostAliases:
                              description: The pod's HostAliases. HostAliases is an optional list of hosts and IPs that will be injected into the Pod's hosts file if specified.
                              items:
                                properties:
                                  hostnames:
                                    items:
                                      type: string
                                    type: array
                                  ip:
                                    type: string
                                type: object
                              type: array
                            imagePullSecrets:
                              description: List of references to secrets in the same namespace to use for pulling any of the images used by this Pod. When the `STRIMZI_IMAGE_PULL_SECRETS` environment variable in Cluster Operator and the `imagePullSecrets` option are specified, only the `imagePullSecrets` variable is used and the `STRIMZI_IMAGE_PULL_SECRETS` variable is ignored.
                              items:
                                properties:
                                  name:
                                    type: string
                                type: object
                              type: array
                            metadata:
                              description: Metadata applied to the resource.
                              properties:
                                annotations:
                                  additionalProperties:
                                    type: string
                                  description: Annotations added to the Kubernetes resource.
                                  type: object
                                labels:
                                  additionalProperties:
                                    type: string
                                  description: Labels added to the Kubernetes resource.
                                  type: object
                              type: object
                            priorityClassName:
                              description: 'The name of the priority class used to assign priority to the pods. '
                              type: string
                            schedulerName:
                              description: The name of the scheduler used to dispatch this `Pod`. If not specified, the default scheduler will be used.
                              type: string
                            securityContext:
                              description: Configures pod-level security attributes and common container settings.
                              properties:
                                appArmorProfile:
                                  properties:
                                    localhostProfile:
                                      type: string
                                    type:
                                      type: string
                                  type: object
                                fsGroup:
                                  type: integer
                                fsGroupChangePolicy:
                                  type: string
                                runAsGroup:
                                  type: integer
                                runAsNonRoot:
                                  type: boolean
                                runAsUser:
                                  type: integer
                                seLinuxOptions:
                                  properties:
                                    level:
                                      type: string
                                    role:
                                      type: string
                                    type:
                                      type: string
                                    user:
                                      type: string
                                  type: object
                                seccompProfile:
                                  properties:
                                    localhostProfile:
                                      type: string
                                    type:
                                      type: string
                                  type: object
                                supplementalGroups:
                                  items:
                                    type: integer
                                  type: array
                                sysctls:
                                  items:
                                    properties:
                                      name:
                                        type: string
                                      value:
                                        type: string
                                    type: object
                                  type: array
                                windowsOptions:
                                  properties:
                                    gmsaCredentialSpec:
                                      type: string
                                    gmsaCredentialSpecName:
                                      type: string
                                    hostProcess:
                                      type: boolean
                                    runAsUserName:
                                      type: string
                                  type: object
                              type: object
                            terminationGracePeriodSeconds:
                              description: The grace period is the duration in seconds after the processes running in the pod are sent a termination signal, and the time when the processes are forcibly halted with a kill signal. Set this value to longer than the expected cleanup time for your process. Value must be a non-negative integer. A zero value indicates delete immediately. You might need to increase the grace period for very large Kafka clusters, so that the Kafka brokers have enough time to transfer their work to another broker before they are terminated. Defaults to 30 seconds.
                              minimum: 0
                              type: integer
                            tmpDirSizeLimit:
                              description: Defines the total amount of pod memory allocated for the temporary `EmptyDir` volume `/tmp`. Specify the allocation in memory units, for example, `100Mi` for 100 mebibytes. Default value is `5Mi`. The `/tmp` volume is backed by pod memory, not disk storage, so avoid setting a high value as it consumes pod memory resources.
                              pattern: ^([0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$
                              type: string
                            tolerations:
                              description: The pod's tolerations.
                              items:
                                properties:
                                  effect:
                                    type: string
                                  key:
                                    type: string
                                  operator:
                                    type: string
                                  tolerationSeconds:
                                    type: integer
                                  value:
                                    type: string
                                type: object
                              type: array
                            topologySpreadConstraints:
                              description: The pod's topology spread constraints.
                              items:
                                properties:
                                  labelSelector:
                                    properties:
                                      matchExpressions:
                                        items:
                                          properties:
                                            key:
                                              type: string
                                            operator:
                                              type: string
                                            values:
                                              items:
                                                type: string
                                              type: array
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        type: object
                                    type: object
                                  matchLabelKeys:
                                    items:
                                      type: string
                                    type: array
                                  maxSkew:
                                    type: integer
                                  minDomains:
                                    type: integer
                                  nodeAffinityPolicy:
                                    type: string
                                  nodeTaintsPolicy:
                                    type: string
                                  topologyKey:
                                    type: string
                                  whenUnsatisfiable:
                                    type: string
                                type: object
                              type: array
                            volumes:
                              description: Additional volumes that can be mounted to the pod.
                              items:
                                oneOf:
                                  - properties:
                                      configMap: {}
                                      csi: {}
                                      emptyDir: {}
                                      persistentVolumeClaim: {}
                                      secret: {}
                                properties:
                                  configMap:
                                    description: ConfigMap to use to populate the volume.
                                    properties:
                                      defaultMode:
                                        type: integer
                                      items:
                                        items:
                                          properties:
                                            key:
                                              type: string
                                            mode:
                                              type: integer
                                            path:
                                              type: string
                                          type: object
                                        type: array
                                      name:
                                        type: string
                                      optional:
                                        type: boolean
                                    type: object
                                  csi:
                                    description: CSIVolumeSource object to use to populate the volume.
                                    properties:
                                      driver:
                                        type: string
                                      fsType:
                                        type: string
                                      nodePublishSecretRef:
                                        properties:
                                          name:
                                            type: string
                                        type: object
                                      readOnly:
                                        type: boolean
                                      volumeAttributes:
                                        additionalProperties:
                                          type: string
                                        type: object
                                    type: object
                                  emptyDir:
                                    description: EmptyDir to use to populate the volume.
                                    properties:
                                      medium:
                                        type: string
                                      sizeLimit:
                                        properties:
                                          amount:
                                            type: string
                                          format:
                                            type: string
                                        type: object
                                    type: object
                                  name:
                                    description: Name to use for the volume. Required.
                                    type: string
                                  persistentVolumeClaim:
                                    description: PersistentVolumeClaim object to use to populate the volume.
                                    properties:
                                      claimName:
                                        type: string
                                      readOnly:
                                        type: boolean
                                    type: object
                                  secret:
                                    description: Secret to use populate the volume.
                                    properties:
                                      defaultMode:
                                        type: integer
                                      items:
                                        items:
                                          properties:
                                            key:
                                              type: string
                                            mode:
                                              type: integer
                                            path:
                                              type: string
                                          type: object
                                        type: array
                                      optional:
                                        type: boolean
                                      secretName:
                                        type: string
                                    type: object
                                type: object
                              type: array
                          type: object
                        podDisruptionBudget:
                          description: Template for ZooKeeper `PodDisruptionBudget`.
                          properties:
                            maxUnavailable:
                              description: Maximum number of unavailable pods to allow automatic Pod eviction. A Pod eviction is allowed when the `maxUnavailable` number of pods or fewer are unavailable after the eviction. Setting this value to 0 prevents all voluntary evictions, so the pods must be evicted manually. Defaults to 1.
                              minimum: 0
                              type: integer
                            metadata:
                              description: Metadata to apply to the `PodDisruptionBudgetTemplate` resource.
                              properties:
                                annotations:
                                  additionalProperties:
                                    type: string
                                  description: Annotations added to the Kubernetes resource.
                                  type: object
                                labels:
                                  additionalProperties:
                                    type: string
                                  description: Labels added to the Kubernetes resource.
                                  type: object
                              type: object
                          type: object
                        podSet:
                          description: Template for ZooKeeper `StrimziPodSet` resource.
                          properties:
                            metadata:
                              description: Metadata applied to the resource.
                              properties:
                                annotations:
                                  additionalProperties:
                                    type: string
                                  description: Annotations added to the Kubernetes resource.
                                  type: object
                                labels:
                                  additionalProperties:
                                    type: string
                                  description: Labels added to the Kubernetes resource.
                                  type: object
                              type: object
                          type: object
                        serviceAccount:
                          description: Template for the ZooKeeper service account.
                          properties:
                            metadata:
                              description: Metadata applied to the resource.
                              properties:
                                annotations:
                                  additionalProperties:
                                    type: string
                                  description: Annotations added to the Kubernetes resource.
                                  type: object
                                labels:
                                  additionalProperties:
                                    type: string
                                  description: Labels added to the Kubernetes resource.
                                  type: object
                              type: object
                          type: object
                        statefulset:
                          description: Template for ZooKeeper `StatefulSet`.
                          properties:
                            metadata:
                              description: Metadata applied to the resource.
                              properties:
                                annotations:
                                  additionalProperties:
                                    type: string
                                  description: Annotations added to the Kubernetes resource.
                                  type: object
                                labels:
                                  additionalProperties:
                                    type: string
                                  description: Labels added to the Kubernetes resource.
                                  type: object
                              type: object
                            podManagementPolicy:
                              description: PodManagementPolicy which will be used for this StatefulSet. Valid values are `Parallel` and `OrderedReady`. Defaults to `Parallel`.
                              enum:
                                - OrderedReady
                                - Parallel
                              type: string
                          type: object
                        zookeeperContainer:
                          description: Template for the ZooKeeper container.
                          properties:
                            env:
                              description: Environment variables which should be applied to the container.
                              items:
                                oneOf:
                                  - properties:
                                      value: {}
                                    required:
                                      - value
                                  - properties:
                                      valueFrom: {}
                                    required:
                                      - valueFrom
                                properties:
                                  name:
                                    description: The environment variable key.
                                    type: string
                                  value:
                                    description: The environment variable value.
                                    type: string
                                  valueFrom:
                                    description: Reference to the secret or config map property to which the environment variable is set.
                                    oneOf:
                                      - properties:
                                          secretKeyRef: {}
                                        required:
                                          - secretKeyRef
                                      - properties:
                                          configMapKeyRef: {}
                                        required:
                                          - configMapKeyRef
                                    properties:
                                      configMapKeyRef:
                                        description: Reference to a key in a config map.
                                        properties:
                                          key:
                                            type: string
                                          name:
                                            type: string
                                          optional:
                                            type: boolean
                                        type: object
                                      secretKeyRef:
                                        description: Reference to a key in a secret.
                                        properties:
                                          key:
                                            type: string
                                          name:
                                            type: string
                                          optional:
                                            type: boolean
                                        type: object
                                    type: object
                                type: object
                              type: array
                            securityContext:
                              description: Security context for the container.
                              properties:
                                allowPrivilegeEscalation:
                                  type: boolean
                                appArmorProfile:
                                  properties:
                                    localhostProfile:
                                      type: string
                                    type:
                                      type: string
                                  type: object
                                capabilities:
                                  properties:
                                    add:
                                      items:
                                        type: string
                                      type: array
                                    drop:
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                privileged:
                                  type: boolean
                                procMount:
                                  type: string
                                readOnlyRootFilesystem:
                                  type: boolean
                                runAsGroup:
                                  type: integer
                                runAsNonRoot:
                                  type: boolean
                                runAsUser:
                                  type: integer
                                seLinuxOptions:
                                  properties:
                                    level:
                                      type: string
                                    role:
                                      type: string
                                    type:
                                      type: string
                                    user:
                                      type: string
                                  type: object
                                seccompProfile:
                                  properties:
                                    localhostProfile:
                                      type: string
                                    type:
                                      type: string
                                  type: object
                                windowsOptions:
                                  properties:
                                    gmsaCredentialSpec:
                                      type: string
                                    gmsaCredentialSpecName:
                                      type: string
                                    hostProcess:
                                      type: boolean
                                    runAsUserName:
                                      type: string
                                  type: object
                              type: object
                            volumeMounts:
                              description: Additional volume mounts which should be applied to the container.
                              items:
                                properties:
                                  mountPath:
                                    type: string
                                  mountPropagation:
                                    type: string
                                  name:
                                    type: string
                                  readOnly:
                                    type: boolean
                                  recursiveReadOnly:
                                    type: string
                                  subPath:
                                    type: string
                                  subPathExpr:
                                    type: string
                                type: object
                              type: array
                          type: object
                      type: object
                  required:
                    - replicas
                    - storage
                  type: object
              required:
                - kafka
              type: object
            status:
              description: The status of the Kafka and ZooKeeper clusters, and Topic Operator.
              properties:
                autoRebalance:
                  description: The status of an auto-rebalancing triggered by a cluster scaling request.
                  properties:
                    lastTransitionTime:
                      description: The timestamp of the latest auto-rebalancing state update.
                      type: string
                    modes:
                      description: "List of modes where an auto-rebalancing operation is either running or queued. \nEach mode entry (`add-brokers` or `remove-brokers`) includes one of the following: \n\n* Broker IDs for a current auto-rebalance. \n* Broker IDs for a queued auto-rebalance (if a previous rebalance is still in progress)."
                      items:
                        properties:
                          brokers:
                            description: "List of broker IDs involved in an auto-rebalancing operation related to the current mode. \nThe list contains one of the following: \n\n* Broker IDs for a current auto-rebalance. \n* Broker IDs for a queued auto-rebalance (if a previous auto-rebalance is still in progress). \n"
                            items:
                              type: integer
                            type: array
                          mode:
                            description: Mode for which there is an auto-rebalancing operation in progress or queued, when brokers are added or removed. The possible modes are `add-brokers` and `remove-brokers`.
                            enum:
                              - add-brokers
                              - remove-brokers
                            type: string
                        type: object
                      type: array
                    state:
                      description: "The current state of an auto-rebalancing operation. Possible values are: \n\n* `Idle` as the initial state when an auto-rebalancing is requested or as final state when it completes or fails.\n* `RebalanceOnScaleDown` if an auto-rebalance related to a scale-down operation is running.\n* `RebalanceOnScaleUp` if an auto-rebalance related to a scale-up operation is running."
                      enum:
                        - Idle
                        - RebalanceOnScaleDown
                        - RebalanceOnScaleUp
                      type: string
                  type: object
                clusterId:
                  description: Kafka cluster Id.
                  type: string
                conditions:
                  description: List of status conditions.
                  items:
                    properties:
                      lastTransitionTime:
                        description: Last time the condition of a type changed from one status to another. The required format is 'yyyy-MM-ddTHH:mm:ssZ', in the UTC time zone.
                        type: string
                      message:
                        description: Human-readable message indicating details about the condition's last transition.
                        type: string
                      reason:
                        description: The reason for the condition's last transition (a single word in CamelCase).
                        type: string
                      status:
                        description: The status of the condition, either True, False or Unknown.
                        type: string
                      type:
                        description: The unique identifier of a condition, used to distinguish between other conditions in the resource.
                        type: string
                    type: object
                  type: array
                kafkaMetadataState:
                  description: 'Defines where cluster metadata are stored. Possible values are: ZooKeeper if the metadata are stored in ZooKeeper; KRaftMigration if the controllers are connected to ZooKeeper, brokers are being rolled with Zookeeper migration enabled and connection information to controllers, and the metadata migration process is running; KRaftDualWriting if the metadata migration process finished and the cluster is in dual-write mode; KRaftPostMigration if the brokers are fully KRaft-based but controllers being rolled to disconnect from ZooKeeper; PreKRaft if brokers and controller are fully KRaft-based, metadata are stored in KRaft, but ZooKeeper must be deleted; KRaft if the metadata are stored in KRaft.'
                  enum:
                    - ZooKeeper
                    - KRaftMigration
                    - KRaftDualWriting
                    - KRaftPostMigration
                    - PreKRaft
                    - KRaft
                  type: string
                kafkaMetadataVersion:
                  description: The KRaft metadata.version currently used by the Kafka cluster.
                  type: string
                kafkaNodePools:
                  description: List of the KafkaNodePools used by this Kafka cluster.
                  items:
                    properties:
                      name:
                        description: The name of the KafkaNodePool used by this Kafka resource.
                        type: string
                    type: object
                  type: array
                kafkaVersion:
                  description: The version of Kafka currently deployed in the cluster.
                  type: string
                listeners:
                  description: Addresses of the internal and external listeners.
                  items:
                    properties:
                      addresses:
                        description: A list of the addresses for this listener.
                        items:
                          properties:
                            host:
                              description: The DNS name or IP address of the Kafka bootstrap service.
                              type: string
                            port:
                              description: The port of the Kafka bootstrap service.
                              type: integer
                          type: object
                        type: array
                      bootstrapServers:
                        description: A comma-separated list of `host:port` pairs for connecting to the Kafka cluster using this listener.
                        type: string
                      certificates:
                        description: A list of TLS certificates which can be used to verify the identity of the server when connecting to the given listener. Set only for `tls` and `external` listeners.
                        items:
                          type: string
                        type: array
                      name:
                        description: The name of the listener.
                        type: string
                      type:
                        description: The name of the listener.
                        type: string
                    type: object
                  type: array
                observedGeneration:
                  description: The generation of the CRD that was last reconciled by the operator.
                  type: integer
                operatorLastSuccessfulVersion:
                  description: The version of the Strimzi Cluster Operator which performed the last successful reconciliation.
                  type: string
                registeredNodeIds:
                  description: Registered node IDs used by this Kafka cluster. This field is used for internal purposes only and will be removed in the future.
                  items:
                    type: integer
                  type: array
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    app: strimzi
    strimzi.io/crd-install: "true"
  name: kafkabridges.kafka.strimzi.io
spec:
  conversion:
    strategy: None
  group: kafka.strimzi.io
  names:
    categories:
      - strimzi
    kind: KafkaBridge
    listKind: KafkaBridgeList
    plural: kafkabridges
    shortNames:
      - kb
    singular: kafkabridge
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - description: The desired number of Kafka Bridge replicas
          jsonPath: .spec.replicas
          name: Desired replicas
          type: integer
        - description: The boostrap servers
          jsonPath: .spec.bootstrapServers
          name: Bootstrap Servers
          priority: 1
          type: string
        - description: The state of the custom resource
          jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
      name: v1beta2
      schema:
        openAPIV3Schema:
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: The specification of the Kafka Bridge.
              properties:
                adminClient:
                  description: Kafka AdminClient related configuration.
                  properties:
                    config:
                      description: The Kafka AdminClient configuration used for AdminClient instances created by the bridge.
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                  type: object
                authentication:
                  description: Authentication configuration for connecting to the cluster.
                  properties:
                    accessToken:
                      description: Link to Kubernetes Secret containing the access token which was obtained from the authorization server.
                      properties:
                        key:
                          description: The key under which the secret value is stored in the Kubernetes Secret.
                          type: string
                        secretName:
                          description: The name of the Kubernetes Secret containing the secret value.
                          type: string
                      required:
                        - key
                        - secretName
                      type: object
                    accessTokenIsJwt:
                      description: Configure whether access token should be treated as JWT. This should be set to `false` if the authorization server returns opaque tokens. Defaults to `true`.
                      type: boolean
                    accessTokenLocation:
                      description: Path to the token file containing an access token to be used for authentication.
                      type: string
                    audience:
                      description: OAuth audience to use when authenticating against the authorization server. Some authorization servers require the audience to be explicitly set. The possible values depend on how the authorization server is configured. By default, `audience` is not specified when performing the token endpoint request.
                      type: string
                    certificateAndKey:
                      description: Reference to the `Secret` which holds the certificate and private key pair.
                      properties:
                        certificate:
                          description: The name of the file certificate in the Secret.
                          type: string
                        key:
                          description: The name of the private key in the Secret.
                          type: string
                        secretName:
                          description: The name of the Secret containing the certificate.
                          type: string
                      required:
                        - secretName
                        - certificate
                        - key
                      type: object
                    clientAssertion:
                      description: Link to Kubernetes secret containing the client assertion which was manually configured for the client.
                      properties:
                        key:
                          description: The key under which the secret value is stored in the Kubernetes Secret.
                          type: string
                        secretName:
                          description: The name of the Kubernetes Secret containing the secret value.
                          type: string
                      required:
                        - key
                        - secretName
                      type: object
                    clientAssertionLocation:
                      description: Path to the file containing the client assertion to be used for authentication.
                      type: string
                    clientAssertionType:
                      description: The client assertion type. If not set, and either `clientAssertion` or `clientAssertionLocation` is configured, this value defaults to `urn:ietf:params:oauth:client-assertion-type:jwt-bearer`.
                      type: string
                    clientId:
                      description: OAuth Client ID which the Kafka client can use to authenticate against the OAuth server and use the token endpoint URI.
                      type: string
                    clientSecret:
                      description: Link to Kubernetes Secret containing the OAuth client secret which the Kafka client can use to authenticate against the OAuth server and use the token endpoint URI.
                      properties:
                        key:
                          description: The key under which the secret value is stored in the Kubernetes Secret.
                          type: string
                        secretName:
                          description: The name of the Kubernetes Secret containing the secret value.
                          type: string
                      required:
                        - key
                        - secretName
                      type: object
                    connectTimeoutSeconds:
                      description: The connect timeout in seconds when connecting to authorization server. If not set, the effective connect timeout is 60 seconds.
                      type: integer
                    disableTlsHostnameVerification:
                      description: Enable or disable TLS hostname verification. Default value is `false`.
                      type: boolean
                    enableMetrics:
                      description: Enable or disable OAuth metrics. Default value is `false`.
                      type: boolean
                    httpRetries:
                      description: The maximum number of retries to attempt if an initial HTTP request fails. If not set, the default is to not attempt any retries.
                      type: integer
                    httpRetryPauseMs:
                      description: The pause to take before retrying a failed HTTP request. If not set, the default is to not pause at all but to immediately repeat a request.
                      type: integer
                    includeAcceptHeader:
                      description: Whether the Accept header should be set in requests to the authorization servers. The default value is `true`.
                      type: boolean
                    maxTokenExpirySeconds:
                      description: Set or limit time-to-live of the access tokens to the specified number of seconds. This should be set if the authorization server returns opaque tokens.
                      type: integer
                    passwordSecret:
                      description: Reference to the `Secret` which holds the password.
                      properties:
                        password:
                          description: The name of the key in the Secret under which the password is stored.
                          type: string
                        secretName:
                          description: The name of the Secret containing the password.
                          type: string
                      required:
                        - secretName
                        - password
                      type: object
                    readTimeoutSeconds:
                      description: The read timeout in seconds when connecting to authorization server. If not set, the effective read timeout is 60 seconds.
                      type: integer
                    refreshToken:
                      description: Link to Kubernetes Secret containing the refresh token which can be used to obtain access token from the authorization server.
                      properties:
                        key:
                          description: The key under which the secret value is stored in the Kubernetes Secret.
                          type: string
                        secretName:
                          description: The name of the Kubernetes Secret containing the secret value.
                          type: string
                      required:
                        - key
                        - secretName
                      type: object
                    saslExtensions:
                      additionalProperties:
                        type: string
                      description: SASL extensions parameters.
                      type: object
                    scope:
                      description: OAuth scope to use when authenticating against the authorization server. Some authorization servers require this to be set. The possible values depend on how authorization server is configured. By default `scope` is not specified when doing the token endpoint request.
                      type: string
                    tlsTrustedCertificates:
                      description: Trusted certificates for TLS connection to the OAuth server.
                      items:
                        oneOf:
                          - properties:
                              certificate: {}
                            required:
                              - certificate
                          - properties:
                              pattern: {}
                            required:
                              - pattern
                        properties:
                          certificate:
                            description: The name of the file certificate in the secret.
                            type: string
                          pattern:
                            description: Pattern for the certificate files in the secret. Use the link:https://en.wikipedia.org/wiki/Glob_(programming)[_glob syntax_] for the pattern. All files in the secret that match the pattern are used.
                            type: string
                          secretName:
                            description: The name of the Secret containing the certificate.
                            type: string
                        required:
                          - secretName
                        type: object
                      type: array
                    tokenEndpointUri:
                      description: Authorization server token endpoint URI.
                      type: string
                    type:
                      description: Authentication type. Currently the supported types are `tls`, `scram-sha-256`, `scram-sha-512`, `plain`, and 'oauth'. `scram-sha-256` and `scram-sha-512` types use SASL SCRAM-SHA-256 and SASL SCRAM-SHA-512 Authentication, respectively. `plain` type uses SASL PLAIN Authentication. `oauth` type uses SASL OAUTHBEARER Authentication. The `tls` type uses TLS Client Authentication. The `tls` type is supported only over TLS connections.
                      enum:
                        - tls
                        - scram-sha-256
                        - scram-sha-512
                        - plain
                        - oauth
                      type: string
                    username:
                      description: Username used for the authentication.
                      type: string
                  required:
                    - type
                  type: object
                bootstrapServers:
                  description: A list of host:port pairs for establishing the initial connection to the Kafka cluster.
                  type: string
                clientRackInitImage:
                  description: The image of the init container used for initializing the `client.rack`.
                  type: string
                consumer:
                  description: Kafka consumer related configuration.
                  properties:
                    config:
                      description: 'The Kafka consumer configuration used for consumer instances created by the bridge. Properties with the following prefixes cannot be set: ssl., bootstrap.servers, group.id, sasl., security. (with the exception of: ssl.endpoint.identification.algorithm, ssl.cipher.suites, ssl.protocol, ssl.enabled.protocols).'
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    enabled:
                      description: Whether the HTTP consumer should be enabled or disabled. The default is enabled (`true`).
                      type: boolean
                    timeoutSeconds:
                      description: The timeout in seconds for deleting inactive consumers, default is -1 (disabled).
                      type: integer
                  type: object
                enableMetrics:
                  description: Enable the metrics for the Kafka Bridge. Default is false.
                  type: boolean
                http:
                  description: The HTTP related configuration.
                  properties:
                    cors:
                      description: CORS configuration for the HTTP Bridge.
                      properties:
                        allowedMethods:
                          description: List of allowed HTTP methods.
                          items:
                            type: string
                          type: array
                        allowedOrigins:
                          description: List of allowed origins. Java regular expressions can be used.
                          items:
                            type: string
                          type: array
                      required:
                        - allowedOrigins
                        - allowedMethods
                      type: object
                    port:
                      description: The port which is the server listening on.
                      minimum: 1023
                      type: integer
                  type: object
                image:
                  description: The container image used for Kafka Bridge pods. If no image name is explicitly specified, the image name corresponds to the image specified in the Cluster Operator configuration. If an image name is not defined in the Cluster Operator configuration, a default value is used.
                  type: string
                jvmOptions:
                  description: '**Currently not supported** JVM Options for pods.'
                  properties:
                    -XX:
                      additionalProperties:
                        type: string
                      description: A map of -XX options to the JVM.
                      type: object
                    -Xms:
                      description: -Xms option to to the JVM.
                      pattern: ^[0-9]+[mMgG]?$
                      type: string
                    -Xmx:
                      description: -Xmx option to to the JVM.
                      pattern: ^[0-9]+[mMgG]?$
                      type: string
                    gcLoggingEnabled:
                      description: Specifies whether the Garbage Collection logging is enabled. The default is false.
                      type: boolean
                    javaSystemProperties:
                      description: A map of additional system properties which will be passed using the `-D` option to the JVM.
                      items:
                        properties:
                          name:
                            description: The system property name.
                            type: string
                          value:
                            description: The system property value.
                            type: string
                        type: object
                      type: array
                  type: object
                livenessProbe:
                  description: Pod liveness checking.
                  properties:
                    failureThreshold:
                      description: Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
                      minimum: 1
                      type: integer
                    initialDelaySeconds:
                      description: The initial delay before first the health is first checked. Default to 15 seconds. Minimum value is 0.
                      minimum: 0
                      type: integer
                    periodSeconds:
                      description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
                      minimum: 1
                      type: integer
                    successThreshold:
                      description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
                      minimum: 1
                      type: integer
                    timeoutSeconds:
                      description: The timeout for each attempted health check. Default to 5 seconds. Minimum value is 1.
                      minimum: 1
                      type: integer
                  type: object
                logging:
                  description: Logging configuration for Kafka Bridge.
                  properties:
                    loggers:
                      additionalProperties:
                        type: string
                      description: A Map from logger name to logger level.
                      type: object
                    type:
                      description: Logging type, must be either 'inline' or 'external'.
                      enum:
                        - inline
                        - external
                      type: string
                    valueFrom:
                      description: '`ConfigMap` entry where the logging configuration is stored. '
                      properties:
                        configMapKeyRef:
                          description: Reference to the key in the ConfigMap containing the configuration.
                          properties:
                            key:
                              type: string
                            name:
                              type: string
                            optional:
                              type: boolean
                          type: object
                      type: object
                  required:
                    - type
                  type: object
                producer:
                  description: Kafka producer related configuration.
                  properties:
                    config:
                      description: 'The Kafka producer configuration used for producer instances created by the bridge. Properties with the following prefixes cannot be set: ssl., bootstrap.servers, sasl., security. (with the exception of: ssl.endpoint.identification.algorithm, ssl.cipher.suites, ssl.protocol, ssl.enabled.protocols).'
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    enabled:
                      description: Whether the HTTP producer should be enabled or disabled. The default is enabled (`true`).
                      type: boolean
                  type: object
                rack:
                  description: Configuration of the node label which will be used as the client.rack consumer configuration.
                  properties:
                    topologyKey:
                      description: A key that matches labels assigned to the Kubernetes cluster nodes. The value of the label is used to set a broker's `broker.rack` config, and the `client.rack` config for Kafka Connect or MirrorMaker 2.
                      example: topology.kubernetes.io/zone
                      type: string
                  required:
                    - topologyKey
                  type: object
                readinessProbe:
                  description: Pod readiness checking.
                  properties:
                    failureThreshold:
                      description: Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
                      minimum: 1
                      type: integer
                    initialDelaySeconds:
                      description: The initial delay before first the health is first checked. Default to 15 seconds. Minimum value is 0.
                      minimum: 0
                      type: integer
                    periodSeconds:
                      description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
                      minimum: 1
                      type: integer
                    successThreshold:
                      description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
                      minimum: 1
                      type: integer
                    timeoutSeconds:
                      description: The timeout for each attempted health check. Default to 5 seconds. Minimum value is 1.
                      minimum: 1
                      type: integer
                  type: object
                replicas:
                  description: The number of pods in the `Deployment`.  Defaults to `1`.
                  minimum: 0
                  type: integer
                resources:
                  description: CPU and memory resources to reserve.
                  properties:
                    claims:
                      items:
                        properties:
                          name:
                            type: string
                        type: object
                      type: array
                    limits:
                      additionalProperties:
                        anyOf:
                          - type: integer
                          - type: string
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                      type: object
                    requests:
                      additionalProperties:
                        anyOf:
                          - type: integer
                          - type: string
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                      type: object
                  type: object
                template:
                  description: Template for Kafka Bridge resources. The template allows users to specify how a `Deployment` and `Pod` is generated.
                  properties:
                    apiService:
                      description: Template for Kafka Bridge API `Service`.
                      properties:
                        ipFamilies:
                          description: Specifies the IP Families used by the service. Available options are `IPv4` and `IPv6`. If unspecified, Kubernetes will choose the default value based on the `ipFamilyPolicy` setting.
                          items:
                            enum:
                              - IPv4
                              - IPv6
                            type: string
                          type: array
                        ipFamilyPolicy:
                          description: Specifies the IP Family Policy used by the service. Available options are `SingleStack`, `PreferDualStack` and `RequireDualStack`. `SingleStack` is for a single IP family. `PreferDualStack` is for two IP families on dual-stack configured clusters or a single IP family on single-stack clusters. `RequireDualStack` fails unless there are two IP families on dual-stack configured clusters. If unspecified, Kubernetes will choose the default value based on the service type.
                          enum:
                            - SingleStack
                            - PreferDualStack
                            - RequireDualStack
                          type: string
                        metadata:
                          description: Metadata applied to the resource.
                          properties:
                            annotations:
                              additionalProperties:
                                type: string
                              description: Annotations added to the Kubernetes resource.
                              type: object
                            labels:
                              additionalProperties:
                                type: string
                              description: Labels added to the Kubernetes resource.
                              type: object
                          type: object
                      type: object
                    bridgeContainer:
                      description: Template for the Kafka Bridge container.
                      properties:
                        env:
                          description: Environment variables which should be applied to the container.
                          items:
                            oneOf:
                              - properties:
                                  value: {}
                                required:
                                  - value
                              - properties:
                                  valueFrom: {}
                                required:
                                  - valueFrom
                            properties:
                              name:
                                description: The environment variable key.
                                type: string
                              value:
                                description: The environment variable value.
                                type: string
                              valueFrom:
                                description: Reference to the secret or config map property to which the environment variable is set.
                                oneOf:
                                  - properties:
                                      secretKeyRef: {}
                                    required:
                                      - secretKeyRef
                                  - properties:
                                      configMapKeyRef: {}
                                    required:
                                      - configMapKeyRef
                                properties:
                                  configMapKeyRef:
                                    description: Reference to a key in a config map.
                                    properties:
                                      key:
                                        type: string
                                      name:
                                        type: string
                                      optional:
                                        type: boolean
                                    type: object
                                  secretKeyRef:
                                    description: Reference to a key in a secret.
                                    properties:
                                      key:
                                        type: string
                                      name:
                                        type: string
                                      optional:
                                        type: boolean
                                    type: object
                                type: object
                            type: object
                          type: array
                        securityContext:
                          description: Security context for the container.
                          properties:
                            allowPrivilegeEscalation:
                              type: boolean
                            appArmorProfile:
                              properties:
                                localhostProfile:
                                  type: string
                                type:
                                  type: string
                              type: object
                            capabilities:
                              properties:
                                add:
                                  items:
                                    type: string
                                  type: array
                                drop:
                                  items:
                                    type: string
                                  type: array
                              type: object
                            privileged:
                              type: boolean
                            procMount:
                              type: string
                            readOnlyRootFilesystem:
                              type: boolean
                            runAsGroup:
                              type: integer
                            runAsNonRoot:
                              type: boolean
                            runAsUser:
                              type: integer
                            seLinuxOptions:
                              properties:
                                level:
                                  type: string
                                role:
                                  type: string
                                type:
                                  type: string
                                user:
                                  type: string
                              type: object
                            seccompProfile:
                              properties:
                                localhostProfile:
                                  type: string
                                type:
                                  type: string
                              type: object
                            windowsOptions:
                              properties:
                                gmsaCredentialSpec:
                                  type: string
                                gmsaCredentialSpecName:
                                  type: string
                                hostProcess:
                                  type: boolean
                                runAsUserName:
                                  type: string
                              type: object
                          type: object
                        volumeMounts:
                          description: Additional volume mounts which should be applied to the container.
                          items:
                            properties:
                              mountPath:
                                type: string
                              mountPropagation:
                                type: string
                              name:
                                type: string
                              readOnly:
                                type: boolean
                              recursiveReadOnly:
                                type: string
                              subPath:
                                type: string
                              subPathExpr:
                                type: string
                            type: object
                          type: array
                      type: object
                    clusterRoleBinding:
                      description: Template for the Kafka Bridge ClusterRoleBinding.
                      properties:
                        metadata:
                          description: Metadata applied to the resource.
                          properties:
                            annotations:
                              additionalProperties:
                                type: string
                              description: Annotations added to the Kubernetes resource.
                              type: object
                            labels:
                              additionalProperties:
                                type: string
                              description: Labels added to the Kubernetes resource.
                              type: object
                          type: object
                      type: object
                    deployment:
                      description: Template for Kafka Bridge `Deployment`.
                      properties:
                        deploymentStrategy:
                          description: Pod replacement strategy for deployment configuration changes. Valid values are `RollingUpdate` and `Recreate`. Defaults to `RollingUpdate`.
                          enum:
                            - RollingUpdate
                            - Recreate
                          type: string
                        metadata:
                          description: Metadata applied to the resource.
                          properties:
                            annotations:
                              additionalProperties:
                                type: string
                              description: Annotations added to the Kubernetes resource.
                              type: object
                            labels:
                              additionalProperties:
                                type: string
                              description: Labels added to the Kubernetes resource.
                              type: object
                          type: object
                      type: object
                    initContainer:
                      description: Template for the Kafka Bridge init container.
                      properties:
                        env:
                          description: Environment variables which should be applied to the container.
                          items:
                            oneOf:
                              - properties:
                                  value: {}
                                required:
                                  - value
                              - properties:
                                  valueFrom: {}
                                required:
                                  - valueFrom
                            properties:
                              name:
                                description: The environment variable key.
                                type: string
                              value:
                                description: The environment variable value.
                                type: string
                              valueFrom:
                                description: Reference to the secret or config map property to which the environment variable is set.
                                oneOf:
                                  - properties:
                                      secretKeyRef: {}
                                    required:
                                      - secretKeyRef
                                  - properties:
                                      configMapKeyRef: {}
                                    required:
                                      - configMapKeyRef
                                properties:
                                  configMapKeyRef:
                                    description: Reference to a key in a config map.
                                    properties:
                                      key:
                                        type: string
                                      name:
                                        type: string
                                      optional:
                                        type: boolean
                                    type: object
                                  secretKeyRef:
                                    description: Reference to a key in a secret.
                                    properties:
                                      key:
                                        type: string
                                      name:
                                        type: string
                                      optional:
                                        type: boolean
                                    type: object
                                type: object
                            type: object
                          type: array
                        securityContext:
                          description: Security context for the container.
                          properties:
                            allowPrivilegeEscalation:
                              type: boolean
                            appArmorProfile:
                              properties:
                                localhostProfile:
                                  type: string
                                type:
                                  type: string
                              type: object
                            capabilities:
                              properties:
                                add:
                                  items:
                                    type: string
                                  type: array
                                drop:
                                  items:
                                    type: string
                                  type: array
                              type: object
                            privileged:
                              type: boolean
                            procMount:
                              type: string
                            readOnlyRootFilesystem:
                              type: boolean
                            runAsGroup:
                              type: integer
                            runAsNonRoot:
                              type: boolean
                            runAsUser:
                              type: integer
                            seLinuxOptions:
                              properties:
                                level:
                                  type: string
                                role:
                                  type: string
                                type:
                                  type: string
                                user:
                                  type: string
                              type: object
                            seccompProfile:
                              properties:
                                localhostProfile:
                                  type: string
                                type:
                                  type: string
                              type: object
                            windowsOptions:
                              properties:
                                gmsaCredentialSpec:
                                  type: string
                                gmsaCredentialSpecName:
                                  type: string
                                hostProcess:
                                  type: boolean
                                runAsUserName:
                                  type: string
                              type: object
                          type: object
                        volumeMounts:
                          description: Additional volume mounts which should be applied to the container.
                          items:
                            properties:
                              mountPath:
                                type: string
                              mountPropagation:
                                type: string
                              name:
                                type: string
                              readOnly:
                                type: boolean
                              recursiveReadOnly:
                                type: string
                              subPath:
                                type: string
                              subPathExpr:
                                type: string
                            type: object
                          type: array
                      type: object
                    pod:
                      description: Template for Kafka Bridge `Pods`.
                      properties:
                        affinity:
                          description: The pod's affinity rules.
                          properties:
                            nodeAffinity:
                              properties:
                                preferredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      preference:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchFields:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                        type: object
                                      weight:
                                        type: integer
                                    type: object
                                  type: array
                                requiredDuringSchedulingIgnoredDuringExecution:
                                  properties:
                                    nodeSelectorTerms:
                                      items:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchFields:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                        type: object
                                      type: array
                                  type: object
                              type: object
                            podAffinity:
                              properties:
                                preferredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      podAffinityTerm:
                                        properties:
                                          labelSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels:
                                                additionalProperties:
                                                  type: string
                                                type: object
                                            type: object
                                          matchLabelKeys:
                                            items:
                                              type: string
                                            type: array
                                          mismatchLabelKeys:
                                            items:
                                              type: string
                                            type: array
                                          namespaceSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels:
                                                additionalProperties:
                                                  type: string
                                                type: object
                                            type: object
                                          namespaces:
                                            items:
                                              type: string
                                            type: array
                                          topologyKey:
                                            type: string
                                        type: object
                                      weight:
                                        type: integer
                                    type: object
                                  type: array
                                requiredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      labelSelector:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchLabels:
                                            additionalProperties:
                                              type: string
                                            type: object
                                        type: object
                                      matchLabelKeys:
                                        items:
                                          type: string
                                        type: array
                                      mismatchLabelKeys:
                                        items:
                                          type: string
                                        type: array
                                      namespaceSelector:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchLabels:
                                            additionalProperties:
                                              type: string
                                            type: object
                                        type: object
                                      namespaces:
                                        items:
                                          type: string
                                        type: array
                                      topologyKey:
                                        type: string
                                    type: object
                                  type: array
                              type: object
                            podAntiAffinity:
                              properties:
                                preferredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      podAffinityTerm:
                                        properties:
                                          labelSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels:
                                                additionalProperties:
                                                  type: string
                                                type: object
                                            type: object
                                          matchLabelKeys:
                                            items:
                                              type: string
                                            type: array
                                          mismatchLabelKeys:
                                            items:
                                              type: string
                                            type: array
                                          namespaceSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels:
                                                additionalProperties:
                                                  type: string
                                                type: object
                                            type: object
                                          namespaces:
                                            items:
                                              type: string
                                            type: array
                                          topologyKey:
                                            type: string
                                        type: object
                                      weight:
                                        type: integer
                                    type: object
                                  type: array
                                requiredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      labelSelector:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchLabels:
                                            additionalProperties:
                                              type: string
                                            type: object
                                        type: object
                                      matchLabelKeys:
                                        items:
                                          type: string
                                        type: array
                                      mismatchLabelKeys:
                                        items:
                                          type: string
                                        type: array
                                      namespaceSelector:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchLabels:
                                            additionalProperties:
                                              type: string
                                            type: object
                                        type: object
                                      namespaces:
                                        items:
                                          type: string
                                        type: array
                                      topologyKey:
                                        type: string
                                    type: object
                                  type: array
                              type: object
                          type: object
                        enableServiceLinks:
                          description: Indicates whether information about services should be injected into Pod's environment variables.
                          type: boolean
                        hostAliases:
                          description: The pod's HostAliases. HostAliases is an optional list of hosts and IPs that will be injected into the Pod's hosts file if specified.
                          items:
                            properties:
                              hostnames:
                                items:
                                  type: string
                                type: array
                              ip:
                                type: string
                            type: object
                          type: array
                        imagePullSecrets:
                          description: List of references to secrets in the same namespace to use for pulling any of the images used by this Pod. When the `STRIMZI_IMAGE_PULL_SECRETS` environment variable in Cluster Operator and the `imagePullSecrets` option are specified, only the `imagePullSecrets` variable is used and the `STRIMZI_IMAGE_PULL_SECRETS` variable is ignored.
                          items:
                            properties:
                              name:
                                type: string
                            type: object
                          type: array
                        metadata:
                          description: Metadata applied to the resource.
                          properties:
                            annotations:
                              additionalProperties:
                                type: string
                              description: Annotations added to the Kubernetes resource.
                              type: object
                            labels:
                              additionalProperties:
                                type: string
                              description: Labels added to the Kubernetes resource.
                              type: object
                          type: object
                        priorityClassName:
                          description: 'The name of the priority class used to assign priority to the pods. '
                          type: string
                        schedulerName:
                          description: The name of the scheduler used to dispatch this `Pod`. If not specified, the default scheduler will be used.
                          type: string
                        securityContext:
                          description: Configures pod-level security attributes and common container settings.
                          properties:
                            appArmorProfile:
                              properties:
                                localhostProfile:
                                  type: string
                                type:
                                  type: string
                              type: object
                            fsGroup:
                              type: integer
                            fsGroupChangePolicy:
                              type: string
                            runAsGroup:
                              type: integer
                            runAsNonRoot:
                              type: boolean
                            runAsUser:
                              type: integer
                            seLinuxOptions:
                              properties:
                                level:
                                  type: string
                                role:
                                  type: string
                                type:
                                  type: string
                                user:
                                  type: string
                              type: object
                            seccompProfile:
                              properties:
                                localhostProfile:
                                  type: string
                                type:
                                  type: string
                              type: object
                            supplementalGroups:
                              items:
                                type: integer
                              type: array
                            sysctls:
                              items:
                                properties:
                                  name:
                                    type: string
                                  value:
                                    type: string
                                type: object
                              type: array
                            windowsOptions:
                              properties:
                                gmsaCredentialSpec:
                                  type: string
                                gmsaCredentialSpecName:
                                  type: string
                                hostProcess:
                                  type: boolean
                                runAsUserName:
                                  type: string
                              type: object
                          type: object
                        terminationGracePeriodSeconds:
                          description: The grace period is the duration in seconds after the processes running in the pod are sent a termination signal, and the time when the processes are forcibly halted with a kill signal. Set this value to longer than the expected cleanup time for your process. Value must be a non-negative integer. A zero value indicates delete immediately. You might need to increase the grace period for very large Kafka clusters, so that the Kafka brokers have enough time to transfer their work to another broker before they are terminated. Defaults to 30 seconds.
                          minimum: 0
                          type: integer
                        tmpDirSizeLimit:
                          description: Defines the total amount of pod memory allocated for the temporary `EmptyDir` volume `/tmp`. Specify the allocation in memory units, for example, `100Mi` for 100 mebibytes. Default value is `5Mi`. The `/tmp` volume is backed by pod memory, not disk storage, so avoid setting a high value as it consumes pod memory resources.
                          pattern: ^([0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$
                          type: string
                        tolerations:
                          description: The pod's tolerations.
                          items:
                            properties:
                              effect:
                                type: string
                              key:
                                type: string
                              operator:
                                type: string
                              tolerationSeconds:
                                type: integer
                              value:
                                type: string
                            type: object
                          type: array
                        topologySpreadConstraints:
                          description: The pod's topology spread constraints.
                          items:
                            properties:
                              labelSelector:
                                properties:
                                  matchExpressions:
                                    items:
                                      properties:
                                        key:
                                          type: string
                                        operator:
                                          type: string
                                        values:
                                          items:
                                            type: string
                                          type: array
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    type: object
                                type: object
                              matchLabelKeys:
                                items:
                                  type: string
                                type: array
                              maxSkew:
                                type: integer
                              minDomains:
                                type: integer
                              nodeAffinityPolicy:
                                type: string
                              nodeTaintsPolicy:
                                type: string
                              topologyKey:
                                type: string
                              whenUnsatisfiable:
                                type: string
                            type: object
                          type: array
                        volumes:
                          description: Additional volumes that can be mounted to the pod.
                          items:
                            oneOf:
                              - properties:
                                  configMap: {}
                                  csi: {}
                                  emptyDir: {}
                                  persistentVolumeClaim: {}
                                  secret: {}
                            properties:
                              configMap:
                                description: ConfigMap to use to populate the volume.
                                properties:
                                  defaultMode:
                                    type: integer
                                  items:
                                    items:
                                      properties:
                                        key:
                                          type: string
                                        mode:
                                          type: integer
                                        path:
                                          type: string
                                      type: object
                                    type: array
                                  name:
                                    type: string
                                  optional:
                                    type: boolean
                                type: object
                              csi:
                                description: CSIVolumeSource object to use to populate the volume.
                                properties:
                                  driver:
                                    type: string
                                  fsType:
                                    type: string
                                  nodePublishSecretRef:
                                    properties:
                                      name:
                                        type: string
                                    type: object
                                  readOnly:
                                    type: boolean
                                  volumeAttributes:
                                    additionalProperties:
                                      type: string
                                    type: object
                                type: object
                              emptyDir:
                                description: EmptyDir to use to populate the volume.
                                properties:
                                  medium:
                                    type: string
                                  sizeLimit:
                                    properties:
                                      amount:
                                        type: string
                                      format:
                                        type: string
                                    type: object
                                type: object
                              name:
                                description: Name to use for the volume. Required.
                                type: string
                              persistentVolumeClaim:
                                description: PersistentVolumeClaim object to use to populate the volume.
                                properties:
                                  claimName:
                                    type: string
                                  readOnly:
                                    type: boolean
                                type: object
                              secret:
                                description: Secret to use populate the volume.
                                properties:
                                  defaultMode:
                                    type: integer
                                  items:
                                    items:
                                      properties:
                                        key:
                                          type: string
                                        mode:
                                          type: integer
                                        path:
                                          type: string
                                      type: object
                                    type: array
                                  optional:
                                    type: boolean
                                  secretName:
                                    type: string
                                type: object
                            type: object
                          type: array
                      type: object
                    podDisruptionBudget:
                      description: Template for Kafka Bridge `PodDisruptionBudget`.
                      properties:
                        maxUnavailable:
                          description: Maximum number of unavailable pods to allow automatic Pod eviction. A Pod eviction is allowed when the `maxUnavailable` number of pods or fewer are unavailable after the eviction. Setting this value to 0 prevents all voluntary evictions, so the pods must be evicted manually. Defaults to 1.
                          minimum: 0
                          type: integer
                        metadata:
                          description: Metadata to apply to the `PodDisruptionBudgetTemplate` resource.
                          properties:
                            annotations:
                              additionalProperties:
                                type: string
                              description: Annotations added to the Kubernetes resource.
                              type: object
                            labels:
                              additionalProperties:
                                type: string
                              description: Labels added to the Kubernetes resource.
                              type: object
                          type: object
                      type: object
                    serviceAccount:
                      description: Template for the Kafka Bridge service account.
                      properties:
                        metadata:
                          description: Metadata applied to the resource.
                          properties:
                            annotations:
                              additionalProperties:
                                type: string
                              description: Annotations added to the Kubernetes resource.
                              type: object
                            labels:
                              additionalProperties:
                                type: string
                              description: Labels added to the Kubernetes resource.
                              type: object
                          type: object
                      type: object
                  type: object
                tls:
                  description: TLS configuration for connecting Kafka Bridge to the cluster.
                  properties:
                    trustedCertificates:
                      description: Trusted certificates for TLS connection.
                      items:
                        oneOf:
                          - properties:
                              certificate: {}
                            required:
                              - certificate
                          - properties:
                              pattern: {}
                            required:
                              - pattern
                        properties:
                          certificate:
                            description: The name of the file certificate in the secret.
                            type: string
                          pattern:
                            description: Pattern for the certificate files in the secret. Use the link:https://en.wikipedia.org/wiki/Glob_(programming)[_glob syntax_] for the pattern. All files in the secret that match the pattern are used.
                            type: string
                          secretName:
                            description: The name of the Secret containing the certificate.
                            type: string
                        required:
                          - secretName
                        type: object
                      type: array
                  type: object
                tracing:
                  description: The configuration of tracing in Kafka Bridge.
                  properties:
                    type:
                      description: Type of the tracing used. Currently the only supported type is `opentelemetry` for OpenTelemetry tracing. As of Strimzi 0.37.0, `jaeger` type is not supported anymore and this option is ignored.
                      enum:
                        - jaeger
                        - opentelemetry
                      type: string
                  required:
                    - type
                  type: object
              required:
                - bootstrapServers
              type: object
            status:
              description: The status of the Kafka Bridge.
              properties:
                conditions:
                  description: List of status conditions.
                  items:
                    properties:
                      lastTransitionTime:
                        description: Last time the condition of a type changed from one status to another. The required format is 'yyyy-MM-ddTHH:mm:ssZ', in the UTC time zone.
                        type: string
                      message:
                        description: Human-readable message indicating details about the condition's last transition.
                        type: string
                      reason:
                        description: The reason for the condition's last transition (a single word in CamelCase).
                        type: string
                      status:
                        description: The status of the condition, either True, False or Unknown.
                        type: string
                      type:
                        description: The unique identifier of a condition, used to distinguish between other conditions in the resource.
                        type: string
                    type: object
                  type: array
                labelSelector:
                  description: Label selector for pods providing this resource.
                  type: string
                observedGeneration:
                  description: The generation of the CRD that was last reconciled by the operator.
                  type: integer
                replicas:
                  description: The current number of pods being used to provide this resource.
                  type: integer
                url:
                  description: The URL at which external client applications can access the Kafka Bridge.
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        scale:
          labelSelectorPath: .status.labelSelector
          specReplicasPath: .spec.replicas
          statusReplicasPath: .status.replicas
        status: {}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app: strimzi
  name: strimzi-cluster-operator-leader-election
  namespace: kafka
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: strimzi-cluster-operator-leader-election
subjects:
  - kind: ServiceAccount
    name: strimzi-cluster-operator
    namespace: kafka
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app: strimzi
  name: strimzi-entity-operator
rules:
  - apiGroups:
      - kafka.strimzi.io
    resources:
      - kafkatopics
    verbs:
      - get
      - list
      - watch
      - create
      - patch
      - update
      - delete
  - apiGroups:
      - kafka.strimzi.io
    resources:
      - kafkausers
    verbs:
      - get
      - list
      - watch
      - create
      - patch
      - update
  - apiGroups:
      - kafka.strimzi.io
    resources:
      - kafkatopics/status
      - kafkausers/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - get
      - list
      - watch
      - create
      - delete
      - patch
      - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app: strimzi
  name: strimzi-cluster-operator-namespaced
rules:
  - apiGroups:
      - rbac.authorization.k8s.io
    resources:
      - rolebindings
    verbs:
      - get
      - list
      - watch
      - create
      - delete
      - patch
      - update
  - apiGroups:
      - rbac.authorization.k8s.io
    resources:
      - roles
    verbs:
      - get
      - list
      - watch
      - create
      - delete
      - patch
      - update
  - apiGroups:
      - ""
    resources:
      - pods
      - serviceaccounts
      - configmaps
      - services
      - endpoints
      - secrets
      - persistentvolumeclaims
    verbs:
      - get
      - list
      - watch
      - create
      - delete
      - patch
      - update
  - apiGroups:
      - apps
    resources:
      - deployments
      - statefulsets
      - replicasets
    verbs:
      - get
      - list
      - watch
      - create
      - delete
      - patch
      - update
  - apiGroups:
      - apps
    resources:
      - deployments/scale
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - events.k8s.io
    resources:
      - events
    verbs:
      - create
  - apiGroups:
      - build.openshift.io
    resources:
      - buildconfigs
      - buildconfigs/instantiate
      - builds
    verbs:
      - get
      - list
      - watch
      - create
      - delete
      - patch
      - update
  - apiGroups:
      - networking.k8s.io
    resources:
      - networkpolicies
      - ingresses
    verbs:
      - get
      - list
      - watch
      - create
      - delete
      - patch
      - update
  - apiGroups:
      - route.openshift.io
    resources:
      - routes
      - routes/custom-host
    verbs:
      - get
      - list
      - watch
      - create
      - delete
      - patch
      - update
  - apiGroups:
      - image.openshift.io
    resources:
      - imagestreams
    verbs:
      - get
  - apiGroups:
      - policy
    resources:
      - poddisruptionbudgets
    verbs:
      - get
      - list
      - watch
      - create
      - delete
      - patch
      - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app: strimzi
  name: strimzi-cluster-operator-kafka-client-delegation
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: strimzi-kafka-client
subjects:
  - kind: ServiceAccount
    name: strimzi-cluster-operator
    namespace: kafka
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app: strimzi
  name: strimzi-cluster-operator-watched
  namespace: kafka
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: strimzi-cluster-operator-watched
subjects:
  - kind: ServiceAccount
    name: strimzi-cluster-operator
    namespace: kafka
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: strimzi
  name: strimzi-cluster-operator
  namespace: kafka
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app: strimzi
  name: strimzi-cluster-operator-global
rules:
  - apiGroups:
      - rbac.authorization.k8s.io
    resources:
      - clusterrolebindings
    verbs:
      - get
      - list
      - watch
      - create
      - delete
      - patch
      - update
  - apiGroups:
      - storage.k8s.io
    resources:
      - storageclasses
    verbs:
      - get
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - list
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    app: strimzi
    strimzi.io/crd-install: "true"
  name: kafkaconnectors.kafka.strimzi.io
spec:
  conversion:
    strategy: None
  group: kafka.strimzi.io
  names:
    categories:
      - strimzi
    kind: KafkaConnector
    listKind: KafkaConnectorList
    plural: kafkaconnectors
    shortNames:
      - kctr
    singular: kafkaconnector
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - description: The name of the Kafka Connect cluster this connector belongs to
          jsonPath: .metadata.labels.strimzi\.io/cluster
          name: Cluster
          type: string
        - description: The class used by this connector
          jsonPath: .spec.class
          name: Connector class
          type: string
        - description: Maximum number of tasks
          jsonPath: .spec.tasksMax
          name: Max Tasks
          type: integer
        - description: The state of the custom resource
          jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
      name: v1beta2
      schema:
        openAPIV3Schema:
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: The specification of the Kafka Connector.
              properties:
                alterOffsets:
                  description: Configuration for altering offsets.
                  properties:
                    fromConfigMap:
                      description: Reference to the ConfigMap where the new offsets are stored.
                      properties:
                        name:
                          type: string
                      type: object
                  required:
                    - fromConfigMap
                  type: object
                autoRestart:
                  description: Automatic restart of connector and tasks configuration.
                  properties:
                    enabled:
                      description: Whether automatic restart for failed connectors and tasks should be enabled or disabled.
                      type: boolean
                    maxRestarts:
                      description: The maximum number of connector restarts that the operator will try. If the connector remains in a failed state after reaching this limit, it must be restarted manually by the user. Defaults to an unlimited number of restarts.
                      type: integer
                  type: object
                class:
                  description: The Class for the Kafka Connector.
                  type: string
                config:
                  description: 'The Kafka Connector configuration. The following properties cannot be set: name, connector.class, tasks.max.'
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                listOffsets:
                  description: Configuration for listing offsets.
                  properties:
                    toConfigMap:
                      description: Reference to the ConfigMap where the list of offsets will be written to.
                      properties:
                        name:
                          type: string
                      type: object
                  required:
                    - toConfigMap
                  type: object
                pause:
                  description: Whether the connector should be paused. Defaults to false.
                  type: boolean
                state:
                  description: The state the connector should be in. Defaults to running.
                  enum:
                    - paused
                    - stopped
                    - running
                  type: string
                tasksMax:
                  description: The maximum number of tasks for the Kafka Connector.
                  minimum: 1
                  type: integer
              type: object
            status:
              description: The status of the Kafka Connector.
              properties:
                autoRestart:
                  description: The auto restart status.
                  properties:
                    connectorName:
                      description: The name of the connector being restarted.
                      type: string
                    count:
                      description: The number of times the connector or task is restarted.
                      type: integer
                    lastRestartTimestamp:
                      description: The last time the automatic restart was attempted. The required format is 'yyyy-MM-ddTHH:mm:ssZ' in the UTC time zone.
                      type: string
                  type: object
                conditions:
                  description: List of status conditions.
                  items:
                    properties:
                      lastTransitionTime:
                        description: Last time the condition of a type changed from one status to another. The required format is 'yyyy-MM-ddTHH:mm:ssZ', in the UTC time zone.
                        type: string
                      message:
                        description: Human-readable message indicating details about the condition's last transition.
                        type: string
                      reason:
                        description: The reason for the condition's last transition (a single word in CamelCase).
                        type: string
                      status:
                        description: The status of the condition, either True, False or Unknown.
                        type: string
                      type:
                        description: The unique identifier of a condition, used to distinguish between other conditions in the resource.
                        type: string
                    type: object
                  type: array
                connectorStatus:
                  description: The connector status, as reported by the Kafka Connect REST API.
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                observedGeneration:
                  description: The generation of the CRD that was last reconciled by the operator.
                  type: integer
                tasksMax:
                  description: The maximum number of tasks for the Kafka Connector.
                  type: integer
                topics:
                  description: The list of topics used by the Kafka Connector.
                  items:
                    type: string
                  type: array
              type: object
          type: object
      served: true
      storage: true
      subresources:
        scale:
          specReplicasPath: .spec.tasksMax
          statusReplicasPath: .status.tasksMax
        status: {}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app: strimzi
  name: strimzi-cluster-operator
  namespace: kafka
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: strimzi-cluster-operator-namespaced
subjects:
  - kind: ServiceAccount
    name: strimzi-cluster-operator
    namespace: kafka
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app: strimzi
  name: strimzi-cluster-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: strimzi-cluster-operator-global
subjects:
  - kind: ServiceAccount
    name: strimzi-cluster-operator
    namespace: kafka
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app: strimzi
  name: strimzi-cluster-operator-entity-operator-delegation
  namespace: kafka
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: strimzi-entity-operator
subjects:
  - kind: ServiceAccount
    name: strimzi-cluster-operator
    namespace: kafka
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app: strimzi
  name: strimzi-kafka-client
rules:
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app: strimzi
  name: strimzi-cluster-operator-leader-election
rules:
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - create
  - apiGroups:
      - coordination.k8s.io
    resourceNames:
      - strimzi-cluster-operator
    resources:
      - leases
    verbs:
      - get
      - list
      - watch
      - delete
      - patch
      - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app: strimzi
  name: strimzi-kafka-broker
rules:
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - get
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: strimzi
  name: strimzi-cluster-operator
  namespace: kafka
spec:
  replicas: 1
  selector:
    matchLabels:
      name: strimzi-cluster-operator
      strimzi.io/kind: cluster-operator
  template:
    metadata:
      labels:
        name: strimzi-cluster-operator
        strimzi.io/kind: cluster-operator
    spec:
      containers:
        - args:
            - /opt/strimzi/bin/cluster_operator_run.sh
          env:
            - name: STRIMZI_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: STRIMZI_FULL_RECONCILIATION_INTERVAL_MS
              value: "120000"
            - name: STRIMZI_OPERATION_TIMEOUT_MS
              value: "300000"
            - name: STRIMZI_DEFAULT_KAFKA_EXPORTER_IMAGE
              value: quay.io/strimzi/kafka:0.45.0-kafka-3.9.0
            - name: STRIMZI_DEFAULT_CRUISE_CONTROL_IMAGE
              value: quay.io/strimzi/kafka:0.45.0-kafka-3.9.0
            - name: STRIMZI_KAFKA_IMAGES
              value: |
                3.8.0=quay.io/strimzi/kafka:0.45.0-kafka-3.8.0
                3.8.1=quay.io/strimzi/kafka:0.45.0-kafka-3.8.1
                3.9.0=quay.io/strimzi/kafka:0.45.0-kafka-3.9.0
            - name: STRIMZI_KAFKA_CONNECT_IMAGES
              value: |
                3.8.0=quay.io/strimzi/kafka:0.45.0-kafka-3.8.0
                3.8.1=quay.io/strimzi/kafka:0.45.0-kafka-3.8.1
                3.9.0=quay.io/strimzi/kafka:0.45.0-kafka-3.9.0
            - name: STRIMZI_KAFKA_MIRROR_MAKER_IMAGES
              value: |
                3.8.0=quay.io/strimzi/kafka:0.45.0-kafka-3.8.0
                3.8.1=quay.io/strimzi/kafka:0.45.0-kafka-3.8.1
                3.9.0=quay.io/strimzi/kafka:0.45.0-kafka-3.9.0
            - name: STRIMZI_KAFKA_MIRROR_MAKER_2_IMAGES
              value: |
                3.8.0=quay.io/strimzi/kafka:0.45.0-kafka-3.8.0
                3.8.1=quay.io/strimzi/kafka:0.45.0-kafka-3.8.1
                3.9.0=quay.io/strimzi/kafka:0.45.0-kafka-3.9.0
            - name: STRIMZI_DEFAULT_TOPIC_OPERATOR_IMAGE
              value: quay.io/strimzi/operator:0.45.0
            - name: STRIMZI_DEFAULT_USER_OPERATOR_IMAGE
              value: quay.io/strimzi/operator:0.45.0
            - name: STRIMZI_DEFAULT_KAFKA_INIT_IMAGE
              value: quay.io/strimzi/operator:0.45.0
            - name: STRIMZI_DEFAULT_KAFKA_BRIDGE_IMAGE
              value: quay.io/strimzi/kafka-bridge:0.31.1
            - name: STRIMZI_DEFAULT_KANIKO_EXECUTOR_IMAGE
              value: quay.io/strimzi/kaniko-executor:0.45.0
            - name: STRIMZI_DEFAULT_MAVEN_BUILDER
              value: quay.io/strimzi/maven-builder:0.45.0
            - name: STRIMZI_OPERATOR_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: STRIMZI_FEATURE_GATES
              value: ""
            - name: STRIMZI_LEADER_ELECTION_ENABLED
              value: "true"
            - name: STRIMZI_LEADER_ELECTION_LEASE_NAME
              value: strimzi-cluster-operator
            - name: STRIMZI_LEADER_ELECTION_LEASE_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: STRIMZI_LEADER_ELECTION_IDENTITY
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          image: quay.io/strimzi/operator:0.45.0
          livenessProbe:
            httpGet:
              path: /healthy
              port: http
            initialDelaySeconds: 10
            periodSeconds: 30
          name: strimzi-cluster-operator
          ports:
            - containerPort: 8080
              name: http
          readinessProbe:
            httpGet:
              path: /ready
              port: http
            initialDelaySeconds: 10
            periodSeconds: 30
          resources:
            limits:
              cpu: 1000m
              memory: 384Mi
            requests:
              cpu: 200m
              memory: 384Mi
          volumeMounts:
            - mountPath: /tmp
              name: strimzi-tmp
            - mountPath: /opt/strimzi/custom-config/
              name: co-config-volume
      serviceAccountName: strimzi-cluster-operator
      volumes:
        - emptyDir:
            medium: Memory
            sizeLimit: 1Mi
          name: strimzi-tmp
        - configMap:
            name: strimzi-cluster-operator
          name: co-config-volume
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app: strimzi
  name: strimzi-cluster-operator-watched
rules:
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - watch
      - list
  - apiGroups:
      - kafka.strimzi.io
    resources:
      - kafkas
      - kafkanodepools
      - kafkaconnects
      - kafkaconnectors
      - kafkamirrormakers
      - kafkabridges
      - kafkamirrormaker2s
      - kafkarebalances
    verbs:
      - get
      - list
      - watch
      - create
      - patch
      - update
  - apiGroups:
      - kafka.strimzi.io
    resources:
      - kafkas/status
      - kafkanodepools/status
      - kafkaconnects/status
      - kafkaconnectors/status
      - kafkamirrormakers/status
      - kafkabridges/status
      - kafkamirrormaker2s/status
      - kafkarebalances/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - core.strimzi.io
    resources:
      - strimzipodsets
    verbs:
      - get
      - list
      - watch
      - create
      - delete
      - patch
      - update
  - apiGroups:
      - core.strimzi.io
    resources:
      - strimzipodsets/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - kafka.strimzi.io
    resources:
      - kafkarebalances
    verbs:
      - delete
---
apiVersion: v1
data:
  log4j2.properties: |
    name = COConfig
    monitorInterval = 30

    appender.console.type = Console
    appender.console.name = STDOUT
    appender.console.layout.type = PatternLayout
    appender.console.layout.pattern = %d{yyyy-MM-dd HH:mm:ss} %-5p %c{1}:%L - %m%n

    rootLogger.level = ${env:STRIMZI_LOG_LEVEL:-INFO}
    rootLogger.appenderRefs = stdout
    rootLogger.appenderRef.console.ref = STDOUT

    # Kafka AdminClient logging is a bit noisy at INFO level
    logger.kafka.name = org.apache.kafka
    logger.kafka.level = WARN

    # Zookeeper is very verbose even on INFO level -> We set it to WARN by default
    logger.zookeepertrustmanager.name = org.apache.zookeeper
    logger.zookeepertrustmanager.level = WARN

    # Keeps separate level for Netty logging -> to not be changed by the root logger
    logger.netty.name = io.netty
    logger.netty.level = INFO
kind: ConfigMap
metadata:
  labels:
    app: strimzi
  name: strimzi-cluster-operator
  namespace: kafka
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    app: strimzi
    strimzi.io/crd-install: "true"
  name: kafkaconnects.kafka.strimzi.io
spec:
  conversion:
    strategy: None
  group: kafka.strimzi.io
  names:
    categories:
      - strimzi
    kind: KafkaConnect
    listKind: KafkaConnectList
    plural: kafkaconnects
    shortNames:
      - kc
    singular: kafkaconnect
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - description: The desired number of Kafka Connect replicas
          jsonPath: .spec.replicas
          name: Desired replicas
          type: integer
        - description: The state of the custom resource
          jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
      name: v1beta2
      schema:
        openAPIV3Schema:
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: The specification of the Kafka Connect cluster.
              properties:
                authentication:
                  description: Authentication configuration for Kafka Connect.
                  properties:
                    accessToken:
                      description: Link to Kubernetes Secret containing the access token which was obtained from the authorization server.
                      properties:
                        key:
                          description: The key under which the secret value is stored in the Kubernetes Secret.
                          type: string
                        secretName:
                          description: The name of the Kubernetes Secret containing the secret value.
                          type: string
                      required:
                        - key
                        - secretName
                      type: object
                    accessTokenIsJwt:
                      description: Configure whether access token should be treated as JWT. This should be set to `false` if the authorization server returns opaque tokens. Defaults to `true`.
                      type: boolean
                    accessTokenLocation:
                      description: Path to the token file containing an access token to be used for authentication.
                      type: string
                    audience:
                      description: OAuth audience to use when authenticating against the authorization server. Some authorization servers require the audience to be explicitly set. The possible values depend on how the authorization server is configured. By default, `audience` is not specified when performing the token endpoint request.
                      type: string
                    certificateAndKey:
                      description: Reference to the `Secret` which holds the certificate and private key pair.
                      properties:
                        certificate:
                          description: The name of the file certificate in the Secret.
                          type: string
                        key:
                          description: The name of the private key in the Secret.
                          type: string
                        secretName:
                          description: The name of the Secret containing the certificate.
                          type: string
                      required:
                        - secretName
                        - certificate
                        - key
                      type: object
                    clientAssertion:
                      description: Link to Kubernetes secret containing the client assertion which was manually configured for the client.
                      properties:
                        key:
                          description: The key under which the secret value is stored in the Kubernetes Secret.
                          type: string
                        secretName:
                          description: The name of the Kubernetes Secret containing the secret value.
                          type: string
                      required:
                        - key
                        - secretName
                      type: object
                    clientAssertionLocation:
                      description: Path to the file containing the client assertion to be used for authentication.
                      type: string
                    clientAssertionType:
                      description: The client assertion type. If not set, and either `clientAssertion` or `clientAssertionLocation` is configured, this value defaults to `urn:ietf:params:oauth:client-assertion-type:jwt-bearer`.
                      type: string
                    clientId:
                      description: OAuth Client ID which the Kafka client can use to authenticate against the OAuth server and use the token endpoint URI.
                      type: string
                    clientSecret:
                      description: Link to Kubernetes Secret containing the OAuth client secret which the Kafka client can use to authenticate against the OAuth server and use the token endpoint URI.
                      properties:
                        key:
                          description: The key under which the secret value is stored in the Kubernetes Secret.
                          type: string
                        secretName:
                          description: The name of the Kubernetes Secret containing the secret value.
                          type: string
                      required:
                        - key
                        - secretName
                      type: object
                    connectTimeoutSeconds:
                      description: The connect timeout in seconds when connecting to authorization server. If not set, the effective connect timeout is 60 seconds.
                      type: integer
                    disableTlsHostnameVerification:
                      description: Enable or disable TLS hostname verification. Default value is `false`.
                      type: boolean
                    enableMetrics:
                      description: Enable or disable OAuth metrics. Default value is `false`.
                      type: boolean
                    httpRetries:
                      description: The maximum number of retries to attempt if an initial HTTP request fails. If not set, the default is to not attempt any retries.
                      type: integer
                    httpRetryPauseMs:
                      description: The pause to take before retrying a failed HTTP request. If not set, the default is to not pause at all but to immediately repeat a request.
                      type: integer
                    includeAcceptHeader:
                      description: Whether the Accept header should be set in requests to the authorization servers. The default value is `true`.
                      type: boolean
                    maxTokenExpirySeconds:
                      description: Set or limit time-to-live of the access tokens to the specified number of seconds. This should be set if the authorization server returns opaque tokens.
                      type: integer
                    passwordSecret:
                      description: Reference to the `Secret` which holds the password.
                      properties:
                        password:
                          description: The name of the key in the Secret under which the password is stored.
                          type: string
                        secretName:
                          description: The name of the Secret containing the password.
                          type: string
                      required:
                        - secretName
                        - password
                      type: object
                    readTimeoutSeconds:
                      description: The read timeout in seconds when connecting to authorization server. If not set, the effective read timeout is 60 seconds.
                      type: integer
                    refreshToken:
                      description: Link to Kubernetes Secret containing the refresh token which can be used to obtain access token from the authorization server.
                      properties:
                        key:
                          description: The key under which the secret value is stored in the Kubernetes Secret.
                          type: string
                        secretName:
                          description: The name of the Kubernetes Secret containing the secret value.
                          type: string
                      required:
                        - key
                        - secretName
                      type: object
                    saslExtensions:
                      additionalProperties:
                        type: string
                      description: SASL extensions parameters.
                      type: object
                    scope:
                      description: OAuth scope to use when authenticating against the authorization server. Some authorization servers require this to be set. The possible values depend on how authorization server is configured. By default `scope` is not specified when doing the token endpoint request.
                      type: string
                    tlsTrustedCertificates:
                      description: Trusted certificates for TLS connection to the OAuth server.
                      items:
                        oneOf:
                          - properties:
                              certificate: {}
                            required:
                              - certificate
                          - properties:
                              pattern: {}
                            required:
                              - pattern
                        properties:
                          certificate:
                            description: The name of the file certificate in the secret.
                            type: string
                          pattern:
                            description: Pattern for the certificate files in the secret. Use the link:https://en.wikipedia.org/wiki/Glob_(programming)[_glob syntax_] for the pattern. All files in the secret that match the pattern are used.
                            type: string
                          secretName:
                            description: The name of the Secret containing the certificate.
                            type: string
                        required:
                          - secretName
                        type: object
                      type: array
                    tokenEndpointUri:
                      description: Authorization server token endpoint URI.
                      type: string
                    type:
                      description: Authentication type. Currently the supported types are `tls`, `scram-sha-256`, `scram-sha-512`, `plain`, and 'oauth'. `scram-sha-256` and `scram-sha-512` types use SASL SCRAM-SHA-256 and SASL SCRAM-SHA-512 Authentication, respectively. `plain` type uses SASL PLAIN Authentication. `oauth` type uses SASL OAUTHBEARER Authentication. The `tls` type uses TLS Client Authentication. The `tls` type is supported only over TLS connections.
                      enum:
                        - tls
                        - scram-sha-256
                        - scram-sha-512
                        - plain
                        - oauth
                      type: string
                    username:
                      description: Username used for the authentication.
                      type: string
                  required:
                    - type
                  type: object
                bootstrapServers:
                  description: Bootstrap servers to connect to. This should be given as a comma separated list of _<hostname>_:_<port>_ pairs.
                  type: string
                build:
                  description: Configures how the Connect container image should be built. Optional.
                  properties:
                    output:
                      description: Configures where should the newly built image be stored. Required.
                      properties:
                        additionalKanikoOptions:
                          description: 'Configures additional options which will be passed to the Kaniko executor when building the new Connect image. Allowed options are: --customPlatform, --custom-platform, --insecure, --insecure-pull, --insecure-registry, --log-format, --log-timestamp, --registry-mirror, --reproducible, --single-snapshot, --skip-tls-verify, --skip-tls-verify-pull, --skip-tls-verify-registry, --verbosity, --snapshotMode, --use-new-run, --registry-certificate, --registry-client-cert. These options will be used only on Kubernetes where the Kaniko executor is used. They will be ignored on OpenShift. The options are described in the link:https://github.com/GoogleContainerTools/kaniko[Kaniko GitHub repository^]. Changing this field does not trigger new build of the Kafka Connect image.'
                          items:
                            type: string
                          type: array
                        image:
                          description: The name of the image which will be built. Required.
                          type: string
                        pushSecret:
                          description: Container Registry Secret with the credentials for pushing the newly built image.
                          type: string
                        type:
                          description: Output type. Must be either `docker` for pushing the newly build image to Docker compatible registry or `imagestream` for pushing the image to OpenShift ImageStream. Required.
                          enum:
                            - docker
                            - imagestream
                          type: string
                      required:
                        - image
                        - type
                      type: object
                    plugins:
                      description: List of connector plugins which should be added to the Kafka Connect. Required.
                      items:
                        properties:
                          artifacts:
                            description: List of artifacts which belong to this connector plugin. Required.
                            items:
                              properties:
                                artifact:
                                  description: Maven artifact id. Applicable to the `maven` artifact type only.
                                  type: string
                                fileName:
                                  description: Name under which the artifact will be stored.
                                  type: string
                                group:
                                  description: Maven group id. Applicable to the `maven` artifact type only.
                                  type: string
                                insecure:
                                  description: By default, connections using TLS are verified to check they are secure. The server certificate used must be valid, trusted, and contain the server name. By setting this option to `true`, all TLS verification is disabled and the artifact will be downloaded, even when the server is considered insecure.
                                  type: boolean
                                repository:
                                  description: Maven repository to download the artifact from. Applicable to the `maven` artifact type only.
                                  type: string
                                sha512sum:
                                  description: 'SHA512 checksum of the artifact. Optional. If specified, the checksum will be verified while building the new container. If not specified, the downloaded artifact will not be verified. Not applicable to the `maven` artifact type. '
                                  type: string
                                type:
                                  description: Artifact type. Currently, the supported artifact types are `tgz`, `jar`, `zip`, `other` and `maven`.
                                  enum:
                                    - jar
                                    - tgz
                                    - zip
                                    - maven
                                    - other
                                  type: string
                                url:
                                  description: URL of the artifact which will be downloaded. Strimzi does not do any security scanning of the downloaded artifacts. For security reasons, you should first verify the artifacts manually and configure the checksum verification to make sure the same artifact is used in the automated build. Required for `jar`, `zip`, `tgz` and `other` artifacts. Not applicable to the `maven` artifact type.
                                  pattern: ^(https?|ftp)://[-a-zA-Z0-9+&@#/%?=~_|!:,.;]*[-a-zA-Z0-9+&@#/%=~_|]$
                                  type: string
                                version:
                                  description: Maven version number. Applicable to the `maven` artifact type only.
                                  type: string
                              required:
                                - type
                              type: object
                            type: array
                          name:
                            description: 'The unique name of the connector plugin. Will be used to generate the path where the connector artifacts will be stored. The name has to be unique within the KafkaConnect resource. The name has to follow the following pattern: `^[a-z][-_a-z0-9]*[a-z]$`. Required.'
                            pattern: ^[a-z0-9][-_a-z0-9]*[a-z0-9]$
                            type: string
                        required:
                          - name
                          - artifacts
                        type: object
                      type: array
                    resources:
                      description: CPU and memory resources to reserve for the build.
                      properties:
                        claims:
                          items:
                            properties:
                              name:
                                type: string
                            type: object
                          type: array
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          type: object
                      type: object
                  required:
                    - output
                    - plugins
                  type: object
                clientRackInitImage:
                  description: The image of the init container used for initializing the `client.rack`.
                  type: string
                config:
                  description: 'The Kafka Connect configuration. Properties with the following prefixes cannot be set: ssl., sasl., security., listeners, plugin.path, rest., bootstrap.servers, consumer.interceptor.classes, producer.interceptor.classes (with the exception of: ssl.endpoint.identification.algorithm, ssl.cipher.suites, ssl.protocol, ssl.enabled.protocols).'
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                externalConfiguration:
                  description: Pass data from Secrets or ConfigMaps to the Kafka Connect pods and use them to configure connectors.
                  properties:
                    env:
                      description: Makes data from a Secret or ConfigMap available in the Kafka Connect pods as environment variables.
                      items:
                        properties:
                          name:
                            description: Name of the environment variable which will be passed to the Kafka Connect pods. The name of the environment variable cannot start with `KAFKA_` or `STRIMZI_`.
                            type: string
                          valueFrom:
                            description: Value of the environment variable which will be passed to the Kafka Connect pods. It can be passed either as a reference to Secret or ConfigMap field. The field has to specify exactly one Secret or ConfigMap.
                            oneOf:
                              - properties:
                                  secretKeyRef: {}
                                required:
                                  - secretKeyRef
                              - properties:
                                  configMapKeyRef: {}
                                required:
                                  - configMapKeyRef
                            properties:
                              configMapKeyRef:
                                description: Reference to a key in a ConfigMap.
                                properties:
                                  key:
                                    type: string
                                  name:
                                    type: string
                                  optional:
                                    type: boolean
                                type: object
                              secretKeyRef:
                                description: Reference to a key in a Secret.
                                properties:
                                  key:
                                    type: string
                                  name:
                                    type: string
                                  optional:
                                    type: boolean
                                type: object
                            type: object
                        required:
                          - name
                          - valueFrom
                        type: object
                      type: array
                    volumes:
                      description: Makes data from a Secret or ConfigMap available in the Kafka Connect pods as volumes.
                      items:
                        oneOf:
                          - properties:
                              secret: {}
                            required:
                              - secret
                          - properties:
                              configMap: {}
                            required:
                              - configMap
                        properties:
                          configMap:
                            description: Reference to a key in a ConfigMap. Exactly one Secret or ConfigMap has to be specified.
                            properties:
                              defaultMode:
                                type: integer
                              items:
                                items:
                                  properties:
                                    key:
                                      type: string
                                    mode:
                                      type: integer
                                    path:
                                      type: string
                                  type: object
                                type: array
                              name:
                                type: string
                              optional:
                                type: boolean
                            type: object
                          name:
                            description: Name of the volume which will be added to the Kafka Connect pods.
                            type: string
                          secret:
                            description: Reference to a key in a Secret. Exactly one Secret or ConfigMap has to be specified.
                            properties:
                              defaultMode:
                                type: integer
                              items:
                                items:
                                  properties:
                                    key:
                                      type: string
                                    mode:
                                      type: integer
                                    path:
                                      type: string
                                  type: object
                                type: array
                              optional:
                                type: boolean
                              secretName:
                                type: string
                            type: object
                        required:
                          - name
                        type: object
                      type: array
                  type: object
                image:
                  description: The container image used for Kafka Connect pods. If no image name is explicitly specified, it is determined based on the `spec.version` configuration. The image names are specifically mapped to corresponding versions in the Cluster Operator configuration.
                  type: string
                jmxOptions:
                  description: JMX Options.
                  properties:
                    authentication:
                      description: Authentication configuration for connecting to the JMX port.
                      properties:
                        type:
                          description: Authentication type. Currently the only supported types are `password`.`password` type creates a username and protected port with no TLS.
                          enum:
                            - password
                          type: string
                      required:
                        - type
                      type: object
                  type: object
                jvmOptions:
                  description: JVM Options for pods.
                  properties:
                    -XX:
                      additionalProperties:
                        type: string
                      description: A map of -XX options to the JVM.
                      type: object
                    -Xms:
                      description: -Xms option to to the JVM.
                      pattern: ^[0-9]+[mMgG]?$
                      type: string
                    -Xmx:
                      description: -Xmx option to to the JVM.
                      pattern: ^[0-9]+[mMgG]?$
                      type: string
                    gcLoggingEnabled:
                      description: Specifies whether the Garbage Collection logging is enabled. The default is false.
                      type: boolean
                    javaSystemProperties:
                      description: A map of additional system properties which will be passed using the `-D` option to the JVM.
                      items:
                        properties:
                          name:
                            description: The system property name.
                            type: string
                          value:
                            description: The system property value.
                            type: string
                        type: object
                      type: array
                  type: object
                livenessProbe:
                  description: Pod liveness checking.
                  properties:
                    failureThreshold:
                      description: Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
                      minimum: 1
                      type: integer
                    initialDelaySeconds:
                      description: The initial delay before first the health is first checked. Default to 15 seconds. Minimum value is 0.
                      minimum: 0
                      type: integer
                    periodSeconds:
                      description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
                      minimum: 1
                      type: integer
                    successThreshold:
                      description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
                      minimum: 1
                      type: integer
                    timeoutSeconds:
                      description: The timeout for each attempted health check. Default to 5 seconds. Minimum value is 1.
                      minimum: 1
                      type: integer
                  type: object
                logging:
                  description: Logging configuration for Kafka Connect.
                  properties:
                    loggers:
                      additionalProperties:
                        type: string
                      description: A Map from logger name to logger level.
                      type: object
                    type:
                      description: Logging type, must be either 'inline' or 'external'.
                      enum:
                        - inline
                        - external
                      type: string
                    valueFrom:
                      description: '`ConfigMap` entry where the logging configuration is stored. '
                      properties:
                        configMapKeyRef:
                          description: Reference to the key in the ConfigMap containing the configuration.
                          properties:
                            key:
                              type: string
                            name:
                              type: string
                            optional:
                              type: boolean
                          type: object
                      type: object
                  required:
                    - type
                  type: object
                metricsConfig:
                  description: Metrics configuration.
                  properties:
                    type:
                      description: Metrics type. Only 'jmxPrometheusExporter' supported currently.
                      enum:
                        - jmxPrometheusExporter
                      type: string
                    valueFrom:
                      description: 'ConfigMap entry where the Prometheus JMX Exporter configuration is stored. '
                      properties:
                        configMapKeyRef:
                          description: Reference to the key in the ConfigMap containing the configuration.
                          properties:
                            key:
                              type: string
                            name:
                              type: string
                            optional:
                              type: boolean
                          type: object
                      type: object
                  required:
                    - type
                    - valueFrom
                  type: object
                rack:
                  description: Configuration of the node label which will be used as the `client.rack` consumer configuration.
                  properties:
                    topologyKey:
                      description: A key that matches labels assigned to the Kubernetes cluster nodes. The value of the label is used to set a broker's `broker.rack` config, and the `client.rack` config for Kafka Connect or MirrorMaker 2.
                      example: topology.kubernetes.io/zone
                      type: string
                  required:
                    - topologyKey
                  type: object
                readinessProbe:
                  description: Pod readiness checking.
                  properties:
                    failureThreshold:
                      description: Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
                      minimum: 1
                      type: integer
                    initialDelaySeconds:
                      description: The initial delay before first the health is first checked. Default to 15 seconds. Minimum value is 0.
                      minimum: 0
                      type: integer
                    periodSeconds:
                      description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
                      minimum: 1
                      type: integer
                    successThreshold:
                      description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
                      minimum: 1
                      type: integer
                    timeoutSeconds:
                      description: The timeout for each attempted health check. Default to 5 seconds. Minimum value is 1.
                      minimum: 1
                      type: integer
                  type: object
                replicas:
                  description: The number of pods in the Kafka Connect group. Defaults to `3`.
                  type: integer
                resources:
                  description: The maximum limits for CPU and memory resources and the requested initial resources.
                  properties:
                    claims:
                      items:
                        properties:
                          name:
                            type: string
                        type: object
                      type: array
                    limits:
                      additionalProperties:
                        anyOf:
                          - type: integer
                          - type: string
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                      type: object
                    requests:
                      additionalProperties:
                        anyOf:
                          - type: integer
                          - type: string
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                      type: object
                  type: object
                template:
                  description: Template for Kafka Connect and Kafka MirrorMaker 2 resources. The template allows users to specify how the `Pods`, `Service`, and other services are generated.
                  properties:
                    apiService:
                      description: Template for Kafka Connect API `Service`.
                      properties:
                        ipFamilies:
                          description: Specifies the IP Families used by the service. Available options are `IPv4` and `IPv6`. If unspecified, Kubernetes will choose the default value based on the `ipFamilyPolicy` setting.
                          items:
                            enum:
                              - IPv4
                              - IPv6
                            type: string
                          type: array
                        ipFamilyPolicy:
                          description: Specifies the IP Family Policy used by the service. Available options are `SingleStack`, `PreferDualStack` and `RequireDualStack`. `SingleStack` is for a single IP family. `PreferDualStack` is for two IP families on dual-stack configured clusters or a single IP family on single-stack clusters. `RequireDualStack` fails unless there are two IP families on dual-stack configured clusters. If unspecified, Kubernetes will choose the default value based on the service type.
                          enum:
                            - SingleStack
                            - PreferDualStack
                            - RequireDualStack
                          type: string
                        metadata:
                          description: Metadata applied to the resource.
                          properties:
                            annotations:
                              additionalProperties:
                                type: string
                              description: Annotations added to the Kubernetes resource.
                              type: object
                            labels:
                              additionalProperties:
                                type: string
                              description: Labels added to the Kubernetes resource.
                              type: object
                          type: object
                      type: object
                    buildConfig:
                      description: Template for the Kafka Connect BuildConfig used to build new container images. The BuildConfig is used only on OpenShift.
                      properties:
                        metadata:
                          description: Metadata to apply to the `PodDisruptionBudgetTemplate` resource.
                          properties:
                            annotations:
                              additionalProperties:
                                type: string
                              description: Annotations added to the Kubernetes resource.
                              type: object
                            labels:
                              additionalProperties:
                                type: string
                              description: Labels added to the Kubernetes resource.
                              type: object
                          type: object
                        pullSecret:
                          description: Container Registry Secret with the credentials for pulling the base image.
                          type: string
                      type: object
                    buildContainer:
                      description: Template for the Kafka Connect Build container. The build container is used only on Kubernetes.
                      properties:
                        env:
                          description: Environment variables which should be applied to the container.
                          items:
                            oneOf:
                              - properties:
                                  value: {}
                                required:
                                  - value
                              - properties:
                                  valueFrom: {}
                                required:
                                  - valueFrom
                            properties:
                              name:
                                description: The environment variable key.
                                type: string
                              value:
                                description: The environment variable value.
                                type: string
                              valueFrom:
                                description: Reference to the secret or config map property to which the environment variable is set.
                                oneOf:
                                  - properties:
                                      secretKeyRef: {}
                                    required:
                                      - secretKeyRef
                                  - properties:
                                      configMapKeyRef: {}
                                    required:
                                      - configMapKeyRef
                                properties:
                                  configMapKeyRef:
                                    description: Reference to a key in a config map.
                                    properties:
                                      key:
                                        type: string
                                      name:
                                        type: string
                                      optional:
                                        type: boolean
                                    type: object
                                  secretKeyRef:
                                    description: Reference to a key in a secret.
                                    properties:
                                      key:
                                        type: string
                                      name:
                                        type: string
                                      optional:
                                        type: boolean
                                    type: object
                                type: object
                            type: object
                          type: array
                        securityContext:
                          description: Security context for the container.
                          properties:
                            allowPrivilegeEscalation:
                              type: boolean
                            appArmorProfile:
                              properties:
                                localhostProfile:
                                  type: string
                                type:
                                  type: string
                              type: object
                            capabilities:
                              properties:
                                add:
                                  items:
                                    type: string
                                  type: array
                                drop:
                                  items:
                                    type: string
                                  type: array
                              type: object
                            privileged:
                              type: boolean
                            procMount:
                              type: string
                            readOnlyRootFilesystem:
                              type: boolean
                            runAsGroup:
                              type: integer
                            runAsNonRoot:
                              type: boolean
                            runAsUser:
                              type: integer
                            seLinuxOptions:
                              properties:
                                level:
                                  type: string
                                role:
                                  type: string
                                type:
                                  type: string
                                user:
                                  type: string
                              type: object
                            seccompProfile:
                              properties:
                                localhostProfile:
                                  type: string
                                type:
                                  type: string
                              type: object
                            windowsOptions:
                              properties:
                                gmsaCredentialSpec:
                                  type: string
                                gmsaCredentialSpecName:
                                  type: string
                                hostProcess:
                                  type: boolean
                                runAsUserName:
                                  type: string
                              type: object
                          type: object
                        volumeMounts:
                          description: Additional volume mounts which should be applied to the container.
                          items:
                            properties:
                              mountPath:
                                type: string
                              mountPropagation:
                                type: string
                              name:
                                type: string
                              readOnly:
                                type: boolean
                              recursiveReadOnly:
                                type: string
                              subPath:
                                type: string
                              subPathExpr:
                                type: string
                            type: object
                          type: array
                      type: object
                    buildPod:
                      description: Template for Kafka Connect Build `Pods`. The build pod is used only on Kubernetes.
                      properties:
                        affinity:
                          description: The pod's affinity rules.
                          properties:
                            nodeAffinity:
                              properties:
                                preferredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      preference:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchFields:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                        type: object
                                      weight:
                                        type: integer
                                    type: object
                                  type: array
                                requiredDuringSchedulingIgnoredDuringExecution:
                                  properties:
                                    nodeSelectorTerms:
                                      items:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchFields:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                        type: object
                                      type: array
                                  type: object
                              type: object
                            podAffinity:
                              properties:
                                preferredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      podAffinityTerm:
                                        properties:
                                          labelSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels:
                                                additionalProperties:
                                                  type: string
                                                type: object
                                            type: object
                                          matchLabelKeys:
                                            items:
                                              type: string
                                            type: array
                                          mismatchLabelKeys:
                                            items:
                                              type: string
                                            type: array
                                          namespaceSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels:
                                                additionalProperties:
                                                  type: string
                                                type: object
                                            type: object
                                          namespaces:
                                            items:
                                              type: string
                                            type: array
                                          topologyKey:
                                            type: string
                                        type: object
                                      weight:
                                        type: integer
                                    type: object
                                  type: array
                                requiredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      labelSelector:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchLabels:
                                            additionalProperties:
                                              type: string
                                            type: object
                                        type: object
                                      matchLabelKeys:
                                        items:
                                          type: string
                                        type: array
                                      mismatchLabelKeys:
                                        items:
                                          type: string
                                        type: array
                                      namespaceSelector:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchLabels:
                                            additionalProperties:
                                              type: string
                                            type: object
                                        type: object
                                      namespaces:
                                        items:
                                          type: string
                                        type: array
                                      topologyKey:
                                        type: string
                                    type: object
                                  type: array
                              type: object
                            podAntiAffinity:
                              properties:
                                preferredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      podAffinityTerm:
                                        properties:
                                          labelSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels:
                                                additionalProperties:
                                                  type: string
                                                type: object
                                            type: object
                                          matchLabelKeys:
                                            items:
                                              type: string
                                            type: array
                                          mismatchLabelKeys:
                                            items:
                                              type: string
                                            type: array
                                          namespaceSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels:
                                                additionalProperties:
                                                  type: string
                                                type: object
                                            type: object
                                          namespaces:
                                            items:
                                              type: string
                                            type: array
                                          topologyKey:
                                            type: string
                                        type: object
                                      weight:
                                        type: integer
                                    type: object
                                  type: array
                                requiredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      labelSelector:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchLabels:
                                            additionalProperties:
                                              type: string
                                            type: object
                                        type: object
                                      matchLabelKeys:
                                        items:
                                          type: string
                                        type: array
                                      mismatchLabelKeys:
                                        items:
                                          type: string
                                        type: array
                                      namespaceSelector:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchLabels:
                                            additionalProperties:
                                              type: string
                                            type: object
                                        type: object
                                      namespaces:
                                        items:
                                          type: string
                                        type: array
                                      topologyKey:
                                        type: string
                                    type: object
                                  type: array
                              type: object
                          type: object
                        enableServiceLinks:
                          description: Indicates whether information about services should be injected into Pod's environment variables.
                          type: boolean
                        hostAliases:
                          description: The pod's HostAliases. HostAliases is an optional list of hosts and IPs that will be injected into the Pod's hosts file if specified.
                          items:
                            properties:
                              hostnames:
                                items:
                                  type: string
                                type: array
                              ip:
                                type: string
                            type: object
                          type: array
                        imagePullSecrets:
                          description: List of references to secrets in the same namespace to use for pulling any of the images used by this Pod. When the `STRIMZI_IMAGE_PULL_SECRETS` environment variable in Cluster Operator and the `imagePullSecrets` option are specified, only the `imagePullSecrets` variable is used and the `STRIMZI_IMAGE_PULL_SECRETS` variable is ignored.
                          items:
                            properties:
                              name:
                                type: string
                            type: object
                          type: array
                        metadata:
                          description: Metadata applied to the resource.
                          properties:
                            annotations:
                              additionalProperties:
                                type: string
                              description: Annotations added to the Kubernetes resource.
                              type: object
                            labels:
                              additionalProperties:
                                type: string
                              description: Labels added to the Kubernetes resource.
                              type: object
                          type: object
                        priorityClassName:
                          description: 'The name of the priority class used to assign priority to the pods. '
                          type: string
                        schedulerName:
                          description: The name of the scheduler used to dispatch this `Pod`. If not specified, the default scheduler will be used.
                          type: string
                        securityContext:
                          description: Configures pod-level security attributes and common container settings.
                          properties:
                            appArmorProfile:
                              properties:
                                localhostProfile:
                                  type: string
                                type:
                                  type: string
                              type: object
                            fsGroup:
                              type: integer
                            fsGroupChangePolicy:
                              type: string
                            runAsGroup:
                              type: integer
                            runAsNonRoot:
                              type: boolean
                            runAsUser:
                              type: integer
                            seLinuxOptions:
                              properties:
                                level:
                                  type: string
                                role:
                                  type: string
                                type:
                                  type: string
                                user:
                                  type: string
                              type: object
                            seccompProfile:
                              properties:
                                localhostProfile:
                                  type: string
                                type:
                                  type: string
                              type: object
                            supplementalGroups:
                              items:
                                type: integer
                              type: array
                            sysctls:
                              items:
                                properties:
                                  name:
                                    type: string
                                  value:
                                    type: string
                                type: object
                              type: array
                            windowsOptions:
                              properties:
                                gmsaCredentialSpec:
                                  type: string
                                gmsaCredentialSpecName:
                                  type: string
                                hostProcess:
                                  type: boolean
                                runAsUserName:
                                  type: string
                              type: object
                          type: object
                        terminationGracePeriodSeconds:
                          description: The grace period is the duration in seconds after the processes running in the pod are sent a termination signal, and the time when the processes are forcibly halted with a kill signal. Set this value to longer than the expected cleanup time for your process. Value must be a non-negative integer. A zero value indicates delete immediately. You might need to increase the grace period for very large Kafka clusters, so that the Kafka brokers have enough time to transfer their work to another broker before they are terminated. Defaults to 30 seconds.
                          minimum: 0
                          type: integer
                        tmpDirSizeLimit:
                          description: Defines the total amount of pod memory allocated for the temporary `EmptyDir` volume `/tmp`. Specify the allocation in memory units, for example, `100Mi` for 100 mebibytes. Default value is `5Mi`. The `/tmp` volume is backed by pod memory, not disk storage, so avoid setting a high value as it consumes pod memory resources.
                          pattern: ^([0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$
                          type: string
                        tolerations:
                          description: The pod's tolerations.
                          items:
                            properties:
                              effect:
                                type: string
                              key:
                                type: string
                              operator:
                                type: string
                              tolerationSeconds:
                                type: integer
                              value:
                                type: string
                            type: object
                          type: array
                        topologySpreadConstraints:
                          description: The pod's topology spread constraints.
                          items:
                            properties:
                              labelSelector:
                                properties:
                                  matchExpressions:
                                    items:
                                      properties:
                                        key:
                                          type: string
                                        operator:
                                          type: string
                                        values:
                                          items:
                                            type: string
                                          type: array
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    type: object
                                type: object
                              matchLabelKeys:
                                items:
                                  type: string
                                type: array
                              maxSkew:
                                type: integer
                              minDomains:
                                type: integer
                              nodeAffinityPolicy:
                                type: string
                              nodeTaintsPolicy:
                                type: string
                              topologyKey:
                                type: string
                              whenUnsatisfiable:
                                type: string
                            type: object
                          type: array
                        volumes:
                          description: Additional volumes that can be mounted to the pod.
                          items:
                            oneOf:
                              - properties:
                                  configMap: {}
                                  csi: {}
                                  emptyDir: {}
                                  persistentVolumeClaim: {}
                                  secret: {}
                            properties:
                              configMap:
                                description: ConfigMap to use to populate the volume.
                                properties:
                                  defaultMode:
                                    type: integer
                                  items:
                                    items:
                                      properties:
                                        key:
                                          type: string
                                        mode:
                                          type: integer
                                        path:
                                          type: string
                                      type: object
                                    type: array
                                  name:
                                    type: string
                                  optional:
                                    type: boolean
                                type: object
                              csi:
                                description: CSIVolumeSource object to use to populate the volume.
                                properties:
                                  driver:
                                    type: string
                                  fsType:
                                    type: string
                                  nodePublishSecretRef:
                                    properties:
                                      name:
                                        type: string
                                    type: object
                                  readOnly:
                                    type: boolean
                                  volumeAttributes:
                                    additionalProperties:
                                      type: string
                                    type: object
                                type: object
                              emptyDir:
                                description: EmptyDir to use to populate the volume.
                                properties:
                                  medium:
                                    type: string
                                  sizeLimit:
                                    properties:
                                      amount:
                                        type: string
                                      format:
                                        type: string
                                    type: object
                                type: object
                              name:
                                description: Name to use for the volume. Required.
                                type: string
                              persistentVolumeClaim:
                                description: PersistentVolumeClaim object to use to populate the volume.
                                properties:
                                  claimName:
                                    type: string
                                  readOnly:
                                    type: boolean
                                type: object
                              secret:
                                description: Secret to use populate the volume.
                                properties:
                                  defaultMode:
                                    type: integer
                                  items:
                                    items:
                                      properties:
                                        key:
                                          type: string
                                        mode:
                                          type: integer
                                        path:
                                          type: string
                                      type: object
                                    type: array
                                  optional:
                                    type: boolean
                                  secretName:
                                    type: string
                                type: object
                            type: object
                          type: array
                      type: object
                    buildServiceAccount:
                      description: Template for the Kafka Connect Build service account.
                      properties:
                        metadata:
                          description: Metadata applied to the resource.
                          properties:
                            annotations:
                              additionalProperties:
                                type: string
                              description: Annotations added to the Kubernetes resource.
                              type: object
                            labels:
                              additionalProperties:
                                type: string
                              description: Labels added to the Kubernetes resource.
                              type: object
                          type: object
                      type: object
                    clusterRoleBinding:
                      description: Template for the Kafka Connect ClusterRoleBinding.
                      properties:
                        metadata:
                          description: Metadata applied to the resource.
                          properties:
                            annotations:
                              additionalProperties:
                                type: string
                              description: Annotations added to the Kubernetes resource.
                              type: object
                            labels:
                              additionalProperties:
                                type: string
                              description: Labels added to the Kubernetes resource.
                              type: object
                          type: object
                      type: object
                    connectContainer:
                      description: Template for the Kafka Connect container.
                      properties:
                        env:
                          description: Environment variables which should be applied to the container.
                          items:
                            oneOf:
                              - properties:
                                  value: {}
                                required:
                                  - value
                              - properties:
                                  valueFrom: {}
                                required:
                                  - valueFrom
                            properties:
                              name:
                                description: The environment variable key.
                                type: string
                              value:
                                description: The environment variable value.
                                type: string
                              valueFrom:
                                description: Reference to the secret or config map property to which the environment variable is set.
                                oneOf:
                                  - properties:
                                      secretKeyRef: {}
                                    required:
                                      - secretKeyRef
                                  - properties:
                                      configMapKeyRef: {}
                                    required:
                                      - configMapKeyRef
                                properties:
                                  configMapKeyRef:
                                    description: Reference to a key in a config map.
                                    properties:
                                      key:
                                        type: string
                                      name:
                                        type: string
                                      optional:
                                        type: boolean
                                    type: object
                                  secretKeyRef:
                                    description: Reference to a key in a secret.
                                    properties:
                                      key:
                                        type: string
                                      name:
                                        type: string
                                      optional:
                                        type: boolean
                                    type: object
                                type: object
                            type: object
                          type: array
                        securityContext:
                          description: Security context for the container.
                          properties:
                            allowPrivilegeEscalation:
                              type: boolean
                            appArmorProfile:
                              properties:
                                localhostProfile:
                                  type: string
                                type:
                                  type: string
                              type: object
                            capabilities:
                              properties:
                                add:
                                  items:
                                    type: string
                                  type: array
                                drop:
                                  items:
                                    type: string
                                  type: array
                              type: object
                            privileged:
                              type: boolean
                            procMount:
                              type: string
                            readOnlyRootFilesystem:
                              type: boolean
                            runAsGroup:
                              type: integer
                            runAsNonRoot:
                              type: boolean
                            runAsUser:
                              type: integer
                            seLinuxOptions:
                              properties:
                                level:
                                  type: string
                                role:
                                  type: string
                                type:
                                  type: string
                                user:
                                  type: string
                              type: object
                            seccompProfile:
                              properties:
                                localhostProfile:
                                  type: string
                                type:
                                  type: string
                              type: object
                            windowsOptions:
                              properties:
                                gmsaCredentialSpec:
                                  type: string
                                gmsaCredentialSpecName:
                                  type: string
                                hostProcess:
                                  type: boolean
                                runAsUserName:
                                  type: string
                              type: object
                          type: object
                        volumeMounts:
                          description: Additional volume mounts which should be applied to the container.
                          items:
                            properties:
                              mountPath:
                                type: string
                              mountPropagation:
                                type: string
                              name:
                                type: string
                              readOnly:
                                type: boolean
                              recursiveReadOnly:
                                type: string
                              subPath:
                                type: string
                              subPathExpr:
                                type: string
                            type: object
                          type: array
                      type: object
                    deployment:
                      description: Template for Kafka Connect `Deployment`.
                      properties:
                        deploymentStrategy:
                          description: Pod replacement strategy for deployment configuration changes. Valid values are `RollingUpdate` and `Recreate`. Defaults to `RollingUpdate`.
                          enum:
                            - RollingUpdate
                            - Recreate
                          type: string
                        metadata:
                          description: Metadata applied to the resource.
                          properties:
                            annotations:
                              additionalProperties:
                                type: string
                              description: Annotations added to the Kubernetes resource.
                              type: object
                            labels:
                              additionalProperties:
                                type: string
                              description: Labels added to the Kubernetes resource.
                              type: object
                          type: object
                      type: object
                    headlessService:
                      description: Template for Kafka Connect headless `Service`.
                      properties:
                        ipFamilies:
                          description: Specifies the IP Families used by the service. Available options are `IPv4` and `IPv6`. If unspecified, Kubernetes will choose the default value based on the `ipFamilyPolicy` setting.
                          items:
                            enum:
                              - IPv4
                              - IPv6
                            type: string
                          type: array
                        ipFamilyPolicy:
                          description: Specifies the IP Family Policy used by the service. Available options are `SingleStack`, `PreferDualStack` and `RequireDualStack`. `SingleStack` is for a single IP family. `PreferDualStack` is for two IP families on dual-stack configured clusters or a single IP family on single-stack clusters. `RequireDualStack` fails unless there are two IP families on dual-stack configured clusters. If unspecified, Kubernetes will choose the default value based on the service type.
                          enum:
                            - SingleStack
                            - PreferDualStack
                            - RequireDualStack
                          type: string
                        metadata:
                          description: Metadata applied to the resource.
                          properties:
                            annotations:
                              additionalProperties:
                                type: string
                              description: Annotations added to the Kubernetes resource.
                              type: object
                            labels:
                              additionalProperties:
                                type: string
                              description: Labels added to the Kubernetes resource.
                              type: object
                          type: object
                      type: object
                    initContainer:
                      description: Template for the Kafka init container.
                      properties:
                        env:
                          description: Environment variables which should be applied to the container.
                          items:
                            oneOf:
                              - properties:
                                  value: {}
                                required:
                                  - value
                              - properties:
                                  valueFrom: {}
                                required:
                                  - valueFrom
                            properties:
                              name:
                                description: The environment variable key.
                                type: string
                              value:
                                description: The environment variable value.
                                type: string
                              valueFrom:
                                description: Reference to the secret or config map property to which the environment variable is set.
                                oneOf:
                                  - properties:
                                      secretKeyRef: {}
                                    required:
                                      - secretKeyRef
                                  - properties:
                                      configMapKeyRef: {}
                                    required:
                                      - configMapKeyRef
                                properties:
                                  configMapKeyRef:
                                    description: Reference to a key in a config map.
                                    properties:
                                      key:
                                        type: string
                                      name:
                                        type: string
                                      optional:
                                        type: boolean
                                    type: object
                                  secretKeyRef:
                                    description: Reference to a key in a secret.
                                    properties:
                                      key:
                                        type: string
                                      name:
                                        type: string
                                      optional:
                                        type: boolean
                                    type: object
                                type: object
                            type: object
                          type: array
                        securityContext:
                          description: Security context for the container.
                          properties:
                            allowPrivilegeEscalation:
                              type: boolean
                            appArmorProfile:
                              properties:
                                localhostProfile:
                                  type: string
                                type:
                                  type: string
                              type: object
                            capabilities:
                              properties:
                                add:
                                  items:
                                    type: string
                                  type: array
                                drop:
                                  items:
                                    type: string
                                  type: array
                              type: object
                            privileged:
                              type: boolean
                            procMount:
                              type: string
                            readOnlyRootFilesystem:
                              type: boolean
                            runAsGroup:
                              type: integer
                            runAsNonRoot:
                              type: boolean
                            runAsUser:
                              type: integer
                            seLinuxOptions:
                              properties:
                                level:
                                  type: string
                                role:
                                  type: string
                                type:
                                  type: string
                                user:
                                  type: string
                              type: object
                            seccompProfile:
                              properties:
                                localhostProfile:
                                  type: string
                                type:
                                  type: string
                              type: object
                            windowsOptions:
                              properties:
                                gmsaCredentialSpec:
                                  type: string
                                gmsaCredentialSpecName:
                                  type: string
                                hostProcess:
                                  type: boolean
                                runAsUserName:
                                  type: string
                              type: object
                          type: object
                        volumeMounts:
                          description: Additional volume mounts which should be applied to the container.
                          items:
                            properties:
                              mountPath:
                                type: string
                              mountPropagation:
                                type: string
                              name:
                                type: string
                              readOnly:
                                type: boolean
                              recursiveReadOnly:
                                type: string
                              subPath:
                                type: string
                              subPathExpr:
                                type: string
                            type: object
                          type: array
                      type: object
                    jmxSecret:
                      description: Template for Secret of the Kafka Connect Cluster JMX authentication.
                      properties:
                        metadata:
                          description: Metadata applied to the resource.
                          properties:
                            annotations:
                              additionalProperties:
                                type: string
                              description: Annotations added to the Kubernetes resource.
                              type: object
                            labels:
                              additionalProperties:
                                type: string
                              description: Labels added to the Kubernetes resource.
                              type: object
                          type: object
                      type: object
                    pod:
                      description: Template for Kafka Connect `Pods`.
                      properties:
                        affinity:
                          description: The pod's affinity rules.
                          properties:
                            nodeAffinity:
                              properties:
                                preferredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      preference:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchFields:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                        type: object
                                      weight:
                                        type: integer
                                    type: object
                                  type: array
                                requiredDuringSchedulingIgnoredDuringExecution:
                                  properties:
                                    nodeSelectorTerms:
                                      items:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchFields:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                        type: object
                                      type: array
                                  type: object
                              type: object
                            podAffinity:
                              properties:
                                preferredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      podAffinityTerm:
                                        properties:
                                          labelSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels:
                                                additionalProperties:
                                                  type: string
                                                type: object
                                            type: object
                                          matchLabelKeys:
                                            items:
                                              type: string
                                            type: array
                                          mismatchLabelKeys:
                                            items:
                                              type: string
                                            type: array
                                          namespaceSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels:
                                                additionalProperties:
                                                  type: string
                                                type: object
                                            type: object
                                          namespaces:
                                            items:
                                              type: string
                                            type: array
                                          topologyKey:
                                            type: string
                                        type: object
                                      weight:
                                        type: integer
                                    type: object
                                  type: array
                                requiredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      labelSelector:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchLabels:
                                            additionalProperties:
                                              type: string
                                            type: object
                                        type: object
                                      matchLabelKeys:
                                        items:
                                          type: string
                                        type: array
                                      mismatchLabelKeys:
                                        items:
                                          type: string
                                        type: array
                                      namespaceSelector:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchLabels:
                                            additionalProperties:
                                              type: string
                                            type: object
                                        type: object
                                      namespaces:
                                        items:
                                          type: string
                                        type: array
                                      topologyKey:
                                        type: string
                                    type: object
                                  type: array
                              type: object
                            podAntiAffinity:
                              properties:
                                preferredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      podAffinityTerm:
                                        properties:
                                          labelSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels:
                                                additionalProperties:
                                                  type: string
                                                type: object
                                            type: object
                                          matchLabelKeys:
                                            items:
                                              type: string
                                            type: array
                                          mismatchLabelKeys:
                                            items:
                                              type: string
                                            type: array
                                          namespaceSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels:
                                                additionalProperties:
                                                  type: string
                                                type: object
                                            type: object
                                          namespaces:
                                            items:
                                              type: string
                                            type: array
                                          topologyKey:
                                            type: string
                                        type: object
                                      weight:
                                        type: integer
                                    type: object
                                  type: array
                                requiredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      labelSelector:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchLabels:
                                            additionalProperties:
                                              type: string
                                            type: object
                                        type: object
                                      matchLabelKeys:
                                        items:
                                          type: string
                                        type: array
                                      mismatchLabelKeys:
                                        items:
                                          type: string
                                        type: array
                                      namespaceSelector:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchLabels:
                                            additionalProperties:
                                              type: string
                                            type: object
                                        type: object
                                      namespaces:
                                        items:
                                          type: string
                                        type: array
                                      topologyKey:
                                        type: string
                                    type: object
                                  type: array
                              type: object
                          type: object
                        enableServiceLinks:
                          description: Indicates whether information about services should be injected into Pod's environment variables.
                          type: boolean
                        hostAliases:
                          description: The pod's HostAliases. HostAliases is an optional list of hosts and IPs that will be injected into the Pod's hosts file if specified.
                          items:
                            properties:
                              hostnames:
                                items:
                                  type: string
                                type: array
                              ip:
                                type: string
                            type: object
                          type: array
                        imagePullSecrets:
                          description: List of references to secrets in the same namespace to use for pulling any of the images used by this Pod. When the `STRIMZI_IMAGE_PULL_SECRETS` environment variable in Cluster Operator and the `imagePullSecrets` option are specified, only the `imagePullSecrets` variable is used and the `STRIMZI_IMAGE_PULL_SECRETS` variable is ignored.
                          items:
                            properties:
                              name:
                                type: string
                            type: object
                          type: array
                        metadata:
                          description: Metadata applied to the resource.
                          properties:
                            annotations:
                              additionalProperties:
                                type: string
                              description: Annotations added to the Kubernetes resource.
                              type: object
                            labels:
                              additionalProperties:
                                type: string
                              description: Labels added to the Kubernetes resource.
                              type: object
                          type: object
                        priorityClassName:
                          description: 'The name of the priority class used to assign priority to the pods. '
                          type: string
                        schedulerName:
                          description: The name of the scheduler used to dispatch this `Pod`. If not specified, the default scheduler will be used.
                          type: string
                        securityContext:
                          description: Configures pod-level security attributes and common container settings.
                          properties:
                            appArmorProfile:
                              properties:
                                localhostProfile:
                                  type: string
                                type:
                                  type: string
                              type: object
                            fsGroup:
                              type: integer
                            fsGroupChangePolicy:
                              type: string
                            runAsGroup:
                              type: integer
                            runAsNonRoot:
                              type: boolean
                            runAsUser:
                              type: integer
                            seLinuxOptions:
                              properties:
                                level:
                                  type: string
                                role:
                                  type: string
                                type:
                                  type: string
                                user:
                                  type: string
                              type: object
                            seccompProfile:
                              properties:
                                localhostProfile:
                                  type: string
                                type:
                                  type: string
                              type: object
                            supplementalGroups:
                              items:
                                type: integer
                              type: array
                            sysctls:
                              items:
                                properties:
                                  name:
                                    type: string
                                  value:
                                    type: string
                                type: object
                              type: array
                            windowsOptions:
                              properties:
                                gmsaCredentialSpec:
                                  type: string
                                gmsaCredentialSpecName:
                                  type: string
                                hostProcess:
                                  type: boolean
                                runAsUserName:
                                  type: string
                              type: object
                          type: object
                        terminationGracePeriodSeconds:
                          description: The grace period is the duration in seconds after the processes running in the pod are sent a termination signal, and the time when the processes are forcibly halted with a kill signal. Set this value to longer than the expected cleanup time for your process. Value must be a non-negative integer. A zero value indicates delete immediately. You might need to increase the grace period for very large Kafka clusters, so that the Kafka brokers have enough time to transfer their work to another broker before they are terminated. Defaults to 30 seconds.
                          minimum: 0
                          type: integer
                        tmpDirSizeLimit:
                          description: Defines the total amount of pod memory allocated for the temporary `EmptyDir` volume `/tmp`. Specify the allocation in memory units, for example, `100Mi` for 100 mebibytes. Default value is `5Mi`. The `/tmp` volume is backed by pod memory, not disk storage, so avoid setting a high value as it consumes pod memory resources.
                          pattern: ^([0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$
                          type: string
                        tolerations:
                          description: The pod's tolerations.
                          items:
                            properties:
                              effect:
                                type: string
                              key:
                                type: string
                              operator:
                                type: string
                              tolerationSeconds:
                                type: integer
                              value:
                                type: string
                            type: object
                          type: array
                        topologySpreadConstraints:
                          description: The pod's topology spread constraints.
                          items:
                            properties:
                              labelSelector:
                                properties:
                                  matchExpressions:
                                    items:
                                      properties:
                                        key:
                                          type: string
                                        operator:
                                          type: string
                                        values:
                                          items:
                                            type: string
                                          type: array
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    type: object
                                type: object
                              matchLabelKeys:
                                items:
                                  type: string
                                type: array
                              maxSkew:
                                type: integer
                              minDomains:
                                type: integer
                              nodeAffinityPolicy:
                                type: string
                              nodeTaintsPolicy:
                                type: string
                              topologyKey:
                                type: string
                              whenUnsatisfiable:
                                type: string
                            type: object
                          type: array
                        volumes:
                          description: Additional volumes that can be mounted to the pod.
                          items:
                            oneOf:
                              - properties:
                                  configMap: {}
                                  csi: {}
                                  emptyDir: {}
                                  persistentVolumeClaim: {}
                                  secret: {}
                            properties:
                              configMap:
                                description: ConfigMap to use to populate the volume.
                                properties:
                                  defaultMode:
                                    type: integer
                                  items:
                                    items:
                                      properties:
                                        key:
                                          type: string
                                        mode:
                                          type: integer
                                        path:
                                          type: string
                                      type: object
                                    type: array
                                  name:
                                    type: string
                                  optional:
                                    type: boolean
                                type: object
                              csi:
                                description: CSIVolumeSource object to use to populate the volume.
                                properties:
                                  driver:
                                    type: string
                                  fsType:
                                    type: string
                                  nodePublishSecretRef:
                                    properties:
                                      name:
                                        type: string
                                    type: object
                                  readOnly:
                                    type: boolean
                                  volumeAttributes:
                                    additionalProperties:
                                      type: string
                                    type: object
                                type: object
                              emptyDir:
                                description: EmptyDir to use to populate the volume.
                                properties:
                                  medium:
                                    type: string
                                  sizeLimit:
                                    properties:
                                      amount:
                                        type: string
                                      format:
                                        type: string
                                    type: object
                                type: object
                              name:
                                description: Name to use for the volume. Required.
                                type: string
                              persistentVolumeClaim:
                                description: PersistentVolumeClaim object to use to populate the volume.
                                properties:
                                  claimName:
                                    type: string
                                  readOnly:
                                    type: boolean
                                type: object
                              secret:
                                description: Secret to use populate the volume.
                                properties:
                                  defaultMode:
                                    type: integer
                                  items:
                                    items:
                                      properties:
                                        key:
                                          type: string
                                        mode:
                                          type: integer
                                        path:
                                          type: string
                                      type: object
                                    type: array
                                  optional:
                                    type: boolean
                                  secretName:
                                    type: string
                                type: object
                            type: object
                          type: array
                      type: object
                    podDisruptionBudget:
                      description: Template for Kafka Connect `PodDisruptionBudget`.
                      properties:
                        maxUnavailable:
                          description: Maximum number of unavailable pods to allow automatic Pod eviction. A Pod eviction is allowed when the `maxUnavailable` number of pods or fewer are unavailable after the eviction. Setting this value to 0 prevents all voluntary evictions, so the pods must be evicted manually. Defaults to 1.
                          minimum: 0
                          type: integer
                        metadata:
                          description: Metadata to apply to the `PodDisruptionBudgetTemplate` resource.
                          properties:
                            annotations:
                              additionalProperties:
                                type: string
                              description: Annotations added to the Kubernetes resource.
                              type: object
                            labels:
                              additionalProperties:
                                type: string
                              description: Labels added to the Kubernetes resource.
                              type: object
                          type: object
                      type: object
                    podSet:
                      description: Template for Kafka Connect `StrimziPodSet` resource.
                      properties:
                        metadata:
                          description: Metadata applied to the resource.
                          properties:
                            annotations:
                              additionalProperties:
                                type: string
                              description: Annotations added to the Kubernetes resource.
                              type: object
                            labels:
                              additionalProperties:
                                type: string
                              description: Labels added to the Kubernetes resource.
                              type: object
                          type: object
                      type: object
                    serviceAccount:
                      description: Template for the Kafka Connect service account.
                      properties:
                        metadata:
                          description: Metadata applied to the resource.
                          properties:
                            annotations:
                              additionalProperties:
                                type: string
                              description: Annotations added to the Kubernetes resource.
                              type: object
                            labels:
                              additionalProperties:
                                type: string
                              description: Labels added to the Kubernetes resource.
                              type: object
                          type: object
                      type: object
                  type: object
                tls:
                  description: TLS configuration.
                  properties:
                    trustedCertificates:
                      description: Trusted certificates for TLS connection.
                      items:
                        oneOf:
                          - properties:
                              certificate: {}
                            required:
                              - certificate
                          - properties:
                              pattern: {}
                            required:
                              - pattern
                        properties:
                          certificate:
                            description: The name of the file certificate in the secret.
                            type: string
                          pattern:
                            description: Pattern for the certificate files in the secret. Use the link:https://en.wikipedia.org/wiki/Glob_(programming)[_glob syntax_] for the pattern. All files in the secret that match the pattern are used.
                            type: string
                          secretName:
                            description: The name of the Secret containing the certificate.
                            type: string
                        required:
                          - secretName
                        type: object
                      type: array
                  type: object
                tracing:
                  description: The configuration of tracing in Kafka Connect.
                  properties:
                    type:
                      description: Type of the tracing used. Currently the only supported type is `opentelemetry` for OpenTelemetry tracing. As of Strimzi 0.37.0, `jaeger` type is not supported anymore and this option is ignored.
                      enum:
                        - jaeger
                        - opentelemetry
                      type: string
                  required:
                    - type
                  type: object
                version:
                  description: The Kafka Connect version. Defaults to the latest version. Consult the user documentation to understand the process required to upgrade or downgrade the version.
                  type: string
              required:
                - bootstrapServers
              type: object
            status:
              description: The status of the Kafka Connect cluster.
              properties:
                conditions:
                  description: List of status conditions.
                  items:
                    properties:
                      lastTransitionTime:
                        description: Last time the condition of a type changed from one status to another. The required format is 'yyyy-MM-ddTHH:mm:ssZ', in the UTC time zone.
                        type: string
                      message:
                        description: Human-readable message indicating details about the condition's last transition.
                        type: string
                      reason:
                        description: The reason for the condition's last transition (a single word in CamelCase).
                        type: string
                      status:
                        description: The status of the condition, either True, False or Unknown.
                        type: string
                      type:
                        description: The unique identifier of a condition, used to distinguish between other conditions in the resource.
                        type: string
                    type: object
                  type: array
                connectorPlugins:
                  description: The list of connector plugins available in this Kafka Connect deployment.
                  items:
                    properties:
                      class:
                        description: The class of the connector plugin.
                        type: string
                      type:
                        description: The type of the connector plugin. The available types are `sink` and `source`.
                        type: string
                      version:
                        description: The version of the connector plugin.
                        type: string
                    type: object
                  type: array
                labelSelector:
                  description: Label selector for pods providing this resource.
                  type: string
                observedGeneration:
                  description: The generation of the CRD that was last reconciled by the operator.
                  type: integer
                replicas:
                  description: The current number of pods being used to provide this resource.
                  type: integer
                url:
                  description: The URL of the REST API endpoint for managing and monitoring Kafka Connect connectors.
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        scale:
          labelSelectorPath: .status.labelSelector
          specReplicasPath: .spec.replicas
          statusReplicasPath: .status.replicas
        status: {}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app: strimzi
  name: strimzi-cluster-operator-kafka-broker-delegation
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: strimzi-kafka-broker
subjects:
  - kind: ServiceAccount
    name: strimzi-cluster-operator
    namespace: kafka
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    app: strimzi
    strimzi.io/crd-install: "true"
  name: kafkarebalances.kafka.strimzi.io
spec:
  conversion:
    strategy: None
  group: kafka.strimzi.io
  names:
    categories:
      - strimzi
    kind: KafkaRebalance
    listKind: KafkaRebalanceList
    plural: kafkarebalances
    shortNames:
      - kr
    singular: kafkarebalance
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - description: The name of the Kafka cluster this resource rebalances
          jsonPath: .metadata.labels.strimzi\.io/cluster
          name: Cluster
          type: string
        - description: If this rebalance resource is a template
          jsonPath: .metadata.annotations.strimzi\.io/rebalance-template
          name: Template
          type: string
        - description: Status of the current rebalancing operation
          jsonPath: .status.conditions[*].type
          name: Status
          type: string
      name: v1beta2
      schema:
        openAPIV3Schema:
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: The specification of the Kafka rebalance.
              properties:
                brokers:
                  description: The list of newly added brokers in case of scaling up or the ones to be removed in case of scaling down to use for rebalancing. This list can be used only with rebalancing mode `add-brokers` and `removed-brokers`. It is ignored with `full` mode.
                  items:
                    type: integer
                  type: array
                concurrentIntraBrokerPartitionMovements:
                  description: The upper bound of ongoing partition replica movements between disks within each broker. Default is 2.
                  minimum: 0
                  type: integer
                concurrentLeaderMovements:
                  description: The upper bound of ongoing partition leadership movements. Default is 1000.
                  minimum: 0
                  type: integer
                concurrentPartitionMovementsPerBroker:
                  description: The upper bound of ongoing partition replica movements going into/out of each broker. Default is 5.
                  minimum: 0
                  type: integer
                excludedTopics:
                  description: A regular expression where any matching topics will be excluded from the calculation of optimization proposals. This expression will be parsed by the java.util.regex.Pattern class; for more information on the supported format consult the documentation for that class.
                  type: string
                goals:
                  description: A list of goals, ordered by decreasing priority, to use for generating and executing the rebalance proposal. The supported goals are available at https://github.com/linkedin/cruise-control#goals. If an empty goals list is provided, the goals declared in the default.goals Cruise Control configuration parameter are used.
                  items:
                    type: string
                  type: array
                mode:
                  description: "Mode to run the rebalancing. The supported modes are `full`, `add-brokers`, `remove-brokers`.\nIf not specified, the `full` mode is used by default. \n\n* `full` mode runs the rebalancing across all the brokers in the cluster.\n* `add-brokers` mode can be used after scaling up the cluster to move some replicas to the newly added brokers.\n* `remove-brokers` mode can be used before scaling down the cluster to move replicas out of the brokers to be removed.\n* `remove-disks` mode can be used to move data across the volumes within the same broker\n."
                  enum:
                    - full
                    - add-brokers
                    - remove-brokers
                    - remove-disks
                  type: string
                moveReplicasOffVolumes:
                  description: List of brokers and their corresponding volumes from which replicas need to be moved.
                  items:
                    properties:
                      brokerId:
                        description: ID of the broker that contains the disk from which you want to move the partition replicas.
                        type: integer
                      volumeIds:
                        description: IDs of the disks from which the partition replicas need to be moved.
                        items:
                          type: integer
                        minItems: 1
                        type: array
                    type: object
                  minItems: 1
                  type: array
                rebalanceDisk:
                  description: Enables intra-broker disk balancing, which balances disk space utilization between disks on the same broker. Only applies to Kafka deployments that use JBOD storage with multiple disks. When enabled, inter-broker balancing is disabled. Default is false.
                  type: boolean
                replicaMovementStrategies:
                  description: A list of strategy class names used to determine the execution order for the replica movements in the generated optimization proposal. By default BaseReplicaMovementStrategy is used, which will execute the replica movements in the order that they were generated.
                  items:
                    type: string
                  type: array
                replicationThrottle:
                  description: The upper bound, in bytes per second, on the bandwidth used to move replicas. There is no limit by default.
                  minimum: 0
                  type: integer
                skipHardGoalCheck:
                  description: Whether to allow the hard goals specified in the Kafka CR to be skipped in optimization proposal generation. This can be useful when some of those hard goals are preventing a balance solution being found. Default is false.
                  type: boolean
              type: object
            status:
              description: The status of the Kafka rebalance.
              properties:
                conditions:
                  description: List of status conditions.
                  items:
                    properties:
                      lastTransitionTime:
                        description: Last time the condition of a type changed from one status to another. The required format is 'yyyy-MM-ddTHH:mm:ssZ', in the UTC time zone.
                        type: string
                      message:
                        description: Human-readable message indicating details about the condition's last transition.
                        type: string
                      reason:
                        description: The reason for the condition's last transition (a single word in CamelCase).
                        type: string
                      status:
                        description: The status of the condition, either True, False or Unknown.
                        type: string
                      type:
                        description: The unique identifier of a condition, used to distinguish between other conditions in the resource.
                        type: string
                    type: object
                  type: array
                observedGeneration:
                  description: The generation of the CRD that was last reconciled by the operator.
                  type: integer
                optimizationResult:
                  description: A JSON object describing the optimization result.
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                sessionId:
                  description: The session identifier for requests to Cruise Control pertaining to this KafkaRebalance resource. This is used by the Kafka Rebalance operator to track the status of ongoing rebalancing operations.
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    app: strimzi
    strimzi.io/crd-install: "true"
  name: kafkatopics.kafka.strimzi.io
spec:
  conversion:
    strategy: None
  group: kafka.strimzi.io
  names:
    categories:
      - strimzi
    kind: KafkaTopic
    listKind: KafkaTopicList
    plural: kafkatopics
    shortNames:
      - kt
    singular: kafkatopic
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - description: The name of the Kafka cluster this topic belongs to
          jsonPath: .metadata.labels.strimzi\.io/cluster
          name: Cluster
          type: string
        - description: The desired number of partitions in the topic
          jsonPath: .spec.partitions
          name: Partitions
          type: integer
        - description: The desired number of replicas of each partition
          jsonPath: .spec.replicas
          name: Replication factor
          type: integer
        - description: The state of the custom resource
          jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
      name: v1beta2
      schema:
        openAPIV3Schema:
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: The specification of the topic.
              properties:
                config:
                  description: The topic configuration.
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                partitions:
                  description: The number of partitions the topic should have. This cannot be decreased after topic creation. It can be increased after topic creation, but it is important to understand the consequences that has, especially for topics with semantic partitioning. When absent this will default to the broker configuration for `num.partitions`.
                  minimum: 1
                  type: integer
                replicas:
                  description: The number of replicas the topic should have. When absent this will default to the broker configuration for `default.replication.factor`.
                  maximum: 32767
                  minimum: 1
                  type: integer
                topicName:
                  description: The name of the topic. When absent this will default to the metadata.name of the topic. It is recommended to not set this unless the topic name is not a valid Kubernetes resource name.
                  type: string
              type: object
            status:
              description: The status of the topic.
              properties:
                conditions:
                  description: List of status conditions.
                  items:
                    properties:
                      lastTransitionTime:
                        description: Last time the condition of a type changed from one status to another. The required format is 'yyyy-MM-ddTHH:mm:ssZ', in the UTC time zone.
                        type: string
                      message:
                        description: Human-readable message indicating details about the condition's last transition.
                        type: string
                      reason:
                        description: The reason for the condition's last transition (a single word in CamelCase).
                        type: string
                      status:
                        description: The status of the condition, either True, False or Unknown.
                        type: string
                      type:
                        description: The unique identifier of a condition, used to distinguish between other conditions in the resource.
                        type: string
                    type: object
                  type: array
                observedGeneration:
                  description: The generation of the CRD that was last reconciled by the operator.
                  type: integer
                replicasChange:
                  description: Replication factor change status.
                  properties:
                    message:
                      description: Message for the user related to the replicas change request. This may contain transient error messages that would disappear on periodic reconciliations.
                      type: string
                    sessionId:
                      description: The session identifier for replicas change requests pertaining to this KafkaTopic resource. This is used by the Topic Operator to track the status of `ongoing` replicas change operations.
                      type: string
                    state:
                      description: Current state of the replicas change operation. This can be `pending`, when the change has been requested, or `ongoing`, when the change has been successfully submitted to Cruise Control.
                      enum:
                        - pending
                        - ongoing
                      type: string
                    targetReplicas:
                      description: The target replicas value requested by the user. This may be different from .spec.replicas when a change is ongoing.
                      type: integer
                  type: object
                topicId:
                  description: The topic's id. For a KafkaTopic with the ready condition, this will change only if the topic gets deleted and recreated with the same name.
                  type: string
                topicName:
                  description: Topic name.
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
    - additionalPrinterColumns:
        - description: The name of the Kafka cluster this topic belongs to
          jsonPath: .metadata.labels.strimzi\.io/cluster
          name: Cluster
          type: string
        - description: The desired number of partitions in the topic
          jsonPath: .spec.partitions
          name: Partitions
          type: integer
        - description: The desired number of replicas of each partition
          jsonPath: .spec.replicas
          name: Replication factor
          type: integer
        - description: The state of the custom resource
          jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
      name: v1beta1
      schema:
        openAPIV3Schema:
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: The specification of the topic.
              properties:
                config:
                  description: The topic configuration.
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                partitions:
                  description: The number of partitions the topic should have. This cannot be decreased after topic creation. It can be increased after topic creation, but it is important to understand the consequences that has, especially for topics with semantic partitioning. When absent this will default to the broker configuration for `num.partitions`.
                  minimum: 1
                  type: integer
                replicas:
                  description: The number of replicas the topic should have. When absent this will default to the broker configuration for `default.replication.factor`.
                  maximum: 32767
                  minimum: 1
                  type: integer
                topicName:
                  description: The name of the topic. When absent this will default to the metadata.name of the topic. It is recommended to not set this unless the topic name is not a valid Kubernetes resource name.
                  type: string
              type: object
            status:
              description: The status of the topic.
              properties:
                conditions:
                  description: List of status conditions.
                  items:
                    properties:
                      lastTransitionTime:
                        description: Last time the condition of a type changed from one status to another. The required format is 'yyyy-MM-ddTHH:mm:ssZ', in the UTC time zone.
                        type: string
                      message:
                        description: Human-readable message indicating details about the condition's last transition.
                        type: string
                      reason:
                        description: The reason for the condition's last transition (a single word in CamelCase).
                        type: string
                      status:
                        description: The status of the condition, either True, False or Unknown.
                        type: string
                      type:
                        description: The unique identifier of a condition, used to distinguish between other conditions in the resource.
                        type: string
                    type: object
                  type: array
                observedGeneration:
                  description: The generation of the CRD that was last reconciled by the operator.
                  type: integer
                replicasChange:
                  description: Replication factor change status.
                  properties:
                    message:
                      description: Message for the user related to the replicas change request. This may contain transient error messages that would disappear on periodic reconciliations.
                      type: string
                    sessionId:
                      description: The session identifier for replicas change requests pertaining to this KafkaTopic resource. This is used by the Topic Operator to track the status of `ongoing` replicas change operations.
                      type: string
                    state:
                      description: Current state of the replicas change operation. This can be `pending`, when the change has been requested, or `ongoing`, when the change has been successfully submitted to Cruise Control.
                      enum:
                        - pending
                        - ongoing
                      type: string
                    targetReplicas:
                      description: The target replicas value requested by the user. This may be different from .spec.replicas when a change is ongoing.
                      type: integer
                  type: object
                topicId:
                  description: The topic's id. For a KafkaTopic with the ready condition, this will change only if the topic gets deleted and recreated with the same name.
                  type: string
                topicName:
                  description: Topic name.
                  type: string
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}
    - additionalPrinterColumns:
        - description: The name of the Kafka cluster this topic belongs to
          jsonPath: .metadata.labels.strimzi\.io/cluster
          name: Cluster
          type: string
        - description: The desired number of partitions in the topic
          jsonPath: .spec.partitions
          name: Partitions
          type: integer
        - description: The desired number of replicas of each partition
          jsonPath: .spec.replicas
          name: Replication factor
          type: integer
        - description: The state of the custom resource
          jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
      name: v1alpha1
      schema:
        openAPIV3Schema:
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: The specification of the topic.
              properties:
                config:
                  description: The topic configuration.
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                partitions:
                  description: The number of partitions the topic should have. This cannot be decreased after topic creation. It can be increased after topic creation, but it is important to understand the consequences that has, especially for topics with semantic partitioning. When absent this will default to the broker configuration for `num.partitions`.
                  minimum: 1
                  type: integer
                replicas:
                  description: The number of replicas the topic should have. When absent this will default to the broker configuration for `default.replication.factor`.
                  maximum: 32767
                  minimum: 1
                  type: integer
                topicName:
                  description: The name of the topic. When absent this will default to the metadata.name of the topic. It is recommended to not set this unless the topic name is not a valid Kubernetes resource name.
                  type: string
              type: object
            status:
              description: The status of the topic.
              properties:
                conditions:
                  description: List of status conditions.
                  items:
                    properties:
                      lastTransitionTime:
                        description: Last time the condition of a type changed from one status to another. The required format is 'yyyy-MM-ddTHH:mm:ssZ', in the UTC time zone.
                        type: string
                      message:
                        description: Human-readable message indicating details about the condition's last transition.
                        type: string
                      reason:
                        description: The reason for the condition's last transition (a single word in CamelCase).
                        type: string
                      status:
                        description: The status of the condition, either True, False or Unknown.
                        type: string
                      type:
                        description: The unique identifier of a condition, used to distinguish between other conditions in the resource.
                        type: string
                    type: object
                  type: array
                observedGeneration:
                  description: The generation of the CRD that was last reconciled by the operator.
                  type: integer
                replicasChange:
                  description: Replication factor change status.
                  properties:
                    message:
                      description: Message for the user related to the replicas change request. This may contain transient error messages that would disappear on periodic reconciliations.
                      type: string
                    sessionId:
                      description: The session identifier for replicas change requests pertaining to this KafkaTopic resource. This is used by the Topic Operator to track the status of `ongoing` replicas change operations.
                      type: string
                    state:
                      description: Current state of the replicas change operation. This can be `pending`, when the change has been requested, or `ongoing`, when the change has been successfully submitted to Cruise Control.
                      enum:
                        - pending
                        - ongoing
                      type: string
                    targetReplicas:
                      description: The target replicas value requested by the user. This may be different from .spec.replicas when a change is ongoing.
                      type: integer
                  type: object
                topicId:
                  description: The topic's id. For a KafkaTopic with the ready condition, this will change only if the topic gets deleted and recreated with the same name.
                  type: string
                topicName:
                  description: Topic name.
                  type: string
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    app: strimzi
    strimzi.io/crd-install: "true"
  name: kafkausers.kafka.strimzi.io
spec:
  conversion:
    strategy: None
  group: kafka.strimzi.io
  names:
    categories:
      - strimzi
    kind: KafkaUser
    listKind: KafkaUserList
    plural: kafkausers
    shortNames:
      - ku
    singular: kafkauser
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - description: The name of the Kafka cluster this user belongs to
          jsonPath: .metadata.labels.strimzi\.io/cluster
          name: Cluster
          type: string
        - description: How the user is authenticated
          jsonPath: .spec.authentication.type
          name: Authentication
          type: string
        - description: How the user is authorised
          jsonPath: .spec.authorization.type
          name: Authorization
          type: string
        - description: The state of the custom resource
          jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
      name: v1beta2
      schema:
        openAPIV3Schema:
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: The specification of the user.
              properties:
                authentication:
                  description: "Authentication mechanism enabled for this Kafka user. The supported authentication mechanisms are `scram-sha-512`, `tls`, and `tls-external`. \n\n* `scram-sha-512` generates a secret with SASL SCRAM-SHA-512 credentials.\n* `tls` generates a secret with user certificate for mutual TLS authentication.\n* `tls-external` does not generate a user certificate.   But prepares the user for using mutual TLS authentication using a user certificate generated outside the User Operator.\n  ACLs and quotas set for this user are configured in the `CN=<username>` format.\n\nAuthentication is optional. If authentication is not configured, no credentials are generated. ACLs and quotas set for the user are configured in the `<username>` format suitable for SASL authentication."
                  properties:
                    password:
                      description: Specify the password for the user. If not set, a new password is generated by the User Operator.
                      properties:
                        valueFrom:
                          description: Secret from which the password should be read.
                          properties:
                            secretKeyRef:
                              description: Selects a key of a Secret in the resource's namespace.
                              properties:
                                key:
                                  type: string
                                name:
                                  type: string
                                optional:
                                  type: boolean
                              type: object
                          type: object
                      required:
                        - valueFrom
                      type: object
                    type:
                      description: Authentication type.
                      enum:
                        - tls
                        - tls-external
                        - scram-sha-512
                      type: string
                  required:
                    - type
                  type: object
                authorization:
                  description: Authorization rules for this Kafka user.
                  properties:
                    acls:
                      description: List of ACL rules which should be applied to this user.
                      items:
                        properties:
                          host:
                            description: The host from which the action described in the ACL rule is allowed or denied. If not set, it defaults to `*`, allowing or denying the action from any host.
                            type: string
                          operation:
                            description: 'Operation which will be allowed or denied. Supported operations are: Read, Write, Create, Delete, Alter, Describe, ClusterAction, AlterConfigs, DescribeConfigs, IdempotentWrite and All.'
                            enum:
                              - Read
                              - Write
                              - Create
                              - Delete
                              - Alter
                              - Describe
                              - ClusterAction
                              - AlterConfigs
                              - DescribeConfigs
                              - IdempotentWrite
                              - All
                            type: string
                          operations:
                            description: 'List of operations to allow or deny. Supported operations are: Read, Write, Create, Delete, Alter, Describe, ClusterAction, AlterConfigs, DescribeConfigs, IdempotentWrite and All. Only certain operations work with the specified resource.'
                            items:
                              enum:
                                - Read
                                - Write
                                - Create
                                - Delete
                                - Alter
                                - Describe
                                - ClusterAction
                                - AlterConfigs
                                - DescribeConfigs
                                - IdempotentWrite
                                - All
                              type: string
                            type: array
                          resource:
                            description: Indicates the resource for which given ACL rule applies.
                            properties:
                              name:
                                description: Name of resource for which given ACL rule applies. Can be combined with `patternType` field to use prefix pattern.
                                type: string
                              patternType:
                                description: Describes the pattern used in the resource field. The supported types are `literal` and `prefix`. With `literal` pattern type, the resource field will be used as a definition of a full name. With `prefix` pattern type, the resource name will be used only as a prefix. Default value is `literal`.
                                enum:
                                  - literal
                                  - prefix
                                type: string
                              type:
                                description: Resource type. The available resource types are `topic`, `group`, `cluster`, and `transactionalId`.
                                enum:
                                  - topic
                                  - group
                                  - cluster
                                  - transactionalId
                                type: string
                            required:
                              - type
                            type: object
                          type:
                            description: The type of the rule. Currently the only supported type is `allow`. ACL rules with type `allow` are used to allow user to execute the specified operations. Default value is `allow`.
                            enum:
                              - allow
                              - deny
                            type: string
                        required:
                          - resource
                        type: object
                      type: array
                    type:
                      description: Authorization type. Currently the only supported type is `simple`. `simple` authorization type uses the Kafka Admin API for managing the ACL rules.
                      enum:
                        - simple
                      type: string
                  required:
                    - acls
                    - type
                  type: object
                quotas:
                  description: Quotas on requests to control the broker resources used by clients. Network bandwidth and request rate quotas can be enforced.Kafka documentation for Kafka User quotas can be found at http://kafka.apache.org/documentation/#design_quotas.
                  properties:
                    consumerByteRate:
                      description: A quota on the maximum bytes per-second that each client group can fetch from a broker before the clients in the group are throttled. Defined on a per-broker basis.
                      minimum: 0
                      type: integer
                    controllerMutationRate:
                      description: A quota on the rate at which mutations are accepted for the create topics request, the create partitions request and the delete topics request. The rate is accumulated by the number of partitions created or deleted.
                      minimum: 0
                      type: number
                    producerByteRate:
                      description: A quota on the maximum bytes per-second that each client group can publish to a broker before the clients in the group are throttled. Defined on a per-broker basis.
                      minimum: 0
                      type: integer
                    requestPercentage:
                      description: A quota on the maximum CPU utilization of each client group as a percentage of network and I/O threads.
                      minimum: 0
                      type: integer
                  type: object
                template:
                  description: Template to specify how Kafka User `Secrets` are generated.
                  properties:
                    secret:
                      description: Template for KafkaUser resources. The template allows users to specify how the `Secret` with password or TLS certificates is generated.
                      properties:
                        metadata:
                          description: Metadata applied to the resource.
                          properties:
                            annotations:
                              additionalProperties:
                                type: string
                              description: Annotations added to the Kubernetes resource.
                              type: object
                            labels:
                              additionalProperties:
                                type: string
                              description: Labels added to the Kubernetes resource.
                              type: object
                          type: object
                      type: object
                  type: object
              type: object
            status:
              description: The status of the Kafka User.
              properties:
                conditions:
                  description: List of status conditions.
                  items:
                    properties:
                      lastTransitionTime:
                        description: Last time the condition of a type changed from one status to another. The required format is 'yyyy-MM-ddTHH:mm:ssZ', in the UTC time zone.
                        type: string
                      message:
                        description: Human-readable message indicating details about the condition's last transition.
                        type: string
                      reason:
                        description: The reason for the condition's last transition (a single word in CamelCase).
                        type: string
                      status:
                        description: The status of the condition, either True, False or Unknown.
                        type: string
                      type:
                        description: The unique identifier of a condition, used to distinguish between other conditions in the resource.
                        type: string
                    type: object
                  type: array
                observedGeneration:
                  description: The generation of the CRD that was last reconciled by the operator.
                  type: integer
                secret:
                  description: The name of `Secret` where the credentials are stored.
                  type: string
                username:
                  description: Username.
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
    - additionalPrinterColumns:
        - description: The name of the Kafka cluster this user belongs to
          jsonPath: .metadata.labels.strimzi\.io/cluster
          name: Cluster
          type: string
        - description: How the user is authenticated
          jsonPath: .spec.authentication.type
          name: Authentication
          type: string
        - description: How the user is authorised
          jsonPath: .spec.authorization.type
          name: Authorization
          type: string
        - description: The state of the custom resource
          jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
      name: v1beta1
      schema:
        openAPIV3Schema:
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: The specification of the user.
              properties:
                authentication:
                  description: "Authentication mechanism enabled for this Kafka user. The supported authentication mechanisms are `scram-sha-512`, `tls`, and `tls-external`. \n\n* `scram-sha-512` generates a secret with SASL SCRAM-SHA-512 credentials.\n* `tls` generates a secret with user certificate for mutual TLS authentication.\n* `tls-external` does not generate a user certificate.   But prepares the user for using mutual TLS authentication using a user certificate generated outside the User Operator.\n  ACLs and quotas set for this user are configured in the `CN=<username>` format.\n\nAuthentication is optional. If authentication is not configured, no credentials are generated. ACLs and quotas set for the user are configured in the `<username>` format suitable for SASL authentication."
                  properties:
                    password:
                      description: Specify the password for the user. If not set, a new password is generated by the User Operator.
                      properties:
                        valueFrom:
                          description: Secret from which the password should be read.
                          properties:
                            secretKeyRef:
                              description: Selects a key of a Secret in the resource's namespace.
                              properties:
                                key:
                                  type: string
                                name:
                                  type: string
                                optional:
                                  type: boolean
                              type: object
                          type: object
                      required:
                        - valueFrom
                      type: object
                    type:
                      description: Authentication type.
                      enum:
                        - tls
                        - tls-external
                        - scram-sha-512
                      type: string
                  required:
                    - type
                  type: object
                authorization:
                  description: Authorization rules for this Kafka user.
                  properties:
                    acls:
                      description: List of ACL rules which should be applied to this user.
                      items:
                        properties:
                          host:
                            description: The host from which the action described in the ACL rule is allowed or denied. If not set, it defaults to `*`, allowing or denying the action from any host.
                            type: string
                          operation:
                            description: 'Operation which will be allowed or denied. Supported operations are: Read, Write, Create, Delete, Alter, Describe, ClusterAction, AlterConfigs, DescribeConfigs, IdempotentWrite and All.'
                            enum:
                              - Read
                              - Write
                              - Create
                              - Delete
                              - Alter
                              - Describe
                              - ClusterAction
                              - AlterConfigs
                              - DescribeConfigs
                              - IdempotentWrite
                              - All
                            type: string
                          operations:
                            description: 'List of operations to allow or deny. Supported operations are: Read, Write, Create, Delete, Alter, Describe, ClusterAction, AlterConfigs, DescribeConfigs, IdempotentWrite and All. Only certain operations work with the specified resource.'
                            items:
                              enum:
                                - Read
                                - Write
                                - Create
                                - Delete
                                - Alter
                                - Describe
                                - ClusterAction
                                - AlterConfigs
                                - DescribeConfigs
                                - IdempotentWrite
                                - All
                              type: string
                            type: array
                          resource:
                            description: Indicates the resource for which given ACL rule applies.
                            properties:
                              name:
                                description: Name of resource for which given ACL rule applies. Can be combined with `patternType` field to use prefix pattern.
                                type: string
                              patternType:
                                description: Describes the pattern used in the resource field. The supported types are `literal` and `prefix`. With `literal` pattern type, the resource field will be used as a definition of a full name. With `prefix` pattern type, the resource name will be used only as a prefix. Default value is `literal`.
                                enum:
                                  - literal
                                  - prefix
                                type: string
                              type:
                                description: Resource type. The available resource types are `topic`, `group`, `cluster`, and `transactionalId`.
                                enum:
                                  - topic
                                  - group
                                  - cluster
                                  - transactionalId
                                type: string
                            required:
                              - type
                            type: object
                          type:
                            description: The type of the rule. Currently the only supported type is `allow`. ACL rules with type `allow` are used to allow user to execute the specified operations. Default value is `allow`.
                            enum:
                              - allow
                              - deny
                            type: string
                        required:
                          - resource
                        type: object
                      type: array
                    type:
                      description: Authorization type. Currently the only supported type is `simple`. `simple` authorization type uses the Kafka Admin API for managing the ACL rules.
                      enum:
                        - simple
                      type: string
                  required:
                    - acls
                    - type
                  type: object
                quotas:
                  description: Quotas on requests to control the broker resources used by clients. Network bandwidth and request rate quotas can be enforced.Kafka documentation for Kafka User quotas can be found at http://kafka.apache.org/documentation/#design_quotas.
                  properties:
                    consumerByteRate:
                      description: A quota on the maximum bytes per-second that each client group can fetch from a broker before the clients in the group are throttled. Defined on a per-broker basis.
                      minimum: 0
                      type: integer
                    controllerMutationRate:
                      description: A quota on the rate at which mutations are accepted for the create topics request, the create partitions request and the delete topics request. The rate is accumulated by the number of partitions created or deleted.
                      minimum: 0
                      type: number
                    producerByteRate:
                      description: A quota on the maximum bytes per-second that each client group can publish to a broker before the clients in the group are throttled. Defined on a per-broker basis.
                      minimum: 0
                      type: integer
                    requestPercentage:
                      description: A quota on the maximum CPU utilization of each client group as a percentage of network and I/O threads.
                      minimum: 0
                      type: integer
                  type: object
                template:
                  description: Template to specify how Kafka User `Secrets` are generated.
                  properties:
                    secret:
                      description: Template for KafkaUser resources. The template allows users to specify how the `Secret` with password or TLS certificates is generated.
                      properties:
                        metadata:
                          description: Metadata applied to the resource.
                          properties:
                            annotations:
                              additionalProperties:
                                type: string
                              description: Annotations added to the Kubernetes resource.
                              type: object
                            labels:
                              additionalProperties:
                                type: string
                              description: Labels added to the Kubernetes resource.
                              type: object
                          type: object
                      type: object
                  type: object
              type: object
            status:
              description: The status of the Kafka User.
              properties:
                conditions:
                  description: List of status conditions.
                  items:
                    properties:
                      lastTransitionTime:
                        description: Last time the condition of a type changed from one status to another. The required format is 'yyyy-MM-ddTHH:mm:ssZ', in the UTC time zone.
                        type: string
                      message:
                        description: Human-readable message indicating details about the condition's last transition.
                        type: string
                      reason:
                        description: The reason for the condition's last transition (a single word in CamelCase).
                        type: string
                      status:
                        description: The status of the condition, either True, False or Unknown.
                        type: string
                      type:
                        description: The unique identifier of a condition, used to distinguish between other conditions in the resource.
                        type: string
                    type: object
                  type: array
                observedGeneration:
                  description: The generation of the CRD that was last reconciled by the operator.
                  type: integer
                secret:
                  description: The name of `Secret` where the credentials are stored.
                  type: string
                username:
                  description: Username.
                  type: string
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}
    - additionalPrinterColumns:
        - description: The name of the Kafka cluster this user belongs to
          jsonPath: .metadata.labels.strimzi\.io/cluster
          name: Cluster
          type: string
        - description: How the user is authenticated
          jsonPath: .spec.authentication.type
          name: Authentication
          type: string
        - description: How the user is authorised
          jsonPath: .spec.authorization.type
          name: Authorization
          type: string
        - description: The state of the custom resource
          jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
      name: v1alpha1
      schema:
        openAPIV3Schema:
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: The specification of the user.
              properties:
                authentication:
                  description: "Authentication mechanism enabled for this Kafka user. The supported authentication mechanisms are `scram-sha-512`, `tls`, and `tls-external`. \n\n* `scram-sha-512` generates a secret with SASL SCRAM-SHA-512 credentials.\n* `tls` generates a secret with user certificate for mutual TLS authentication.\n* `tls-external` does not generate a user certificate.   But prepares the user for using mutual TLS authentication using a user certificate generated outside the User Operator.\n  ACLs and quotas set for this user are configured in the `CN=<username>` format.\n\nAuthentication is optional. If authentication is not configured, no credentials are generated. ACLs and quotas set for the user are configured in the `<username>` format suitable for SASL authentication."
                  properties:
                    password:
                      description: Specify the password for the user. If not set, a new password is generated by the User Operator.
                      properties:
                        valueFrom:
                          description: Secret from which the password should be read.
                          properties:
                            secretKeyRef:
                              description: Selects a key of a Secret in the resource's namespace.
                              properties:
                                key:
                                  type: string
                                name:
                                  type: string
                                optional:
                                  type: boolean
                              type: object
                          type: object
                      required:
                        - valueFrom
                      type: object
                    type:
                      description: Authentication type.
                      enum:
                        - tls
                        - tls-external
                        - scram-sha-512
                      type: string
                  required:
                    - type
                  type: object
                authorization:
                  description: Authorization rules for this Kafka user.
                  properties:
                    acls:
                      description: List of ACL rules which should be applied to this user.
                      items:
                        properties:
                          host:
                            description: The host from which the action described in the ACL rule is allowed or denied. If not set, it defaults to `*`, allowing or denying the action from any host.
                            type: string
                          operation:
                            description: 'Operation which will be allowed or denied. Supported operations are: Read, Write, Create, Delete, Alter, Describe, ClusterAction, AlterConfigs, DescribeConfigs, IdempotentWrite and All.'
                            enum:
                              - Read
                              - Write
                              - Create
                              - Delete
                              - Alter
                              - Describe
                              - ClusterAction
                              - AlterConfigs
                              - DescribeConfigs
                              - IdempotentWrite
                              - All
                            type: string
                          operations:
                            description: 'List of operations to allow or deny. Supported operations are: Read, Write, Create, Delete, Alter, Describe, ClusterAction, AlterConfigs, DescribeConfigs, IdempotentWrite and All. Only certain operations work with the specified resource.'
                            items:
                              enum:
                                - Read
                                - Write
                                - Create
                                - Delete
                                - Alter
                                - Describe
                                - ClusterAction
                                - AlterConfigs
                                - DescribeConfigs
                                - IdempotentWrite
                                - All
                              type: string
                            type: array
                          resource:
                            description: Indicates the resource for which given ACL rule applies.
                            properties:
                              name:
                                description: Name of resource for which given ACL rule applies. Can be combined with `patternType` field to use prefix pattern.
                                type: string
                              patternType:
                                description: Describes the pattern used in the resource field. The supported types are `literal` and `prefix`. With `literal` pattern type, the resource field will be used as a definition of a full name. With `prefix` pattern type, the resource name will be used only as a prefix. Default value is `literal`.
                                enum:
                                  - literal
                                  - prefix
                                type: string
                              type:
                                description: Resource type. The available resource types are `topic`, `group`, `cluster`, and `transactionalId`.
                                enum:
                                  - topic
                                  - group
                                  - cluster
                                  - transactionalId
                                type: string
                            required:
                              - type
                            type: object
                          type:
                            description: The type of the rule. Currently the only supported type is `allow`. ACL rules with type `allow` are used to allow user to execute the specified operations. Default value is `allow`.
                            enum:
                              - allow
                              - deny
                            type: string
                        required:
                          - resource
                        type: object
                      type: array
                    type:
                      description: Authorization type. Currently the only supported type is `simple`. `simple` authorization type uses the Kafka Admin API for managing the ACL rules.
                      enum:
                        - simple
                      type: string
                  required:
                    - acls
                    - type
                  type: object
                quotas:
                  description: Quotas on requests to control the broker resources used by clients. Network bandwidth and request rate quotas can be enforced.Kafka documentation for Kafka User quotas can be found at http://kafka.apache.org/documentation/#design_quotas.
                  properties:
                    consumerByteRate:
                      description: A quota on the maximum bytes per-second that each client group can fetch from a broker before the clients in the group are throttled. Defined on a per-broker basis.
                      minimum: 0
                      type: integer
                    controllerMutationRate:
                      description: A quota on the rate at which mutations are accepted for the create topics request, the create partitions request and the delete topics request. The rate is accumulated by the number of partitions created or deleted.
                      minimum: 0
                      type: number
                    producerByteRate:
                      description: A quota on the maximum bytes per-second that each client group can publish to a broker before the clients in the group are throttled. Defined on a per-broker basis.
                      minimum: 0
                      type: integer
                    requestPercentage:
                      description: A quota on the maximum CPU utilization of each client group as a percentage of network and I/O threads.
                      minimum: 0
                      type: integer
                  type: object
                template:
                  description: Template to specify how Kafka User `Secrets` are generated.
                  properties:
                    secret:
                      description: Template for KafkaUser resources. The template allows users to specify how the `Secret` with password or TLS certificates is generated.
                      properties:
                        metadata:
                          description: Metadata applied to the resource.
                          properties:
                            annotations:
                              additionalProperties:
                                type: string
                              description: Annotations added to the Kubernetes resource.
                              type: object
                            labels:
                              additionalProperties:
                                type: string
                              description: Labels added to the Kubernetes resource.
                              type: object
                          type: object
                      type: object
                  type: object
              type: object
            status:
              description: The status of the Kafka User.
              properties:
                conditions:
                  description: List of status conditions.
                  items:
                    properties:
                      lastTransitionTime:
                        description: Last time the condition of a type changed from one status to another. The required format is 'yyyy-MM-ddTHH:mm:ssZ', in the UTC time zone.
                        type: string
                      message:
                        description: Human-readable message indicating details about the condition's last transition.
                        type: string
                      reason:
                        description: The reason for the condition's last transition (a single word in CamelCase).
                        type: string
                      status:
                        description: The status of the condition, either True, False or Unknown.
                        type: string
                      type:
                        description: The unique identifier of a condition, used to distinguish between other conditions in the resource.
                        type: string
                    type: object
                  type: array
                observedGeneration:
                  description: The generation of the CRD that was last reconciled by the operator.
                  type: integer
                secret:
                  description: The name of `Secret` where the credentials are stored.
                  type: string
                username:
                  description: Username.
                  type: string
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}
